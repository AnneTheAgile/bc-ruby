bc-ruby\doc\status.txt
[]add ; 7.55p MS  Win Azure outperforms amazon ec2 on average by 3x; read cloud spectator report. 
http://www.windowsazure.com/en-us/campaigns/azure-vs-aws/

[x]Reran Rspec to get new indents, 140121t.
==========================================================
.[]Version 1.04 is a wrap. 9.25p.
==========================================================
.[]URLS-LIST 2014-01-20 
==========================================================
1.[] ; X.attribute of subject - Subject - RSpec Core - RSpec - Relish
https://www.relishapp.com/rspec/rspec-core/v/2-0/docs/subject/attribute-of-subject
attribute of subject - Subject - RSpec Core - RSpec - Relish

==========================================================
2.[] ; X.Type Check matchers - RSpec Expectations - RSpec - Relish
https://www.relishapp.com/rspec/rspec-expectations/v/2-0/docs/matchers/type-check-matchers
Type Check matchers - RSpec Expectations - RSpec - Relish

==========================================================
3.[] ; X.Built in matchers - RSpec Expectations - RSpec - Relish
https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
Built in matchers - RSpec Expectations - RSpec - Relish

==========================================================
4.[] ; X.block - Use of yield and return in Ruby - Stack Overflow
http://stackoverflow.com/questions/10451060/use-of-yield-and-return-in-ruby
block - Use of yield and return in Ruby - Stack Overflow

==========================================================
5.[] ; X.Should I define a main method in my ruby scripts? - Stack Overflow
http://stackoverflow.com/questions/582686/should-i-define-a-main-method-in-my-ruby-scripts
Should I define a main method in my ruby scripts? - Stack Overflow

==========================================================
6.[] ; X.Class: Array (Ruby 2.1.0)
http://www.ruby-doc.org/core-2.1.0/Array.html#method-i-collect
Class: Array (Ruby 2.1.0)

==========================================================
7.[] ; X.Class: Hash (Ruby 1.9.3)
http://www.ruby-doc.org/core-1.9.3/Hash.html
Class: Hash (Ruby 1.9.3)

==========================================================
8.[] ; X.Jay Fields' Thoughts: Ruby: inject
http://blog.jayfields.com/2008/03/ruby-inject.html
Jay Fields' Thoughts: Ruby: inject

==========================================================
9.[] ; X.Ruby: inject issue when turning array into hash - Stack Overflow
http://stackoverflow.com/questions/10575052/ruby-inject-issue-when-turning-array-into-hash
Ruby: inject issue when turning array into hash - Stack Overflow

==========================================================
10.[] ; X.each_with_object (Enumerable) - APIdock
http://apidock.com/ruby/Enumerable/each_with_object
each_with_object (Enumerable) - APIdock

==========================================================
11.[] ; X.Ruby Cookbook > Arrays > Building Up a Hash Using Injection : Safari Books Online
http://my.safaribooksonline.com/book/web-development/ruby/0596523696/arrays/rubyckbk-chp-4-sect-12
Ruby Cookbook > Arrays > Building Up a Hash Using Injection : Safari Books Online

==========================================================
12.[] ; X.each_with_object (Enumerable) - APIdock
http://apidock.com/rails/Enumerable/each_with_object
each_with_object (Enumerable) - APIdock

==========================================================
13.[] ; X.Why use Ruby's attr_accessor, attr_reader and attr_writer? - Stack Overflow
http://stackoverflow.com/questions/5046831/why-use-rubys-attr-accessor-attr-reader-and-attr-writer
Why use Ruby's attr_accessor, attr_reader and attr_writer? - Stack Overflow

==========================================================
14.[] ; X.ruby - Why does Array.to_s return brackets? - Stack Overflow
http://stackoverflow.com/questions/8829600/why-does-array-to-s-return-brackets
ruby - Why does Array.to_s return brackets? - Stack Overflow

==========================================================
15.[] ; X.java - Intellij IDEA 12 slow response - Stack Overflow
http://stackoverflow.com/questions/14173637/intellij-idea-12-slow-response
java - Intellij IDEA 12 slow response - Stack Overflow

==========================================================
16.[] ; X.ruby - '+' can't convert Fixnum into String (TypeError) - Stack Overflow
http://stackoverflow.com/questions/14895594/cant-convert-fixnum-into-string-typeerror
ruby - '+' can't convert Fixnum into String (TypeError) - Stack Overflow

==========================================================
17.[] ; X.The Ruby Programming Language - David Flanagan, Yukihiro Matsumoto - Google Books
http://books.google.com/books?id=jcUbTcr5XWwC&pg=PA145&lpg=PA145&dq=ruby+yield+use+second+block&source=bl&ots=fIJgte3tiC&sig=OJrckpw3W05lHav4QJAMUIpliQo&hl=en&sa=X&ei=FI3dUpy_FpSrsQSop4DgDQ&ved=0CGsQ6AEwBw#v=onepage&q=ruby%20yield%20use%20second%20block&f=false
The Ruby Programming Language - David Flanagan, Yukihiro Matsumoto - Google Books

==========================================================
18.[] ; X.Ruby 2.0 Works Hard So You Can Be Lazy - Pat Shaughnessy
http://patshaughnessy.net/2013/4/3/ruby-2-0-works-hard-so-you-can-be-lazy
Ruby 2.0 Works Hard So You Can Be Lazy - Pat Shaughnessy

==========================================================
19.[] ; X.Ruby Blocks - yield Statements
http://www.tutorialspoint.com/ruby/ruby_blocks.htm
Ruby Blocks - yield Statements

==========================================================
20.[] ; X.ruby - What's Your Favourite IRB Trick? - Stack Overflow
http://stackoverflow.com/questions/123494/whats-your-favourite-irb-trick
ruby - What's Your Favourite IRB Trick? - Stack Overflow

==========================================================
21.[] ; X.Module: Coverage (Ruby 1.9.3)
http://www.ruby-doc.org/stdlib-1.9.3/libdoc/coverage/rdoc/Coverage.html
Module: Coverage (Ruby 1.9.3)

==========================================================
22.[] ; X.Code Coverage
http://www.jetbrains.com/ruby/webhelp/code-coverage.html
Code Coverage

==========================================================
23.[] ; X.The Ruby Toolbox - Code Metrics
https://www.ruby-toolbox.com/categories/code_metrics
The Ruby Toolbox - Code Metrics

==========================================================
24.[] ; X.simplecov/README.md at a38915db28552cf1a51748f104d34d86a2e897bc · colszowka/simplecov
https://github.com/colszowka/simplecov/blob/a38915db28552cf1a51748f104d34d86a2e897bc/README.md
simplecov/README.md at a38915db28552cf1a51748f104d34d86a2e897bc · colszowka/simplecov

==========================================================
25.[] ; X.ruby-toolbox how is popularity metric computed - Google Search
https://www.google.com/search?q=ruby-toolbox+what+is+popularity+metric&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:en-US:official&client=firefox-a#q=ruby-toolbox+how+is+popularity+metric+computed&rls=org.mozilla:en-US:official
ruby-toolbox how is popularity metric computed - Google Search

==========================================================
26.[] ; X.The Ruby Toolbox - metric_abc: Calculates ABC metric for Ruby 1.9. Just like Flog but much more dull.
https://www.ruby-toolbox.com/projects/metric_abc/popularity
The Ruby Toolbox - metric_abc: Calculates ABC metric for Ruby 1.9. Just like Flog but much more dull.

==========================================================
27.[] ; X.The Ruby Toolbox - MetricFu: Code metrics from Flog, Flay, Saikuro, Churn, Reek, Roodi, Code Statistics, and Rails...
https://www.ruby-toolbox.com/projects/metric_fu
The Ruby Toolbox - MetricFu: Code metrics from Flog, Flay, Saikuro, Churn, Reek, Roodi, Code Statistics, and Rails...

==========================================================
28.[] ; X.The Ruby Toolbox - Rails best practices: a code metric tool for rails codes, written in Ruby.
https://www.ruby-toolbox.com/projects/rails_best_practices
The Ruby Toolbox - Rails best practices: a code metric tool for rails codes, written in Ruby.

==========================================================
29.[] ; X.Code coverage for bc-ruby
file:///C:/amsrc/bc-ruby/coverage/index.html#_AllFiles
Code coverage for bc-ruby

==========================================================
30.[] ; X.Class: Terminal::Terminal
file:///C:/amsrc/bc-ruby/doc/Terminal/Terminal.html
Class: Terminal::Terminal

==========================================================
31.[] ; X.Introduction | Semantic UI
http://semantic-ui.com/
Introduction | Semantic UI

==========================================================
32.[] ; X.timoxley/best-practices
https://github.com/timoxley/best-practices
timoxley/best-practices

==========================================================
33.[] ; X.Dev. Productivity: Version Control & Source Code Management | zeroturnaround.com
http://zeroturnaround.com/rebellabs/devprod-report-revisited-version-control-systems-in-2013/
Dev. Productivity: Version Control & Source Code Management | zeroturnaround.com

==========================================================
34.[] ; X.Contributors to habnabit/vcversioner
https://github.com/habnabit/vcversioner/graphs/contributors
Contributors to habnabit/vcversioner

==========================================================
35.[] ; X.HaskellForCats/HaskellForCats
https://github.com/HaskellForCats/HaskellForCats
HaskellForCats/HaskellForCats

==========================================================
36.[] ; X.habnabit/vcversioner • Sourcegraph
https://sourcegraph.com/github.com/habnabit/vcversioner
habnabit/vcversioner • Sourcegraph

==========================================================
1.[x] WORKS; X.Code coverage
    it 'Code Review of RSpect Test coverage can pass 85%.' do
      pending "Running Ruby 1.9 Coverage does create an array but need results of Rspec - Ask Advice."
      # Official doc; was able to require, run
      # http://www.ruby-doc.org/stdlib-1.9.3/libdoc/coverage/rdoc/Coverage.html
      # Per RubyMine CodeCoverage needs set up and is version dependent, needs ruby 1.9
      # http://www.jetbrains.com/ruby/webhelp/code-coverage.html
      # Code coverage is supported for Ruby 1.9 and is enabled by the simplecov (recommended) or rcov gems, which should be installed for your project.
      # 2011.09 http://www.stormconsultancy.co.uk/blog/development/tools-plugins/generating-code-coverage-metrics-for-a-ruby-on-rails-project-with-simplecov/
      # LIST https://www.ruby-toolbox.com/categories/code_metrics
      # DEFN SimpleCov runs on top of ruby 1.9 built-in.
      # https://github.com/colszowka/simplecov
    end
==========================================================
1.[] ; X.Code coverage for bc-ruby
file:///C:/amsrc/bc-ruby/coverage/index.html#_AllFiles
Code coverage for bc-ruby

All Files (97.76% covered at 16.93 hits/line)
9 files in total. 580 relevant lines. 567 lines covered and 13 lines missed
Search:
File 	% covered 	Lines 	Relevant Lines 	Lines covered 	Lines missed 	Avg. Hits / Line
spec/lib/custom_stdout_matcher.rb 	82.35 % 	36 	17 	14 	3 	5.8
lib/terminal.rb 	91.3 % 	123 	69 	63 	6 	5.1
lib/money.rb 	97.14 % 	74 	35 	34 	1 	149.8
spec/lib/terminal_spec.rb 	97.74 % 	256 	133 	130 	3 	1.5
lib/cart.rb 	100.0 % 	52 	27 	27 	0 	13.1
lib/store.rb 	100.0 % 	136 	70 	70 	0 	46.2
spec/lib/cart_spec.rb 	100.0 % 	107 	74 	74 	0 	1.6
spec/lib/money_spec.rb 	100.0 % 	96 	58 	58 	0 	1.5
spec/lib/store_spec.rb 	100.0 % 	172 	97 	97 	0 	1.4
Showing 1 to 9 of 9 entries
Generated by simplecov v0.8.2 and simplecov-html v0.8.0
using bc-ruby:4036 
==========================================================
1.[]Ruby-tip; Rubymine made Coverage report on Rspec just by clicking after installed Gem SimpleCov 0.8 today 2014-01-20.; This was PARTIAL ; X.Code coverage for bc-ruby
file:///C:/amsrc/bc-ruby/coverage/index.html#_AllFiles
Code coverage for bc-ruby

All Files (94.66% covered at 9.67 hits/line)
4 files in total. 206 relevant lines. 195 lines covered and 11 lines missed
Search:
File 	% covered 	Lines 	Relevant Lines 	Lines covered 	Lines missed 	Avg. Hits / Line
lib/money.rb 	85.71 % 	74 	35 	30 	5 	26.5
lib/store.rb 	91.43 % 	136 	70 	64 	6 	11.0
lib/cart.rb 	100.0 % 	52 	27 	27 	0 	6.5
spec/lib/cart_spec.rb 	100.0 % 	107 	74 	74 	0 	1.6
Showing 1 to 4 of 4 entries

===========================================================
.[]Ruby-tip; To generate API Doc for project; On windows, in root, $ rdoc.bat ./lib
terminal ; 
    it 'Code Review of RDoc API Documentation can pass.' do
      pending "API doc does show up in RubyMine (Ctrl-Space Intellisense) but possibly the format is not generic and definitely need a tool to output the html."
      # 1.IDE Rubymine
      # http://www.jetbrains.com/ruby/webhelp/creating-documentation-comments.html
      # 2.Rdoc now part of Ruby?
      # http://rdoc.sourceforge.net/rd/index.html
      # Ruby-Doc DEFN: If you use RDtool to document source, you place markup between =begin/=end pairs. RDoc on the other hand parses source files, extracting class, module, attribute, and method definitions.
      # Rdoc Project now part of Ruby per;
      # http://sourceforge.net/projects/rdoc/files/
      # But still github
      # https://github.com/rdoc/rdoc
      # 3.SO says to install run gem rdoc
      # http://stackoverflow.com/questions/3152857/how-to-rebuild-rdoc-for-all-the-installed-gems
      # 4.Correct tutorial; should be able to call ruby rdoc ./lib but cannot; also he tells about Yard and Rake for rdoc.
      # http://www.mikeperham.com/2010/12/16/using-rdoc/
    end
===========================================================
.[]Ruby-tip; To generate API Doc for project; On windows, in root, $ rdoc.bat ./lib

Generating Darkfish format into C:/amsrc/bc-ruby/doc...
Files:       4

Classes:     4 ( 0 undocumented)
Modules:     4 ( 4 undocumented)
Constants:   0 ( 0 undocumented)
Attributes:  8 ( 8 undocumented)
Methods:    48 (29 undocumented)

Total:      64 (41 undocumented)
 35.94% documented

Elapsed: 1.4s

win8CPU /cygdrive/c/amsrc/bc-ruby

file:///C:/amsrc/bc-ruby/doc/index.html
RDoc Documentation

This is the API documentation for 'RDoc Documentation'.
Classes/Modules

    Cart
    Cart::Cart
    Money
    Money::Money
    Store
    Store::Store
    Terminal
    Terminal::Terminal

Methods

    ::kPenniesPerDollar — Money::Money
    ::new — Cart::Cart
    ::new — Money::Money
    ::new — Terminal::Terminal
    ::new — Store::Store
    #add — Cart::Cart
    #add — Money::Money
    #add_product — Store::Store
    #add_product_map — Store::Store
    #cartAsMapOfProductsAndQuantities — Cart::Cart
    #clear — Cart::Cart
    #clear_products_list — Store::Store
    #count — Cart::Cart
    #count_products — Store::Store
    #dollarsToPennies — Money::Money
    #find_product — Store::Store
    #find_product? — Store::Store
    #minimal_price_in_dollars — Store::Store
    #penniesToDollars — Money::Money
    #price_in_dollars_for_quantity — Store::Store
    #product_attributes — Store::Store
    #product_list_showing_prices_in_dollars — Store::Store
    #prompt_confirm — Terminal::Terminal
    #prompt_for_cart_item — Terminal::Terminal
    #prompt_for_product — Terminal::Terminal
    #prompt_loop_customized — Terminal::Terminal
    #prompt_loop_for_cart — Terminal::Terminal
    #prompt_loop_for_products — Terminal::Terminal
    #report — Cart::Cart
    #report — Store::Store
    #report — Terminal::Terminal
    #report_dollars — Money::Money
    #report_total — Cart::Cart
    #roundDollarsToFullCents — Money::Money
    #runInteractive — Terminal::Terminal
    #scan — Terminal::Terminal
    #setPricing — Terminal::Terminal
    #totalPrice — Cart::Cart
    #validAsBatchPrice — Store::Store
    #validAsBatchQuantity — Store::Store
    #validAsDollars — Money::Money
    #validAsNonNegativeFiniteNumber — Money::Money
    #validAsPennies — Money::Money
    #validAsProduct — Store::Store
    #validAsProductID — Store::Store
    #validAsRetailPrice — Store::Store
    #validate_item — Cart::Cart
    #validate_sensible_discount — Store::Store

[Validate]
===========================================================
.[]TIX LIST; Changelog
2014.01.20M ver.1.0.4

Customer-facing; 

Issue#01 Bug when use CLI and add a batch price - integers aren't auto-converted from string.

Issue#02 Add @live variable to explicitly decide whether to show initialization 'hello' messaging, which is shared between API and CLI.

Issue#03 Refactor prompt loops to use a generic, customized prompter plus yield to create specific objects. (Ruby-tip, Cannot pass two blocks for two different yield's, so printing the resultant object is now delegated.)
- Deleted completed Terminal spec which is not user-visible; "Refactor, Consolidate to single prompt_loop with yield." 
http://stackoverflow.com/questions/10451060/use-of-yield-and-return-in-ruby
- Code;  New method;   
	# Provide the overhead functionality for prompting and yield to the given block for specific prompt.
    # (ISSUE#03) Note; It would be preferable to delay the presentation of the object's printing,
    # as done previously, but one cannot pass two different yield blocks, so now clients are responsible for printing verification messages.
    def prompt_loop_customized(aHiString, aByeString)
- The new code is slightly better but still looks messy?

NON-FUNCTIONAL
[\]Refactor; Deleted pending spec, Already done; 
Store    it 'Refactor Products Map to use symbols instead of strings as hash keys.'  do
      pending 'cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby'
    end
Use symbols instead of strings as hash keys.
# good
hash = { :one => 1, :two => 2, :three => 3 }


===========================================================
.[]Ruby-tip; yield is an extra curly block argument for a function, so it uses two kinds of arguments, its own, as per the given inputs, and the block's 

Microsoft Windows [Version 6.3.9600]
(c) 2013 Microsoft Corporation. All rights reserved.
Clink v0.4 [git:c13aaf] Copyright (c) 2013 Martin Ridgers
http://code.google.com/p/clink

  ** Press Alt-H to show key bindings. **

Copyright (c) 1994-2012 Lua.org, PUC-Rio
Copyright (c) 1987-2010 Free Software Foundation, Inc.


C:\Users\mememe>irb
irb(main):001:0>  squares = {0=>0, 1=>1, 2=>4, 3=>9}
=> {0=>0, 1=>1, 2=>4, 3=>9}
irb(main):002:0> squares.find { |key, value| key > 1 } # => [2, 4]=> {0=>0, 1=>1, 2=>4, 3=>9}
=> [2, 4]
irb(main):003:0> # so squares.find, aka enum.find,  passes each item in the enum to the block
irb(main):004:0* q
NameError: undefined local variable or method `q' for main:Object
        from (irb):4
        from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/irb:12:in `<main>'
irb(main):005:0> squares.each{|i| print(i.to_s)}
[0, 0][1, 1][2, 4][3, 9]=> {0=>0, 1=>1, 2=>4, 3=>9}
irb(main):006:0> squares.each{|k,v| print(k.to_s,v.to_s)}
00112439=> {0=>0, 1=>1, 2=>4, 3=>9}
irb(main):007:0> #so maps must be implicitly array of array
irb(main):008:0* # and then user can choose if the enum is the entirety OR two elements, k,v
irb(main):009:0*
irb(main):010:0* q
NameError: undefined local variable or method `q' for main:Object
        from (irb):10
        from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/irb:12:in `<main>'
irb(main):011:0> def five; yield 1,2,3,4,5; end
=> nil
irb(main):012:0> five do |my1, *my2, my3|
irb(main):013:1* print my1, my2, my3
irb(main):014:1> end
1[2, 3, 4]5=> nil
irb(main):015:0> five {|your1, your2, your3| print([your1,your2]) }
[1, 2]=> nil
irb(main):016:0>

//and/ 
win8CPU ~
$ ^Ctpedc.tversu.ruelibinf0245.pdf

win8CPU ~
$ irb
Switch to inspect mode.
>> # http://edc.tversu.ru/elib/inf/0245.pdf
# http://edc.tversu.ru/elib/inf/0245.pdf
?> squares = {0=>0, 1=>1, 2=>4, 3=>9}
squares = {0=>0, 1=>1, 2=>4, 3=>9}
squares.find { |key, value| key > 1 } # => [2, 4]=> {0=>0, 1=>1, 2=>4, 3=>9}
>> print ('h')
squares.find { |key, value| key > 1 } # => [2, 4]print ('h')
=> [2, 4]
>> quit
quit

win8CPU ~
$ which ruby
/cygdrive/c/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/ruby


===========================================================
.[]RSPEC
===========================================================
.[]On windows. 140120m.12.12p

C:\amsrc\bc-ruby>rspec --format documentation

Cart
  #Initialize: Each Cart has an associated Store in order to know about the available products.
    #Initialize Raises error if fail to provide a Store to the constructor.
  Can Add and Check items in the Cart.
    #add Raises error if add a new item without any arguments, ie no Id.
    #Count is 1 when one item is in the cart.
    #Count is 2 when two items are in the cart.
    #Clear Resets a populated cart back to empty.
    #Report Describes a cart with one item as a string.
    #Report Describes a cart with two items as a string.
    #Report Describes an empty cart as having no elements.
    #CartAsMapOfProductsAndQuantities converts the List of Products Ordered into a Map of products and total quantities.
    #TotalPrice, #Report_total both Return the price for all the Products in the cart.
  FUTURE Possible work.
    Can delete an item from the cart. (PENDING: Not yet implemented)
    Can find whether a product is in the cart. (PENDING: Not yet implemented)

Money
  #Report_dollars prepends the $ to the current @dollars and includes two decimal places.
  #Report_dollars with an argument of dollars prepends the $ to the value and includes two decimal places.
  Can add monies, tracking both pennies and dollars.
    #Add 1 USD to 0 => 100 pennies = 1.00 dollars.
    #Add 0.01 USD, ie one penny, to 0 => 1 penny = 0.01 dollars.
    #Add 1.119 USD to 0 (rounds up) => 112 pennies = 1.12 dollars.
  Can validate and convert between dollars and pennies.
    #Pennies_to_dollars uses the class constant to convert.
    #Add and all Validators Raise error if provide a string instead of USD or pennies.
    #Add and all Validators Raise error if provide a negative number for USD or pennies.
    #Add and all Validators Raise error if provide infinity for USD or pennies.
    #DollarsToPennies Rounds up.
  FUTURE possible work.
    Refactor: Use Class-based, not instance-based, methods for the Math functions. (PENDING: Not yet implemented)
    #Add .1 USD, ie no leading zero, Raises Syntax error. (PENDING: Cannot directly test due to ruby considers 'a=.1' an error.)

Store
  #Add_Product
    Raises error if add a new item without any arguments, ie no Id.
    Raises error if add a new item without both Id and Price.
    Raises error if the given ID is not a string.
    Raises error if duplicate product ID is entered.
    Allows the given Price to be convertible to a float, eg 1 not 1.0.
    Raises error if the given Discount quantity is not an integer.
    Raises error if the given Batch Price is not convertible to a float.
    Raises error if Discount quantity but not price is entered.
    #Add_product: Converts a String input for BatchQuantity (numberForBatchDiscount) to integer (Fix ISSUE#01 In CLI, Exception upon specify a non-zero numberForBatchDiscount - due to Ruby Gets produces Strings, and Ruby argument parser converts only perceived floats, not integers.
  Can Modify its Content.
    #Add_product_map enables adding a new item as a preformed hashmap.
    #Clear Resets the Store's population of products back to empty.
  Can Report its Content and Metadata.
    #ProductMetadata gives the list of attributes found in the maximal constructor.
    #Find_Product Returns true upon searching a product that is in the store.
    #Find_Product Returns false upon searching a product that is not in the store.
    #Count is 1 for one element.
    #Count is 2 for two elements.
    #Report Describes the Store's contents as a string.
    #Product_list_showing_prices_in_dollars Describes the Store's contents as a string.
    #Product_list_showing_prices_in_dollars Describes an empty Store as having no elements.
  Knows about Dollars, Pennies, and Prices of its Products.
    #Price_in_dollars_for_quantity: Raises error if price-check an empty store.
    #Price_in_dollars_for_quantity: Raises error if price-check an item not in the store.
    #Price_in_dollars_for_quantity: Returns the non-discounted price in pennies for quantity of one.
    #Price_in_dollars_for_quantity: Returns the non-discounted price in pennies when no discount volume quantity exists.
    #Price_in_dollars_for_quantity: Returns the discounted total price in pennies for purchase size exactly equal to the discount volume quantity.
    #Price_in_dollars_for_quantity: Returns the minimally discounted total price in pennies for purchase size larger than the discount volume quantity.
  FUTURE possible work.
    Product entry refuses BatchPrice > Standard Price. (PENDING: Not yet implemented)
    Refactor Store Validation to use Type Casting instead of checking ValidAsXType. (PENDING: Not yet implemented)
    Refactor to avoid Raising Exceptions during data input validation. (PENDING: Not yet implemented)
    Refactor Products Map to use symbols instead of strings as hash keys. (PENDING: cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby)
    Refactor Product into a separate class. (PENDING: Not yet implemented)
    Can initialize with a list of products. (PENDING: Not yet implemented)

Terminal
  API Access allows simple manipulations.
Hello from your POS Terminal Controller!
    #SetPricing: Enables Admin to enter a set of products and their prices.
Hello from your POS Terminal Controller!
    #SetPricing: Sample Test: Can enter A=2/1, 4/7; B=12; C=1.25/1, 6/6; D=0.15.
Hello from your POS Terminal Controller!
    #Scan will add items to the cart.
Hello from your POS Terminal Controller!
    #Total provides the bill, without itemization.
Hello from your POS Terminal Controller!
    #Total: Sample Test#1: Cart of ABCDABAA should be $32.40.
Hello from your POS Terminal Controller!
    #Total: Sample Test#2: Cart of CCCCCCC should be $7.25.
Hello from your POS Terminal Controller!
    #Total: Sample Test#3: Cart of ABCD should be $15.40.
Hello from your POS Terminal Controller!
    #Total: Sample Test#4: Cart of A should be $2.00.
  Admin can Initialize the Store with a CLI.
    #Initialize Raises error if fail to provide a Store to the constructor.
    #Initialize Requires a Store.
  Admin can Add Products to the store through the CLI - Read/Write of System IO.
Hello from your POS Terminal Controller!
    #Prompt_confirm: Causes the user to verify another product should be entered.
Hello from your POS Terminal Controller!
    #Prompt_for_product: Allows entry of a single product's pricelist ( product-id, price, qualifying quantity, and discounted price) as verified by the prompt and the store's pricelist.
Hello from your POS Terminal Controller!
    #Prompt_loop__for_products Allows entry of two Products' data.
  User can Add to a Cart and Get Totals with through the CLI with System IO.
Hello from your POS Terminal Controller!
    #Prompt_for_cart_item: Accepts entry of a single Product ID.
Hello from your POS Terminal Controller!
    #Prompt_loop_for_cart Allows entry of any desired products to purchase.
  FUTURE possible work.
    Add Help option. (PENDING: Not yet implemented)
    Refactor Rspec Test fixtures are not DRY. (PENDING: Not yet implemented)
    Refactor, Consolidate to single prompt_loop with yield. (PENDING: Not yet implemented)
    During entry of product's price, display a convenient message that Zero (0) is the Default value for quantity and price. (PENDING: Not yet implemented)
    Allows less-strict entry of products, eg defaults. (PENDING: Not yet implemented)
    Rector, KATA: Redesign to be responsibility-based, not object-based. (PENDING: Not yet implemented)
    #Initialize Does Not Say Hello to the (Admin) user upon instantiation if running Non-Interactively. (PENDING: Stdout fix so that one or two tests will pass/fail whether automated (this passes) or not (it fails).)
    Enables tests to be silent so $sysout from prompting does not clutter the Rspec output. (PENDING: Not yet implemented)
    Allows Unix-style redirect of Standard IO, stdin/stdout. (PENDING: Not yet implemented)
    #prompt_for_product: Specifically includes four prompts. (Add test to prove this.) (PENDING: Not yet implemented)
    Refactor; Use Rspec Let to construct a complex, nested object instead of Method calls. (PENDING: Grok Rspec's Let vs Subject vs Method call prep.)

Pending:
  Cart FUTURE Possible work. Can delete an item from the cart.
    # Not yet implemented
    # ./spec/lib/cart_spec.rb:108
  Cart FUTURE Possible work. Can find whether a product is in the cart.
    # Not yet implemented
    # ./spec/lib/cart_spec.rb:109
  Money FUTURE possible work. Refactor: Use Class-based, not instance-based, methods for the Math functions.
    # Not yet implemented
    # ./spec/lib/money_spec.rb:87
  Money FUTURE possible work. #Add .1 USD, ie no leading zero, Raises Syntax error.
    # Cannot directly test due to ruby considers 'a=.1' an error.
    # ./spec/lib/money_spec.rb:89
  Store FUTURE possible work. Product entry refuses BatchPrice > Standard Price.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:166
  Store FUTURE possible work. Refactor Store Validation to use Type Casting instead of checking ValidAsXType.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:167
  Store FUTURE possible work. Refactor to avoid Raising Exceptions during data input validation.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:168
  Store FUTURE possible work. Refactor Products Map to use symbols instead of strings as hash keys.
    # cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby
    # ./spec/lib/store_spec.rb:169
  Store FUTURE possible work. Refactor Product into a separate class.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:172
  Store FUTURE possible work. Can initialize with a list of products.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:173
  Terminal FUTURE possible work. Add Help option.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:168
  Terminal FUTURE possible work. Refactor Rspec Test fixtures are not DRY.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:170
  Terminal FUTURE possible work. Refactor, Consolidate to single prompt_loop with yield.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:172
  Terminal FUTURE possible work. During entry of product's price, display a convenient message that Zero (0) is the Default value for quantity and price.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:186
  Terminal FUTURE possible work. Allows less-strict entry of products, eg defaults.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:188
  Terminal FUTURE possible work. Rector, KATA: Redesign to be responsibility-based, not object-based.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:191
  Terminal FUTURE possible work. #Initialize Does Not Say Hello to the (Admin) user upon instantiation if running Non-Interactively.
    # Stdout fix so that one or two tests will pass/fail whether automated (this passes) or not (it fails).
    # ./spec/lib/terminal_spec.rb:194
  Terminal FUTURE possible work. Enables tests to be silent so $sysout from prompting does not clutter the Rspec output.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:204
  Terminal FUTURE possible work. Allows Unix-style redirect of Standard IO, stdin/stdout.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:206
  Terminal FUTURE possible work. #prompt_for_product: Specifically includes four prompts. (Add test to prove this.)
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:211
  Terminal FUTURE possible work. Refactor; Use Rspec Let to construct a complex, nested object instead of Method calls.
    # Grok Rspec's Let vs Subject vs Method call prep.
    # ./spec/lib/terminal_spec.rb:223

Finished in 0.68753 seconds
81 examples, 0 failures, 21 pending

C:\amsrc\bc-ruby>
===========================================================
.[]CLI DEMO Example
===========================================================
.[]

C:\amsrc\bc-ruby>ruby .\lib\terminal.rb
Hello from your POS Terminal Controller!

Welcome to the Admin Process of entering the Store's Products and their Prices.
 Please confirm to continue with 'y' for yes.
y
Please enter this product's details.
Please enter the id.
a
Please enter the price.
10
Please enter the numberForBatchDiscount.
2
Please enter the batchPrice.
1
Please confirm to continue with 'y' for yes.
n
Thank you for entering the Store's Price list. It is;
[{:id=>"a", :price=>10.0, :numberForBatchDiscount=>2, :batchPrice=>1.0}]

Welcome to the Customer Process of entering a list of Products to put in the Cart for purchase.
  1.In between each entry, you will be given a chance to stop.
  2.For NumerForBatchDiscount and BatchPrice, zero may be used to indicate no discounts are available.
Please confirm to continue with 'y' for yes.
y
Please enter a Product ID to add to your shopping cart.
a
Please confirm to continue with 'y' for yes.
y
Please enter a Product ID to add to your shopping cart.
a
Please confirm to continue with 'y' for yes.
y
Please enter a Product ID to add to your shopping cart.
a
Please confirm to continue with 'y' for yes.
n
Thank you for entering your Cart list. It is;
["a", "a", "a"]

Thank you for your purchases! Your total is: $11.00

C:\amsrc\bc-ruby>
C:\amsrc\bc-ruby>
===========================================================
.[]
===========================================================
.[]
==========================================================
1.[] ; X.ruby - How can I determine if my process is being run interactively? - Stack Overflow
http://stackoverflow.com/questions/3384982/how-can-i-determine-if-my-process-is-being-run-interactively
ruby - How can I determine if my process is being run interactively? - Stack Overflow
===========================================================
.[]
===========================================================
.[]
===========================================================
.[]WORKS?!  140119x 9.40p

C:\amsrc\bc-ruby>rspec -f d

Cart
  #Initialize: Each Cart has an associated Store in order to know about the available products.
    #Initialize Raises error if fail to provide a Store to the constructor.
  Can Add and Check items in the Cart.
    #add Raises error if add a new item without any arguments, ie no Id.
    #Count is 1 when one item is in the cart.
    #Count is 2 when two items are in the cart.
    #Clear Resets a populated cart back to empty.
    #Report Describes a cart with one item as a string.
    #Report Describes a cart with two items as a string.
    #Report Describes an empty cart as having no elements.
    #CartAsMapOfProductsAndQuantities converts the List of Products Ordered into a Map of products and total quantities.
["a", 2.0]["b", 5.0]["c", 160.0]["a", 2.0]["b", 5.0]["c", 160.0]    #TotalPrice, #Report_total both Return the price for all the Products in the cart.
  FUTURE Possible work.
    Can delete an item from the cart. (PENDING: Not yet implemented)
    Can find whether a product is in the cart. (PENDING: Not yet implemented)

Money
  #Report_dollars prepends the $ to the current @dollars and includes two decimal places.
  #Report_dollars with an argument of dollars prepends the $ to the value and includes two decimal places.
  Can add monies, tracking both pennies and dollars.
    #Add 1 USD to 0 => 100 pennies = 1.00 dollars.
    #Add 0.01 USD, ie one penny, to 0 => 1 penny = 0.01 dollars.
    #Add 1.119 USD to 0 (rounds up) => 112 pennies = 1.12 dollars.
  Can validate and convert between dollars and pennies.
    #Pennies_to_dollars uses the class constant to convert.
    #Add and all Validators Raise error if provide a string instead of USD or pennies.
    #Add and all Validators Raise error if provide a negative number for USD or pennies.
    #Add and all Validators Raise error if provide infinity for USD or pennies.
    #DollarsToPennies Rounds up.
  FUTURE possible work.
    Refactor: Use Class-based, not instance-based, methods for the Math functions. (PENDING: Not yet implemented)
    #Add .1 USD, ie no leading zero, Raises Syntax error. (PENDING: Cannot directly test due to ruby considers 'a=.1' an error.)

Store
  #Add_Product
    Raises error if add a new item without any arguments, ie no Id.
    Raises error if add a new item without both Id and Price.
    Raises error if the given ID is not a string.
    Raises error if duplicate product ID is entered.
    Allows the given Price to be convertible to a float, eg 1 not 1.0.
    Raises error if the given Discount quantity is not an integer.
    Raises error if the given Batch Price is not convertible to a float.
    Raises error if Discount quantity but not price is entered.
  Can Modify its Content.
-Got map={:id=>"a", :price=>3, :numberForBatchDiscount=>2, :batchPrice=>2}-map's vals=a 3    #Add_product_map enables adding a new item as a preformed hashmap.
    #Clear Resets the Store's population of products back to empty.
  Can Report its Content and Metadata.
    #ProductMetadata gives the list of attributes found in the maximal constructor.
    #Find_Product Returns true upon searching a product that is in the store.
    #Find_Product Returns false upon searching a product that is not in the store.
    #Count is 1 for one element.
    #Count is 2 for two elements.
    #Report Describes the Store's contents as a string.
    #Product_list_showing_prices_in_dollars Describes the Store's contents as a string.
    #Product_list_showing_prices_in_dollars Describes an empty Store as having no elements.
  Knows about Dollars, Pennies, and Prices of its Products.
    #Price_in_dollars_for_quantity: Raises error if price-check an empty store.
    #Price_in_dollars_for_quantity: Raises error if price-check an item not in the store.
    #Price_in_dollars_for_quantity: Returns the non-discounted price in pennies for quantity of one.
    #Price_in_dollars_for_quantity: Returns the non-discounted price in pennies when no discount volume quantity exists.
    #Price_in_dollars_for_quantity: Returns the discounted total price in pennies for purchase size exactly equal to the discount volume quantity.
    #Price_in_dollars_for_quantity: Returns the minimally discounted total price in pennies for purchase size larger than the discount volume quantity.
  FUTURE possible work.
    Refactor Store Validation to use Type Casting instead of checking ValidAsXType. (PENDING: Not yet implemented)
    Refactor to avoid Raising Exceptions during data input validation. (PENDING: Not yet implemented)
    Refactor Products Map to use symbols instead of strings as hash keys. (PENDING: cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby)
    Refactor Product into a separate class. (PENDING: Not yet implemented)
    Can initialize with a list of products. (PENDING: Not yet implemented)

Terminal
  API Access allows simple manipulations.
Hello from your POS Terminal Controller!
["--setPricing recd;", "[[\"a\", 1], [\"b\", 20, 2, 10], [\"c\", 3, 3, 2]]"]["--setPricing ", "[\"a\", 1]", "and giving=", "a, 1"]["--iarg 2 parts;", "a", 1]["--setPricing ", "[\"b\", 20, 2, 10]", "and giving=", "b, 20, 2, 10"]["--iarg 2 parts;", "b", 20]["--setPricing ", "[\"c\", 3, 3, 2]", "and gi
ving=", "c, 3, 3, 2"]["--iarg 2 parts;", "c", 3]    #SetPricing: Enables Admin to enter a set of products and their prices.
Hello from your POS Terminal Controller!
["--setPricing recd;", "[[\"a\", 1], [\"b\", 20, 2, 10], [\"c\", 3, 3, 2]]"]["--setPricing ", "[\"a\", 1]", "and giving=", "a, 1"]["--iarg 2 parts;", "a", 1]["--setPricing ", "[\"b\", 20, 2, 10]", "and giving=", "b, 20, 2, 10"]["--iarg 2 parts;", "b", 20]["--setPricing ", "[\"c\", 3, 3, 2]", "and gi
ving=", "c, 3, 3, 2"]["--iarg 2 parts;", "c", 3]    #Scan will add items to the cart.
Hello from your POS Terminal Controller!
["--setPricing recd;", "[[\"a\", 1], [\"b\", 20, 2, 10], [\"c\", 3, 3, 2]]"]["--setPricing ", "[\"a\", 1]", "and giving=", "a, 1"]["--iarg 2 parts;", "a", 1]["--setPricing ", "[\"b\", 20, 2, 10]", "and giving=", "b, 20, 2, 10"]["--iarg 2 parts;", "b", 20]["--setPricing ", "[\"c\", 3, 3, 2]", "and gi
ving=", "c, 3, 3, 2"]["--iarg 2 parts;", "c", 3]["a", 1.0]["c", 3.0]    #Total provides the bill, without itemization.
  Admin can Initialize the Store with a CLI.
    #Initialize Raises error if fail to provide a Store to the constructor.
    #Initialize Requires a Store.
    #Initialize Says Hello to the (Admin) user upon instantiation.
  Admin can Add Products to the store through the CLI - Read/Write of System IO.
Hello from your POS Terminal Controller!
    #Prompt_confirm: Causes the user to verify another product should be entered.
Hello from your POS Terminal Controller!
    #Prompt_for_product: Allows entry of a single product's pricelist ( product-id, price, qualifying quantity, and discounted price) as verified by the prompt and the store's pricelist.
Hello from your POS Terminal Controller!
    #Prompt_loop__for_products Allows entry of two Products' data.
  User can Add to a Cart and Get Totals with through the CLI with System IO.
Hello from your POS Terminal Controller!
    #Prompt_for_cart_item: Accepts entry of a single Product ID.
Hello from your POS Terminal Controller!
    #Prompt_loop_for_cart Allows entry of any desired products to purchase.
  TBA - requirements not completed yet.
    Refactor, Consolidate to single prompt_loop with yield. (PENDING: Not yet implemented)
  FUTURE possible work.
    During entry of product's price, display a convenient message that Zero (0) is the Default value for quantity and price. (PENDING: Not yet implemented)
    Allows less-strict entry of products, eg defaults. (PENDING: Not yet implemented)
    Rector, KATA: Redesign to be responsibility-based, not object-based. (PENDING: Not yet implemented)
    Enables tests to be silent so $sysout from prompting does not clutter the Rspec output. (PENDING: Not yet implemented)
    Allows Unix-style redirect of Standard IO, stdin/stdout. (PENDING: Not yet implemented)
    #prompt_for_product: Specifically includes four prompts. (Add test to prove this.) (PENDING: Not yet implemented)
    Refactor; Use Rspec Let to construct a complex, nested object instead of Method calls. (PENDING: Grok Rspec's Let vs Subject vs Method call prep.)

Pending:
  Cart FUTURE Possible work. Can delete an item from the cart.
    # Not yet implemented
    # ./spec/lib/cart_spec.rb:108
  Cart FUTURE Possible work. Can find whether a product is in the cart.
    # Not yet implemented
    # ./spec/lib/cart_spec.rb:109
  Money FUTURE possible work. Refactor: Use Class-based, not instance-based, methods for the Math functions.
    # Not yet implemented
    # ./spec/lib/money_spec.rb:87
  Money FUTURE possible work. #Add .1 USD, ie no leading zero, Raises Syntax error.
    # Cannot directly test due to ruby considers 'a=.1' an error.
    # ./spec/lib/money_spec.rb:89
  Store FUTURE possible work. Refactor Store Validation to use Type Casting instead of checking ValidAsXType.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:160
  Store FUTURE possible work. Refactor to avoid Raising Exceptions during data input validation.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:161
  Store FUTURE possible work. Refactor Products Map to use symbols instead of strings as hash keys.
    # cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby
    # ./spec/lib/store_spec.rb:162
  Store FUTURE possible work. Refactor Product into a separate class.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:165
  Store FUTURE possible work. Can initialize with a list of products.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:166
  Terminal TBA - requirements not completed yet. Refactor, Consolidate to single prompt_loop with yield.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:118
  Terminal FUTURE possible work. During entry of product's price, display a convenient message that Zero (0) is the Default value for quantity and price.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:136
  Terminal FUTURE possible work. Allows less-strict entry of products, eg defaults.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:138
  Terminal FUTURE possible work. Rector, KATA: Redesign to be responsibility-based, not object-based.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:141
  Terminal FUTURE possible work. Enables tests to be silent so $sysout from prompting does not clutter the Rspec output.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:144
  Terminal FUTURE possible work. Allows Unix-style redirect of Standard IO, stdin/stdout.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:146
  Terminal FUTURE possible work. #prompt_for_product: Specifically includes four prompts. (Add test to prove this.)
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:151
  Terminal FUTURE possible work. Refactor; Use Rspec Let to construct a complex, nested object instead of Method calls.
    # Grok Rspec's Let vs Subject vs Method call prep.
    # ./spec/lib/terminal_spec.rb:163

Finished in 0.57815 seconds
72 examples, 0 failures, 17 pending

C:\amsrc\bc-ruby>git status
# On branch master
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#       deleted:    .idea/runConfigurations/Run_spec__cart_spec___bc-ruby.xml
#       modified:   lib/terminal.rb
#
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#       modified:   .idea/bc-ruby.iml
#       modified:   .idea/workspace.xml
#       modified:   lib/cart.rb
#       modified:   lib/money.rb
#       modified:   lib/store.rb
#       modified:   lib/terminal.rb
#       modified:   spec/lib/cart_spec.rb
#       modified:   spec/lib/get_in_out.rb
#       modified:   spec/lib/money_spec.rb
#       modified:   spec/lib/store_spec.rb
#       modified:   spec/lib/terminal_spec.rb
#       modified:   specLib/zRspecMock_spec.rb
#       modified:   specLib/zRspec_spec.rb
#       modified:   specLib/zRuby_spec.rb
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#       doc/Haskell.Chap5and6.140119x.txt
#       doc/zTRY.sort.txt

C:\amsrc\bc-ruby>git add -A

C:\amsrc\bc-ruby>git commit -m "GRN. WORKS?! Terminal now has both API and CLI a
ccess to it."
[master 195f704] GRN. WORKS?! Terminal now has both API and CLI access to it.
 17 files changed, 764 insertions(+), 229 deletions(-)
 delete mode 100644 .idea/runConfigurations/Run_spec__cart_spec___bc-ruby.xml
 create mode 100644 doc/Haskell.Chap5and6.140119x.txt
 create mode 100644 doc/zTRY.sort.txt

C:\amsrc\bc-ruby>
===========================================================
.[]
===========================================================
.[]
===========================================================
.[]Refactored so Green and nice. 140119x 9.40a
C:\amsrc\bc-ruby>rspec
........**.........**......................*****...Hello from your POS Terminal Controller!
.Hello from your POS Terminal Controller!
.*********

Pending:
  Cart FUTURE Possible work. Can delete an item from the cart.
    # Not yet implemented
    # ./spec/lib/cart_spec.rb:75
  Cart FUTURE Possible work. Can find whether a product is in the cart.
    # Not yet implemented
    # ./spec/lib/cart_spec.rb:76
  Money FUTURE possible work. Refactor: Use Class-based, not instance-based, methods for the Math functions.
    # Not yet implemented
    # ./spec/lib/money_spec.rb:83
  Money FUTURE possible work. #Add .1 USD, ie no leading zero, Raises Syntax error.
    # Cannot directly test due to ruby considers 'a=.1' an error.
    # ./spec/lib/money_spec.rb:85
  Store FUTURE possible work. Refactor Store Validation to use Type Casting instead of checking ValidAsXType.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:144
  Store FUTURE possible work. Refactor to avoid Raising Exceptions during data input validation.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:145
  Store FUTURE possible work. Refactor Products Map to use symbols instead of strings as hash keys.
    # cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby
    # ./spec/lib/store_spec.rb:146
  Store FUTURE possible work. Refactor Product into a separate class.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:149
  Store FUTURE possible work. Can initialize with a list of products.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:150
  Terminal TBA - requirements not completed yet. Allows entry of product-id, price, defaulting for quantity and price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:73
  Terminal TBA - requirements not completed yet. Allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:75
  Terminal TBA - requirements not completed yet. Verifies any item added to a cart is in the store.
    # (first dependency)
    # ./spec/lib/terminal_spec.rb:77
  Terminal FUTURE possible work. Allows less-strict entry of products, eg defaults.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:86
  Terminal FUTURE possible work. Rector, KATA: Redesign to be responsibility-based, not object-based.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:89
  Terminal FUTURE possible work. Enables tests to be silent so $sysout from prompting does not clutter the Rspec output.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:92
  Terminal FUTURE possible work. Allows Unix-style redirect of Standard IO, stdin/stdout.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:94
  Terminal FUTURE possible work. #prompt_for_product: Specifically includes four prompts. (Add test to prove this.)
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:99
  Terminal FUTURE possible work. Refactor; Use Rspec Let to construct a complex, nested object.
    # Grok Rspec's Let vs Subject vs Method call prep.
    # ./spec/lib/terminal_spec.rb:111

Finished in 0.12501 seconds
62 examples, 0 failures, 18 pending

C:\amsrc\bc-ruby>
C:\amsrc\bc-ruby>
C:\amsrc\bc-ruby>git status
# On branch master
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#       new file:   .idea/runConfigurations/Run_spec__terminal_spec___bc-ruby.xml
#       renamed:    lib/pennies.rb -> lib/money.rb
#       new file:   spec/lib/money_spec.rb
#       deleted:    spec/lib/pennies_spec.rb
#
# Changes not staged for commit:
#   (use "git add/rm <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#       modified:   .idea/bc-ruby.iml
#       deleted:    .idea/runConfigurations/Run_spec__terminal_spec___bc-ruby.xml
#       modified:   .idea/workspace.xml
#       modified:   doc/status.txt
#       modified:   lib/money.rb
#       modified:   lib/store.rb
#       modified:   spec/lib/money_spec.rb
#       modified:   spec/lib/store_spec.rb
#       modified:   spec/lib/terminal_spec.rb
#       modified:   zFutureMaybe/db_spec.rb
#

C:\amsrc\bc-ruby>
===========================================================
.[]140118s 9p
==========================================================
1.[]TODO cool shortcut; true if Float(self) rescue false ; X.Test if string is a number in Ruby on Rails - Stack Overflow
http://stackoverflow.com/questions/5661466/test-if-string-is-a-number-in-ruby-on-rails
Test if string is a number in Ruby on Rails - Stack Overflow
 47 down vote accepted
If you want to be able to do

mystring.is_number?

you can declare your method on the String class:
class String
  def is_number?
    true if Float(self) rescue false
  end
end

Otherwise you need to use

is_number?(mystring)

as others have pointed out.

===========================================================
.[]TODO RSPEC idk subject/lets getting nils on let

describe 'Terminal' do
  #let(:theStore) { Store::Store.new }
  #let(:gui) {  }

  describe 'Requires Initialization and Setup.' do

    subject do
      Terminal::TerminalPos.new(aStore)
    end

    it '#Initialize Raises error if fail to provide a Store to the constructor.' do
      expect{Terminal::TerminalPos.new}.to raise_error ArgumentError
    end

    it '#Initialize Requires a Store.' do
      expect{Terminal::TerminalPos.new($stdin)}.to  raise_error(RuntimeError, /Argument is not a Store./)
      expect{Terminal::TerminalPos.new(Store::Store.new)}.not_to  raise_error
      expect(Terminal::TerminalPos.new(@gui)).not_to  raise_error #NilClass
    end

    it '#Initialize Says Hello to the (Admin) user upon instantiation.' do
      expect { gui }.to match_stdout( "Hello from your POS") #" Terminal Controller!")
    end

  end
==========================================================
1.[] ; X.Dry up Your Rspec Files with subject & let Blocks - Ben Scheirman
http://benscheirman.com/2011/05/dry-up-your-rspec-files-with-subject-let-blocks/
Dry up Your Rspec Files with subject & let Blocks - Ben Scheirman

#improved example
require 'spec_helper'
 
describe Card do
subject do
Card.new(card_type)
end
describe "#value" do
context "Two of Hearts" do
let(:card_type) { "2H" }
its(:value) { should == 2 }
end
describe "Face Cards" do
context "King of Clubs" do
let(:card_type) { "KC" }
its(:value) { should == 13 }
end
==========================================================
1.[]uses pennies like i am doing ; X.RubyMoney/money
https://github.com/RubyMoney/money
RubyMoney/money
 RubyMoney - Money

Gem Version Build Status Code Climate Coverage Status Dependency Status License

:warning: Please read the migration notes before upgrading to a new major version.

If you miss String parsing, check out the new monetize gem. Introduction

A Ruby Library for dealing with money and currency conversion.
Features

    Provides a Money class which encapsulates all information about an certain amount of money, such as its value and its currency.
    Provides a Money::Currency class which encapsulates all information about a monetary unit.
    Represents monetary values as integers, in cents. This avoids floating point rounding errors.
    Represents currency as Money::Currency instances providing an high level of flexibility.
    Provides APIs for exchanging money from one currency to another.

Resources

    Website
    API Documentation
    Git Repository

Notes

    Your app must use UTF-8 to function with this library. There are a number of non-ASCII currency attributes.
    This app requires JSON. If you're using JRuby < 1.7.0 you'll need to add gem "json" to your Gemfile or similar.

==========================================================
1.[]substring, just say include? !!! ; X.How to check whether a string contains a substring in Ruby? - Stack Overflow
http://stackoverflow.com/questions/8258517/how-to-check-whether-a-string-contains-a-substring-in-ruby
How to check whether a string contains a substring in Ruby? - Stack Overflow
81 down vote accepted
	

You can use the include? method:

my_string = "abcdefg"
if my_string.include? "cde"
   puts "String includes 'cde'"
end


==========================================================
1.[]very convoluted answers ; X.ruby on rails - Determine if a string is a valid float value - Stack Overflow
http://stackoverflow.com/questions/1034418/determine-if-a-string-is-a-valid-float-value
ruby on rails - Determine if a string is a valid float value - Stack Overflow

 0 down vote
	

I saw the unresolved discussion on cast+exceptions vs regex and I thought I would try to benchmark everything and produce an objective answer:

Here is the source for the best case and worst of each method attempted here:

require "benchmark"
n = 500000

def is_float?(fl)
  !!Float(fl) rescue false
end

def is_float_reg(fl)
  fl =~ /(^(\d+)(\.)?(\d+)?)|(^(\d+)?(\.)(\d+))/
end

class String
  def to_float
    Float self rescue (0.0 / 0.0)
  end
end


Benchmark.bm(7) do |x|
  x.report("Using cast best case") {
    n.times do |i|
      temp_fl = "#{i + 0.5}"
      is_float?(temp_fl)
    end
  }
  x.report("Using cast worst case") {
    n.times do |i|
      temp_fl = "asdf#{i + 0.5}"
      is_float?(temp_fl)
    end
  }
  x.report("Using cast2 best case") {
    n.times do |i|
      "#{i + 0.5}".to_float
    end
  }
  x.report("Using cast2 worst case") {
    n.times do |i|
      "asdf#{i + 0.5}".to_float
    end
  }
  x.report("Using regexp short") {
    n.times do |i|
      temp_fl = "#{i + 0.5}"
      is_float_reg(temp_fl)
    end
  }
  x.report("Using regexp long") {
    n.times do |i|
      temp_fl = "12340918234981234#{i + 0.5}"
      is_float_reg(temp_fl)
    end
  }
    x.report("Using regexp short fail") {
    n.times do |i|
      temp_fl = "asdf#{i + 0.5}"
      is_float_reg(temp_fl)
    end
  }
  x.report("Using regexp long fail") {
    n.times do |i|
      temp_fl = "12340918234981234#{i + 0.5}asdf"
      is_float_reg(temp_fl)
    end
  }

end

With the following results with mri193:

                  user     system      total        real
    Using cast best case  0.608000   0.000000   0.608000 (  0.615000)
    Using cast worst case  5.647000   0.094000   5.741000 (  5.745000)
    Using cast2 best case  0.593000   0.000000   0.593000 (  0.586000)
    Using cast2 worst case  5.788000   0.047000   5.835000 (  5.839000)
    Using regexp short  0.951000   0.000000   0.951000 (  0.952000)
    Using regexp long  1.217000   0.000000   1.217000 (  1.214000)
    Using regexp short fail  1.201000   0.000000   1.201000 (  1.202000)
    Using regexp long fail  1.295000   0.000000   1.295000 (  1.284000)

Since we are dealing with only Linear time algorithms I think we use empirical measurements to make generalizations. It is plain to see that regex is more consistent and will only fluctuate a bit based on the length of the string passed. The cast is clearly faster when there are no failure, and much slower when there are failures.

If we compare the success times we can see that the cast best case is about .3 seconds faster than regex best case. If we divide this by the amount of time in the case worst case we can estimate how many runs it would take to break even with exceptions slowing the cast down to match regex speeds. About 6 seconds dived by .3 gives us about 20. So if performance matters and you expect less than 1 in 20 of your test to fail then used cast+exceptions.

JRuby 1.7.4 has completely different results:

                  user     system      total        real
    Using cast best case  2.575000   0.000000   2.575000 (  2.575000)
    Using cast worst case 53.260000   0.000000  53.260000 ( 53.260000)
    Using cast2 best case  2.375000   0.000000   2.375000 (  2.375000)
    Using cast2 worst case 53.822000   0.000000  53.822000 ( 53.822000)
    Using regexp short  2.637000   0.000000   2.637000 (  2.637000)
    Using regexp long  3.395000   0.000000   3.395000 (  3.396000)
    Using regexp short fail  3.072000   0.000000   3.072000 (  3.073000)
    Using regexp long fail  3.375000   0.000000   3.375000 (  3.374000)

Cast is only marginally faster in the best case (about 10%). Presuming this difference is appropriate for making generalizations(I do not think it is), then the break even point is somewhere between 200 and 250 runs with only 1 causing an exception.

So exceptions should only be used when truly exceptional things happens, this is decision for you and your codebase. When they aren't used code they are in can be simpler and faster.

If performance doesn't matter, you should probably just following whatever conventions you team or code base already has and ignore this whole answers.
share|improve this answer
	
answered Jul 24 '13 at 15:20
Sqeaky
7831022
	add comment
==========================================================
1.[] ; X.attribute of subject - Subject - RSpec Core - RSpec - Relish
https://www.relishapp.com/rspec/rspec-core/v/2-0/docs/subject/attribute-of-subject
attribute of subject - Subject - RSpec Core - RSpec - Relish

attribute of subject

Scenarios

    simple attribute

        Given
            a file named "example_spec.rb" with:

            describe Array do
              its(:size) { should == 0 }
            end

        When
            I run "rspec example_spec.rb --format documentation" 
        Then
            the output should contain:

            Array
              size
                should == 0

    nested attribute

        Given
            a file named "example_spec.rb" with:

            class Person
              attr_reader :phone_numbers
              def initialize
                @phone_numbers = []
              end
            end

            describe Person do
              subject do
                person = Person.new
                person.phone_numbers << "555-1212"
                person
              end

              its("phone_numbers.first") { should == "555-1212" }
            end

        When
            I run "rspec example_spec.rb --format documentation" 
        Then
            the output should contain:

            Person
              phone_numbers.first
                should == "555-1212"


===========================================================
.[]
===========================================================
.[]140118S 11a
===========================================================
.[]GREAT BUG! validating pennies/int vs dollars/float is coming up with test failure 1.35p.
3p back. will make Dollars.
===========================================================
.[]Win-tip; Cygwin's unix emulation cannot avoid the need for explicit '.bat' usage, eg rspec.bat, whereas windows/terminal knows about bat and runs it by default thus does not need. 
===========================================================
.[]11.50a after rearrange doc of specs; 

$ rspec.bat ./spec/lib/*spec.rb --format documentation

Cart
  Context: Each Cart's associated Store knows about the available products.
    #add Raises error if add a new item without any arguments, ie no Id.
    #Count is 1 when one item is in the cart.
    #Count is 2 when two items are in the cart.
    #Clear Resets a populated cart back to empty.
    #Report Describes a cart with one item as a string.
    #Report Describes a cart with two items as a string.
    #Report Describes an empty cart as having no elements.
  FUTURE Possible work.
    Can delete an item from the cart. (PENDING: Not yet implemented)
    Can find whether a product is in the cart. (PENDING: Not yet implemented)

Store
  #Add_Product
    Raises error if duplicate product is entered.
    Raises error if discount quantity but not price is entered.
    Raises error if add a new item without any arguments, ie no Id.
    Raises error if add a new item without both Id and Price.
  Can Report its Content and Metadata.
    #ProductMetadata gives the list of attributes found in the maximal constructor.
    #Find_Product Returns true upon searching a product that is in the store.
    #Find_Product Returns false upon searching a product that is not in the store.
    #Count is 1 for one element.
    #Count is 2 for two elements.
    #Clear Resets the Store's population of products back to empty.
    #Report Describes the Store's contents as a string.
    #Report Describes an empty Store as having no elements.
  Knows about Dollars, Pennies, and Prices of its Products.
    #ConvertDollarsToPennies Rounds up.
    #Price_in_pennies: Raises error if price-check an empty store.
    #Price_in_pennies: Raises error if price-check an item not in the store.
    #Price_in_pennies: Returns the non-discounted price in pennies for quantity of one.
    #Price_in_pennies: Returns the non-discounted price in pennies when no discount volume quantity exists.
    #Price_in_pennies: Returns the discounted total price in pennies for purchase size exactly equal to the discount volume quantity.
    #Price_in_pennies: Returns the minimally discounted total price in pennies for purchase size larger than the discount volume quantity.
  FUTURE Possible work.
    Refactor Products Map to use symbols instead of strings as hash keys. (PENDING: cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby)

Terminal/Shopping/
  Can Start and Read/Write from System IO.
    Says Hello to the (Admin) user upon instantiation.
    Does Not accept a redefined $stdin nor $stdout.
Hello from your POS Terminal Controller!
    #prompt_confirm: Causes the user to verify another product should be entered.
Hello from your POS Terminal Controller!
    #prompt_for_product: Allows entry of a single product's pricelist as verified by 'enter' prompt.
  TBA - requirements not completed yet.
    Allows entry of product-id, price, defaulting for quantity and price (PENDING: Not yet implemented)
    Allows entry of product-id, price, qualifying quantity, and discounted price (PENDING: Not yet implemented)
    Verifies any item added to a cart is in the store. (PENDING: (first dependency))
  FUTURE possible work.
    Allows less-strict entry of products, eg defaults. (PENDING: Not yet implemented)
    Rector, KATA: Redesign to be responsibility-based, not object-based. (PENDING: Not yet implemented)
    Allows Unix-style redirect of Standard IO, stdin/stdout. (PENDING: Not yet implemented)
    #prompt_for_product: Specifically includes four prompts. (PENDING: Not yet implemented)

Pending:
  Cart FUTURE Possible work. Can delete an item from the cart.
    # Not yet implemented
    # ./spec/lib/cart_spec.rb:66
  Cart FUTURE Possible work. Can find whether a product is in the cart.
    # Not yet implemented
    # ./spec/lib/cart_spec.rb:67
  Store FUTURE Possible work. Refactor Products Map to use symbols instead of strings as hash keys.
    # cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby
    # ./spec/lib/store_spec.rb:120
  Terminal/Shopping/ TBA - requirements not completed yet. Allows entry of product-id, price, defaulting for quantity and price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:54
  Terminal/Shopping/ TBA - requirements not completed yet. Allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:56
  Terminal/Shopping/ TBA - requirements not completed yet. Verifies any item added to a cart is in the store.
    # (first dependency)
    # ./spec/lib/terminal_spec.rb:58
  Terminal/Shopping/ FUTURE possible work. Allows less-strict entry of products, eg defaults.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:67
  Terminal/Shopping/ FUTURE possible work. Rector, KATA: Redesign to be responsibility-based, not object-based.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:70
  Terminal/Shopping/ FUTURE possible work. Allows Unix-style redirect of Standard IO, stdin/stdout.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:73
  Terminal/Shopping/ FUTURE possible work. #prompt_for_product: Specifically includes four prompts.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:78

Finished in 0.0625 seconds
40 examples, 0 failures, 10 pending

win8CPU /cygdrive/c/amsrc/bc-ruby

===========================================================
.[]Status; Where i am; 

win8CPU /cygdrive/c/amsrc/bc-ruby
$ rspec --version
C:\Users\mememe\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin\ruby.exe: No such file or directory -- /cygdrive/c/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/rspec (LoadError)

win8CPU /cygdrive/c/amsrc/bc-ruby
$

win8CPU /cygdrive/c/amsrc/bc-ruby
$ rspec.bat ./spec/lib/*spec.rb --format documentation

Cart
  Context: There is a Store associated with this Cart to check products.
    #add Raises error if add a new item without any arguments, ie no Id.
    #count is 1 for one element.
    #count is 2 for two elements.
    #clear Resets a populated cart back to empty.
    #report Describes contents of one item as a string.
    #report Describes its contents of two items as a string.
    #report Describes an empty cart as having no elements.

Store
  #ProductMetadata gives the list of attributes found in the maximal constructor.
  #ConvertDollarsToPennies Rounds up.
  #Find_Product Returns true upon searching a product that is in the store.
  #Find_Product Returns false upon searching a product that is not in the store.
  #Find_Product Returns false upon searching for an invalid product.
  #Add_Product Raises error if duplicate product is entered.
  #Add_Product Raises error if discount quantity but not price is entered.
  #Add_Product Raises error if add a new item without any arguments, ie no Id.
  #Add_Product Raises error if add a new item without both Id and Price.
  #count is 1 for one element.
  #count is 2 for two elements.
  #clear Resets a populated store back to empty.
  #report Describes its contents as a string.
  #report Describes an empty store as having no elements.
  #Price_in_pennies: Raises error if price-check an empty store.
  #Price_in_pennies: Raises error if price-check an item not in the store.
  #Price_in_pennies: Returns the price in pennies for quantity of one.
  #Price_in_pennies: Returns the non-discounted price in pennies when there is no discount volume quantity.
  #Price_in_pennies: Returns the discounted total price in pennies for purchase size exactly equal to the discount volume quantity.
  #Price_in_pennies: Returns the minimally discounted total price in pennies for purchase size larger than the discount volume quantity.
  FUTURE Possible Refactorings.
    Products Map Uses symbols instead of strings as hash keys. (PENDING: cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby)

Terminal/Shopping/
  Says Hello to the (Admin) user upon instantiation.
  Does Not accept a redefined $stdin nor $stdout.
  Read/Write from System IO.
Hello from your POS Terminal Controller!
    #prompt_confirm: Causes the user to verify another product should be entered.
Hello from your POS Terminal Controller!
    #prompt_for_product: Allows entry of a single product's pricelist as verified by 'enter' prompt.
  TBA
    Allows entry of product-id, price, defaulting for quantity and price (PENDING: Not yet implemented)
    allows entry of product-id, price, qualifying quantity, and discounted price (PENDING: Not yet implemented)
    verifies item added to a cart is in the store. (PENDING: (first dependency))
    allows less-strict entry of products, eg defaults. (PENDING: Not yet implemented)
    FUTURE KATA: Redesign to be responsibility-based, not object-based. (PENDING: Not yet implemented)
    FUTURE: Allow Unix-style redirect of Stdio. (PENDING: Not yet implemented)

Pending:
  Store FUTURE Possible Refactorings. Products Map Uses symbols instead of strings as hash keys.
    # cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby
    # ./spec/lib/store_spec.rb:113
  Terminal/Shopping/ TBA Allows entry of product-id, price, defaulting for quantity and price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:54
  Terminal/Shopping/ TBA allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:56
  Terminal/Shopping/ TBA verifies item added to a cart is in the store.
    # (first dependency)
    # ./spec/lib/terminal_spec.rb:58
  Terminal/Shopping/ TBA allows less-strict entry of products, eg defaults.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:62
  Terminal/Shopping/ TBA FUTURE KATA: Redesign to be responsibility-based, not object-based.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:65
  Terminal/Shopping/ TBA FUTURE: Allow Unix-style redirect of Stdio.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:68

Finished in 0.06251 seconds
38 examples, 0 failures, 7 pending

win8CPU /cygdrive/c/amsrc/bc-ruby
$


===========================================================
.[]
===========================================================
.[]
===========================================================
.[]140117f DONE Terminal how to mock.
==========================================================
1.[]DUP, what i was working on. ; X.An Example using RSpec double, mock, and stub
http://blog.firsthand.ca/2011/12/example-using-rspec-double-mock-and.html
An Example using RSpec double, mock, and stub

describe Transfer do
  context "transfer with amount of 10" do
    let(:source_account) { double('source account', :decrease => nil) }
    let(:destination_account) { double('destination_account', :increase => nil) }
 
    it "should decrease source account by 10" do
      source_account.should_receive('decrease').with(10)
     
      transfer = Transfer.new(source_account, destination_account, 10)
      transfer.call
    end
 
    it "should increase destination account by 10" do
      destination_account.should_receive('increase').with(10)
     
      transfer = Transfer.new(source_account, destination_account, 10)
      transfer.call
    end
  end
end
==========================================================
2.[]GREAT!; TODO ADD to spec_helper his random name creator, very nice; Codeship ; X.Codeship's Testing Tuesday #9: Stubbing and Mocking with RSpec | via @codeship
http://blog.codeship.io/2013/06/11/testing-tuesday-9-stubbing-and-mocking-with-rspec.html
Codeship's Testing Tuesday #9: Stubbing and Mocking with RSpec | via @codeship
....
==========================================================
4.[] ; X.Message expectations - RSpec Mocks - RSpec - Relish
https://relishapp.com/rspec/rspec-mocks/docs/message-expectations
Message expectations - RSpec Mocks - RSpec - Relish
Message expectations
Basics

# create a double
obj = double()

# expect a message
obj.should_receive(:message)

# specify a return value
obj.should_receive(:message) { :value }
obj.should_receive(:message => :value)
obj.should_receive(:message).and_return(:value)

These forms are somewhat interchangeable. The difference is that the
block contents are evaluated lazily when the obj receives the
message message, whereas the others are evaluated as they are read.
Fake implementation

obj.should_receive(:message) do |arg1, arg2|
  # set expectations about the args in this block
  # and set a return value
end

Using the original implementation

obj.should_receive(:message).and_call_original

Raising/Throwing

obj.should_receive(:message).and_raise("this error")
obj.should_receive(:message).and_throw(:this_symbol)

You can also use the block format:

obj.should_receive(:message) { raise "this error" }
obj.should_receive(:message) { throw :this_symbol }

Argument constraints
Explicit arguments

obj.should_receive(:message).with('an argument')
obj.should_receive(:message).with('more_than', 'one_argument')

Argument matchers

obj.should_receive(:message).with(anything())
obj.should_receive(:message).with(an_instance_of(Money))
obj.should_receive(:message).with(hash_including(:a => 'b'))

Regular expressions

obj.should_receive(:message).with(/abc/)

Counts

obj.should_receive(:message).once
obj.should_receive(:message).twice
obj.should_receive(:message).exactly(3).times

obj.should_receive(:message).at_least(:once)
obj.should_receive(:message).at_least(:twice)
obj.should_receive(:message).at_least(n).times

obj.should_receive(:message).at_most(:once)
obj.should_receive(:message).at_most(:twice)
obj.should_receive(:message).at_most(n).times

Ordering

obj.should_receive(:one).ordered
obj.should_receive(:two).ordered

Topics

    expect a message on any instance of a class
    warn when expectation is set on nil
    allow a message on any instance of a class
    Calling the original method
    expect message using `expect`
    expect message using `should_receive`
    Message chains in the expect syntax
    receive counts

==========================================================
5.[] ; X.String concatenation and Ruby - Stack Overflow
http://stackoverflow.com/questions/377768/string-concatenation-and-ruby
String concatenation and Ruby - Stack Overflow
 157 down vote accepted
	

You can do that in several ways:

    As you shown with << but that is not the usual way

    With string interpolation

    source = "#{ROOT_DIR}/#{project}/App.config"

    with +

    source = "#{ROOT_DIR}/" + project + "/App.config"

The second method seems to be more efficient in term of memory/speed from what I've seen (not measured though). Methods 1 and 3 throw a NoMethodError when ROOT_DIR is nil.

When dealing with pathnames, you may want to use File.join to avoid messing up with pathname separator.

In the end, it is a matter of taste.
share|improve this answer
	
edited Jul 23 '11 at 21:47 
==========================================================
6.[] ; X.Example rails 3.1 spec_helper.rb file using spork, rspec, factory_girl, database_cleaner, I18n
https://gist.github.com/stanislaw/1731259
Example rails 3.1 spec_helper.rb file using spork, rspec, factory_girl, database_cleaner, I18n
require 'spork'
 
Spork.prefork do
# Loading more in this block will cause your tests to run faster. However,
# if you change any configuration or code from libraries loaded here, you'll
# need to restart spork for it take effect.
 
# This file is copied to spec/ when you run 'rails generate rspec:install'
ENV["RAILS_ENV"] ||= 'test'
require File.expand_path("../../config/environment", __FILE__)
require 'rspec/rails'
require 'rspec/autorun'
 
require 'shoulda/matchers/integrations/rspec'
 
require "rails/application"
Spork.trap_method(Rails::Application::RoutesReloader, :reload!)
 
# Requires supporting ruby files with custom matchers and macros, etc,
# in spec/support/ and its subdirectories.
Dir[Rails.root.join("spec/support/**/*.rb")].each {|f| require f}
 
RSpec.configure do |config|
config.mock_with :rspec
 
require 'database_cleaner'
config.before(:suite) do
DatabaseCleaner.strategy = :transaction
DatabaseCleaner.clean_with(:truncation)
end
 
config.before(:each) do
DatabaseCleaner.start
end
 
config.after(:each) do
DatabaseCleaner.clean
end
 
end
end
 
Spork.each_run do
 
I18n.backend.reload!
 
Dir[Rails.root.join('spec/support/**/*.rb')].each { |f| require f }
 
require 'factory_girl'
 
FactoryGirl.definition_file_paths = [
File.join(Rails.root, 'spec', 'factories')
]
 
FactoryGirl.find_definitions
 
end
==========================================================
7.[] ; X.One RSpec stub, many return values | mentalized
http://mentalized.net/journal/2013/03/13/one_rspec_stub_many_return_values/
One RSpec stub, many return values | mentalized

One RSpec stub, many return values

Posted March 13, 2013 in Programming

Using RSpec Mocks it is trivially easy to stub a single method:

colors.stub(:favorite).with("Person A").and_return("Mauve")

It is also easy to have different stubs for different arguments:

colors.stub(:favorite).with("Person A").and_return("Mauve")
colors.stub(:favorite).with("Person B").and_return("Olive")

However, the other day I needed to stub out the same method many times for a fair amount of different arguments and repeating the foo.stub(...).with(...).and_return() part gets tedious real fast.

Thankfully, RSpec stubs have a way around this.

RSpec docs call this a “Stub with substitute implementation”. You simply setup a fake implementation for a method by passing the stub a block.

We can use this to setup a look up table inside the stubbed method to give is pretty granular control over what it returns:

colors.stub(:favorite) do |argument|
  values = {"Person A" => "Mauve", "Person B => "Olive"}
  return values[argument]
end

This way, whenever your tests call colors.favorite the argument they pass along is used to look up the returned result in the Hash inside the stub.

This has proven quite useful when your FavoriteColorService talks to a DNA sequencer live and we don’t want each test run to wait 4 weeks for each result.


===========================================================
.[]test other half, the prompt
===========================================================
.[]BUG: want to stub the thing before chomp so chomp won't error, yet also want the gets' call to be tested.
1.43p
===========================================================
.[]


===========================================================
.[]ERROR ; nb must stub an item in order to spy on it and see it was called?!!

RSpec::Mocks::MockExpectationError: #<Mirror:0x231cd08> expected to have received gets, but that method has not been stubbed.
./specLib/zRspecMock_spec.rb:38:in `block (2 levels) in <top (required)>'

  it '#prompt_and_echo: Receives entered text with Gets.' do
    @mirror = Mirror.new
    @mirror.stub(:fixup).and_return( "stubbed-typing\n" ) #Collaborator
    @mirror.prompt_and_echo
    expect(@mirror).to have_received( :gets  )
  end
===========================================================
.[x]WORKS rspec-tip v3 has spies which means that can post process expectations at the end and use past-tense to show that they should already have occurred once the code was run , ie before it.

  it '#prompt_and_echo: Receives entered text with Gets.' do
    @mirror = Mirror.new
    @mirror.stub(:fixup).and_return( "stubbed-typing\n" ) #Collaborator
    #@mirror.stub(:chomp) { "stubbed-typing\n" } #Collaborator
    #@mirror.stub(:response) { "stubbed-typing\n" } #Collaborator
    @mirror.prompt_and_echo
    expect(@mirror).to have_received( :gets  )
  end
==========================================================
1.[] ; X.Add Syntax for Spies · Issue #220 · rspec/rspec-mocks
https://github.com/rspec/rspec-mocks/issues/220
Add Syntax for Spies · Issue #220 · rspec/rspec-mocks
 jfelchner opened this issue a year ago
Add Syntax for Spies
Milestone: 3.0  
No one is assigned

Now that we have a handle on the new syntax for mocks and stubs (#153 - the length of the issue is not for the faint of heart), I think that the oft-requested feature of adding spies to RSpec may more easily "fall out" of that implementation.

The consistency of the expect syntax and the new allow syntax reads great and I'd like to discuss taking that syntax further into the notion of spies.

    For the uninitiated and to make sure there's no ambiguity regarding terms here are some simplified definitions:

        A stub is just a dumb object that knows how to receive some set of method calls and returns predetermined values for them.
        A spy is just like a stub except that it remembers all the messages sent to it.
        A mock is just like a spy except that you can tell it what messages you're expecting it to receive and it will blow up if it doesn't receive those.
...

===========================================================
.[]
NameError: undefined local variable or method `fixup' for #<RSpec::ExampleGroups::ReadWriteFromSystemIOViaRegularStub:0x23bf350>
./specLib/zRspecMock_spec.rb:34:in `block (2 levels) in <top (required)>'


class Mirror
  def prompt_and_echo
    print "Please enter something: "
    # Do not chain gets.chomp so that can test more easily.
    response = gets
    response = fixup(response)
    puts "#{response}"
  end

  def fixup(aString)
    aString.chomp
  end
end

describe 'Read/Write from System IO - via regular stub.' do

  it '#prompt_and_echo: Receives entered text with Gets.' do
    @mirror = Mirror.new
    @mirror.stub(fixup) { "stubbed-typing\n" } #Collaborator
    #@mirror.stub(:chomp) { "stubbed-typing\n" } #Collaborator
    #@mirror.stub(:response) { "stubbed-typing\n" } #Collaborator
    expect(@mirror).to receive( :gets  )
    @mirror.prompt_and_echo
  end

===========================================================
.[]IO testing; ok now on the 2/3 tests; 1.prompt/print; 2.gets; 3.ack/puts.
1.20p
==========================================================
1.[]@family.stub(:location).and_return('first', 'second', 'other') ; X.ruby on rails - Can RSpec stubbed method return different values in sequence? - Stack Overflow
http://stackoverflow.com/questions/5947999/can-rspec-stubbed-method-return-different-values-in-sequence
ruby on rails - Can RSpec stubbed method return different values in sequence? - Stack Overflow

===========================================================
.[\]refactor mock = just add pending.
===========================================================
.[]delete these are aok
#require 'rspec/mocks' #Name is rspec-mocks
    #RSpec::Mocks::setup(Mirror.new)

===========================================================
.[]GREEN tiny mock
===========================================================
.[]WIP 150115w ; 1.'permission denied' gets; 2.mock get to rspec it.
===========================================================
.[]WORKS, lol, due to forgot to say to actually do it. 12.30p


===========================================================
.[]WORKS; rid of the expct bug; 
require 'rspec'
require 'rspec/mocks' #Name is rspec-mocks
require 'logger'
require './spec/lib/custom_stdout_matcher'

# http://stackoverflow.com/questions/20275510/how-to-avoid-deprecation-warning-for-stub-chain-in-rspec-3-0
# Notice that it's setting the rspec-mocks syntax, not the rspec-expectations syntax
RSpec.configure do |config|
  config.mock_with :rspec do |c|
    c.syntax = [:should, :expect]
  end
end

===========================================================
.[]small progress, stub without ! is ok, but still... 1.deprecated remark when no such should used; 2.claims no calls. 
12.21p

Deprecation Warnings:

Using `stub` from rspec-mocks' old `:should` syntax without explicitly enabling the syntax is deprecated. Use the new `:expect` syntax or explicitly enable `:should` instead. Called from C:/amsrc/bc-ruby/specLib/zRspecMock_spec.rb:24:in `block (2 levels) in <top (required)>'.


If you need more of the backtrace for any of these deprecations to
identify where to make the necessary changes, you can configure
`config.raise_errors_for_deprecations!`, and it will turn the
deprecation warnings into errors, giving you the full backtrace.

RSpec::Mocks::MockExpectationError: (#<Mirror:0x1d52558>).puts("stubbed-typing")
    expected: 1 time with arguments: ("stubbed-typing")
    received: 0 times with arguments: ("stubbed-typing")
./specLib/zRspecMock_spec.rb:25:in `block (2 levels) in <top (required)>'
==========================================================
1.[]BUG 12p
C:\Users\mememe\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin\ruby.exe -e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift) C:\Users\mememe\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin/rspec C:/amsrc/bc-ruby/specLib/zRspecMock_spec.rb --require teamcity/spec/runner/formatter/teamcity/formatter --format Spec::Runner::Formatter::TeamcityFormatter
Testing started at 12:03 PM ...

NoMethodError: undefined method `stub!' for #<Mirror:0x1d22558>
./specLib/zRspecMock_spec.rb:24:in `block (2 levels) in <top (required)>'

1 example, 1 failure, 0 passed

Finished in 0.004996 seconds

Process finished with exit code 1

require 'rspec'
require 'rspec/mocks' #Name is rspec-mocks
require 'logger'
require './spec/lib/custom_stdout_matcher'

class Mirror
  def prompt_and_echo
    print "enter something: "
    response = gets.chomp
    puts "#{response}"
  end
end

describe 'Read/Write from System IO.' do
  # http://stackoverflow.com/questions/4609872/rspec-commandline-variable-input
  def ask(aFcn)
    # []TODO confirm yield not more appropriate
    (Terminal::TerminalPos.new).aFcn
  end

  it '#prompt_and_echo: Writes Echo for text.' do
    RSpec::Mocks::setup(Mirror.new)
    @mirror = Mirror.new
    @mirror.stub!(:gets) { "stubbed-typing\n" } #Collaborator
    expect(@mirror).to receive( :puts ).with("stubbed-typing")
    # Answering the prompt is not actually required.
    #expect { gui.prompt_for_product }.to match_stdout("enter x to stop")
  end
end
==========================================================
1.[]NTF you’re declaring a mock in an example group (describe() block) instead of an example (it() block).; X.Pragmatic Forums | rspec - undefined method 'mock'
https://forums.pragprog.com/forums/95/topics/3216
Pragmatic Forums | rspec - undefined method 'mock'
Back to: All Forums → The RSpec Book → rspec - undefined method 'mock'
24 Aug 2009, 00:28
Generic-user-small

Adam Trepanier (4 posts)
	

I am working with Chapter 6.3 and trying to do mock(“messenger”) and the error I get with running rspec is: undefined method `mock’ for Spec::Example::ExampleGroup::Subclass_1::Subclass_1:Class (NoMethodError).

No idea why it is not working. I have the rspec gem 1.2.8 installed.
24 Aug 2009, 08:14
Dchelimsky_pragsmall

David Chelimsky (206 posts)
	

From the error message it sounds like you’re declaring a mock in an example group (describe() block) instead of an example (it() block).

HTH, David
24 Aug 2009, 22:47
Generic-user-small

Adam Trepanier (4 posts)
	

yeah I am a moron, I missed a whole line. ‘it “should send a welcome message” do’ your post lead me to the answer.


==========================================================
1.[]Re-look at answer given stub-passive ; X.ruby - rspec commandline variable input - Stack Overflow
http://stackoverflow.com/questions/4609872/rspec-commandline-variable-input
ruby - rspec commandline variable input - Stack Overflow
class Mirror
  def echo
    print "enter something: "
    response = gets.chomp
    puts "#{response}"
  end
end

require 'rspec'
describe Mirror do
  it "should echo" do #testing the puts person not the gets
    @mirror = Mirror.new
    @mirror.stub!(:gets) { "phrase\n" }
    @mirror.should_receive(:puts).with("phrase")
    @mirror.echo
  end
end
==========================================================
1.[] ; X.Configure any test framework to use rspec-mocks - Outside rspec - RSpec Mocks - RSpec - Relish
https://www.relishapp.com/rspec/rspec-mocks/v/2-1/docs/outside-rspec/configure-any-test-framework-to-use-rspec-mocks
Configure any test framework to use rspec-mocks - Outside rspec - RSpec Mocks - RSpec - Relish
Configure any test framework to use rspec-mocks

Test frameworks that want to use rspec-mocks can use
RSpec::Mocks::setup(self) to hook into rspec-mocks. Doing so adds the
following:

To the object passed to setup:

double # creates a test double
mock   # creates a test double
stub   # creates a test double

To every object in the system:

should_receive
should_not_receive
stub

In order to give control to the consuming framework, none of these facilities
are added until RSpec::Mocks::setup(self) is called. Simply requiring
'rspec/mocks' is not sufficient.

NOTICE: the stub() method that is added to the object passed to setup is not
the same stub() method that is added to every other object.

Scenarios

        RSpec::Mocks::setup(object) adds double, mock, and stub methods to the submitted object
        RSpec::Mocks::setup(anything) adds methods to Object
        require "rspec/mocks" does not add methods to Object

    RSpec::Mocks::setup(object) adds double, mock, and stub methods to the submitted object

        Given
            a file named "foo.rb" with:

            require 'rspec/mocks'

            class CodeExample
              def init
                RSpec::Mocks::setup(self)
              end
            end

            example = CodeExample.new
            example.init

            puts example.respond_to?(:double)
            puts example.respond_to?(:mock)
            puts example.respond_to?(:stub)

        When
            I run "ruby foo.rb" 
        Then
            the output should contain "true" 
        But
            the output should not contain "false" 

    RSpec::Mocks::setup(anything) adds methods to Object

        Given
            a file named "foo.rb" with:

            require 'rspec/mocks'

            RSpec::Mocks::setup(Object.new)

            obj = Object.new

            puts obj.respond_to?(:should_receive)
            puts obj.respond_to?(:should_not_receive)
            puts obj.respond_to?(:stub)

        When
            I run "ruby foo.rb" 
        Then
            the output should contain "true" 
        But
            the output should not contain "false" 

    require "rspec/mocks" does not add methods to Object

        Given
            a file named "foo.rb" with:

            require 'rspec/mocks'

            obj = Object.new

            puts obj.respond_to?(:should_receive)
            puts obj.respond_to?(:should_not_receive)
            puts obj.respond_to?(:stub)

        When
            I run "ruby foo.rb" 
        Then
            the output should contain "false" 
        But
            the output should not contain "true" 

Last published about 1 year ago by dchelimsky.

==========================================================
4.[]DEFN: Double=can do either; Stub= passive, but need its collaboration; Mock= active exercised API, we say what method the API should have and then expect it is called onthe target ; X.RSpec double, mock, and stub
http://blog.firsthand.ca/2011/01/rspec-double-mock-and-stub.html
RSpec double, mock, and stub
==========================================================
7.[] ; X.ruby - rspec commandline variable input - Stack Overflow
http://stackoverflow.com/questions/4609872/rspec-commandline-variable-input
ruby - rspec commandline variable input - Stack Overflow

==========================================================
1.[]ruby rspec INCLUDES mocks;  Use before(:each), not before(:all); much code is 2yrs ago; X.rspec/rspec-mocks
https://github.com/rspec/rspec-mocks
rspec/rspec-mocks
 RSpec Mocks Build Status Code Climate

==========================================================
5.[]GREAT sample; takeaway is if not caring about the readability/conventions, Double does same thing  ; X.An Example using RSpec double, mock, and stub
http://blog.firsthand.ca/2011/12/example-using-rspec-double-mock-and.html
An Example using RSpec double, mock, and stub
Blog
Wednesday, December 21, 2011
An Example using RSpec double, mock, and stub

==========================================================
1.[]Tip Best practice Ruby, any Chain calls that don't return same object type repeatedly; Can be mocked however ; X.Stub a chain of methods - Stubs - RSpec Mocks - RSpec - Relish
https://www.relishapp.com/rspec/rspec-mocks/v/2-2/docs/stubs/stub-a-chain-of-methods
Stub a chain of methods - Stubs - RSpec Mocks - RSpec - Relish
Stub a chain of methods

The stub_chain method lets you to stub a chain of methods in one statement.
Method chains are considered a design smell, but it's not really the method
chain that is the problem - it's the dependency chain represented by a chain
of messages to different objects:

foo.getbar.getbaz

This is a Law of Demeter violation if getbar() returns an object other than
foo, and getbaz() returns yet another object.

Fluent interfaces look similar from a caller's perspective, but don't
represent a dependency chain (the caller depends only on the object it is
calling). Consider this common example from Ruby on Rails:

Article.recent.by(current_user)

The recent() and by() methods return the same object, so this is not
a Law of Demeter violation.

Scenarios

    stub a chain of methods

        Given
            a file named "stub_chain_spec.rb" with:

            describe "stubbing a chain of methods" do
              subject { Object.new }

              context "given symbols representing methods" do
                it "returns the correct value" do
                  subject.stub_chain(:one, :two, :three).and_return(:four)
                  subject.one.two.three.should eq(:four)
                end
              end

              context "given a string of methods separated by dots" do
                it "returns the correct value" do
                  subject.stub_chain("one.two.three").and_return(:four)
                  subject.one.two.three.should eq(:four)
                end
              end
            end


==========================================================
1.[]ruby DEFN; Kernel#gets prompts and returns the line result, aka read next given file or nil at eof; EXTRA, can read paragraphs, DEFN double CR; EX. ARGV<<"afile"; print While gets => entire file is printed  ; X.Module: Kernel (Ruby 2.1.0)
http://ruby-doc.org/core-2.1.0/Kernel.html#method-i-gets
Module: Kernel (Ruby 2.1.0)
 gets(sep=$/) → string or nil click to toggle source
gets(limit) → string or nil
gets(sep,limit) → string or nil

Returns (and assigns to $_) the next line from the list of files in ARGV (or $*), or from standard input if no files are present on the command line. Returns nil at end of file. The optional argument specifies the record separator. The separator is included with the contents of each record. A separator of nil reads the entire contents, and a zero-length separator reads the input one paragraph at a time, where paragraphs are divided by two consecutive newlines. If the first argument is an integer, or optional second argument is given, the returning string would not be longer than the given value in bytes. If multiple filenames are present in ARGV, +gets(nil)+ will read the contents one file at a time.

ARGV << "testfile"
print while gets

produces:

This is line one
This is line two
This is line three
And so on...

The style of programming using $_ as an implicit parameter is gradually losing favor in the Ruby community.
==========================================================
1.[]ruby DEFN: String#chomp = new str without trailing \n, \n\r, \r and your specified suffix deleted, aka "record separator" ; X.Class: String (Ruby 2.0.0)
http://www.ruby-doc.org/core-2.0.0/String.html#method-i-chomp
Class: String (Ruby 2.0.0)

==========================================================
1.[]This version has require 'stringio' = not ok for the kata ; X.How do I write an RSpec test for a Ruby method that contains "gets.chomp"? - Stack Overflow
http://stackoverflow.com/questions/17258630/how-do-i-write-an-rspec-test-for-a-ruby-method-that-contains-gets-chomp
How do I write an RSpec test for a Ruby method that contains "gets.chomp"? - Stack Overflow
4 down vote accepted
	

You can stub out standard input stream like this:

require 'stringio'

def capture_name
  $stdin.gets.chomp
end

describe 'capture_name' do
  before do
    $stdin = StringIO.new("James T. Kirk\n")
  end

  after do
    $stdin = STDIN
  end

  it "should be 'James T. Kirk'" do
    expect(capture_name).to be == 'James T. Kirk'
  end
end

share|improve this answer
	
answered Jun 23 '13
==========================================================
1.[]TRY x.new.stub!(:gets) {"thing to type\n"} ; X.ruby - rspec commandline variable input - Stack Overflow
http://stackoverflow.com/questions/4609872/rspec-commandline-variable-input
ruby - rspec commandline variable input - Stack Overflow

rspec commandline variable input
I have a ruby script I'm trying to test with rspec. Is there a way to pass variables to the commandline (ie enter keyboard data via rspec to "gets")

Example:
username = gets.chomp

ruby rspec
share|improve this question
	
asked Jan 5 '11 at 22:31
djburdick
1,94821936
	add comment
1 Answer
active oldest votes
up vote 10 down vote accepted
	

You can stub Kernel#gets, except that it is mixed into the object, so stub it there:

class Mirror
  def echo
    print "enter something: "
    response = gets.chomp
    puts "#{response}"
  end
end

require 'rspec'

describe Mirror do
  it "should echo" do
    @mirror = Mirror.new
    @mirror.stub!(:gets) { "phrase\n" }
    @mirror.should_receive(:puts).with("phrase")
    @mirror.echo
  end
end

share|improve this answer
	
answered Jan 5 '11 at 23:16
zetetic
==========================================================
1.[]WIN bug, SO says use Linux; It was a locking problem -- not a permission problem. ; X.ruby - Errno::EACCES: Permission denied - ./tmp/rspec_guard_result - Stack Overflow
http://stackoverflow.com/questions/19608766/errnoeacces-permission-denied-tmp-rspec-guard-result
ruby - Errno::EACCES: Permission denied - ./tmp/rspec_guard_result - Stack Overflow

Errno::EACCES: Permission denied - ./tmp/rspec_guard_result
up vote 0 down vote favorite
	

Trying settup rspec-guard-spork for learning app from http://ruby.railstutorial.org/

Using Ruby 2.0, Rails 4.0 on Windows7 ( I know :( )

When starting guard, get:

23:02:51 - ERROR - Guard::RSpec failed to achieve its <run_on_modifications>, exception was:
> [#] Errno::EACCES: Permission denied - ./tmp/rspec_guard_result
...

All gemfile, guardfile etc are edited according tutorial. Except 1) deleting win32console gem from gemfile because it turned console-out into a crap and raised an error.

Permissions for a file is "F"(ull) for all cattegories:

D:\WebDevelop\sample_app>cacls tmp\rspec_guard_result D:\WebDevelop\sample_app\tmp\rspec_guard_result

    BUILTIN\Users:(ID)F
    NT AUTHORITY\Authenticated:(ID)F
    BUILTIN\Administrators:(ID)F
    NT AUTHORITY\system:(ID)F

What additional info should I provide here?
ruby rspec railstutorial.org guard
share|improve this question
	
asked Oct 26 '13 at 15:59
Evgeniy Gatsalov
183
	
	
One advice from my experience..you should restart with Linux..I have done the same mistake but then i realized it is not going to complete rather than you will encounter many of other errors which have no relation with Rails and every time you will wonder what has went wrong or do other people don't know the answer..Yes, indeed they don't know the answer to your question cause they never encountered such problem at Linux..so for you smooth learning of RailsTutorial please switch to Linux .thanks :) – Abhinay Oct 31 '13 at 2:34
	
I gues you are right. What Linux distributive would you advice for rails development? – Evgeniy Gatsalov Nov 1 '13 at 3:00
	
I think, probably the best one is Ubuntu , but you can go as per your choice and as i am working on Ubuntu and from system end i haven't faced any kind of errors yet, which you usually encounter on Windows. – Abhinay Nov 3 '13 at 5:56
	
One more thing , every time you encounter any issue don't just follow one answer on single post, you should check at-least 4 to 5 post @StackOverflow and after you read them all, decide your path. – Abhinay Nov 3 '13 at 5:58
	
Actually I always try to check as much sources as possible. But I cant find anything about this error. At all. So I writing now this comment from Ubuntu 12.10. Of course it came with another bunch of issues (e.g. Nvidia video drivers setup and much more) but it's wellknown problems and great community helps. I wish I could mark your comment as answer. Thx for ur help! – Evgeniy Gatsalov Nov 4 '13 at 7:48
	
I am glad that you switched to Ubuntu and you can see yourself that how much useful is this to use rails on Ubuntu and from here on whichever issue you are going to face, you'll surely get answers to those in StackOverflow..as 80% of RoR developer are using linux and answer to many of the know issues has been resolved already..all the very best :) – Abhinay Nov 4 '13 at 9:19
add comment
1 Answer
active oldest votes
up vote 1 down vote
	

This appears to be a locking problem -- not a permission problem. For me:

C:\Ruby19\lib\ruby\gems\1.9.1\gems\guard-rspec-4.0.3\lib\guard\rspec\inspector.rb line 51 in def _focused_path. The code tries to delete rspec_guard_result but can't because it's open. So ... close the file before it gets deleted.

update: as of 11/7/13, the fix is up on https://github.com/guard/guard-rspec (master branch)
share|improve this answer
	
edited Nov 7 '13 at 15:51 
===========================================================
.[]@start 10a; git RED

Date:   Thu Jan 16 22:31:19 2014 -050

    RED. Terminal idk how to truly put into rspec, fails now when before was ok to just see matches, also CLI works for start_prompt, though ugly, yet in rubymine fails.
===========================================================
.[]eacces permission error is; 
code :46  = ithValue = gets.chomp

Errno::EACCES: Permission denied - C:/amsrc/bc-ruby/spec/lib
./lib/terminal.rb:46:in `gets'
./lib/terminal.rb:46:in `gets'
./lib/terminal.rb:46:in `block in prompt_for_product'
./lib/terminal.rb:44:in `each'
./lib/terminal.rb:44:in `prompt_for_product'
./spec/lib/terminal_spec.rb:22:in `block (3 levels) in <top (required)>'
./spec/lib/terminal_spec.rb:55:in `call'
./spec/lib/terminal_spec.rb:55:in `block (2 levels) in <top (required)>'
./spec/lib/terminal_spec.rb:22:in `block (2 levels) in <top (required)>'


===========================================================
.[]
===========================================================
.[]
===========================================================
.[]WIP 150115w
===========================================================
.[]weird but correct.

Microsoft Windows [Version 6.3.9600]


irb(main):006:0> require './lib/terminal'
=> true
irb(main):007:0> Terminal::TerminalPos.new.start_prompt_loop
Hello from your POS Terminal Controller!
Welcome to the Admin Process of entering products and their prices.
 Please confirm to continue with 'y' for yes.
y
["Please enter the ", :id, ".\n"]a
["got value=", "a", "\n"]["Please enter the ", :price, ".\n"]1
["got value=", "1", "\n"]["Please enter the ", :batchPrice, ".\n"]2
["got value=", "2", "\n"]["Please enter the ", :numberForBatchDiscount, ".\n"]3
["got value=", "3", "\n"]["\n", "got ans=", "{:id=>\"a\", :price=>\"1\", :batchPrice=>\"2\", :numberForBatchDiscount=>\"3\"}", "\n"]Please confirm to continue with 'y' for yes.
y
["Please enter the ", :id, ".\n"]b
["got value=", "b", "\n"]["Please enter the ", :price, ".\n"]7
["got value=", "7", "\n"]["Please enter the ", :batchPrice, ".\n"]8
["got value=", "8", "\n"]["Please enter the ", :numberForBatchDiscount, ".\n"]9
["got value=", "9", "\n"]["\n", "got ans=", "{:id=>\"b\", :price=>\"7\", :batchPrice=>\"8\", :numberForBatchDiscount=>\"9\"}", "\n"]Please confirm to continue with 'y' for yes.
n
["Thank you for entering the price list. It is; \n", "[{:id=>\"a\", :price=>\"1\", :batchPrice=>\"2\", :numberForBatchDiscount=>\"3\"}, {:id=>\"b\", :price=>\"7\", :batchPrice=>\"8\", :numberForBatchDiscount=>\"9\"}]", "\n"]=> nil
irb(main):008:0>
===========================================================
.[]CLI TODO

[]using print always never puts

[]needs a require format template?? puts("Please enter the #{ithKey}.\n")

=begin

[]TODO
[]readline does not work? there is also a readline gnu package that can be require'd
[]io package for $SYSIN etc not working?
#require 'io'
#$sysout.
#$sysout.print('please enter x')
a= readline('x',1)# separator, limit
#a= $sysin.readline('x',1)# separator, limit
#$sysout.


$i = 0
$num = 5
begin
   puts("Inside the loop i = #$i" )
   $i +=1;
end until $i > $num
=end
===========================================================
.[]Ruby-tip; easy CLI to avoid  sentinel token to appear upon ready to complete

    # NOT using the seen methods on stackoverflow;
    #@outs+[
    # readline(' ',5)
	
http://www.howtogeek.com/howto/programming/ruby/ruby-if-else-if-command-syntax/	
	If Else If Syntax

Here’s the key difference between Ruby and most other languages. Note that “else if” is actually spelled “elsif” without the e.

    if var == 10
       print “Variable is 10″
    elsif var == “20″
       print “Variable is 20″
    else
       print “Variable is something else”
    end

	
	
http://stackoverflow.com/questions/7534905/how-can-i-fix-this-ruby-yes-no-style-loop
 8 down vote accepted
	

Possible problems:

    check Game.play
    Capital/no-capital in the answer? -> String#upcase or String#downcase
    hidden spaces (before/after the answer) -> String#strip instead String#chomp

You may also use regular expressions (example N) or with a list of answers (yes) to check the answer:

def play_again?
  while true
    print "Would you like to play again? [y/n]: "
    case gets.strip
      when 'Y', 'y', 'j', 'J', 'yes' #j for Germans (Ja)
        puts 'I play' # Game.play
      when /\A[nN]o?\Z/ #n or no
        break 
    end
  end
end

play_again?


==========================================================
1.[]No prompting, only using the optparse to get args, like unix; shows how to test etc ; X.Issue 2.9: Building Unix-style command line applications - Practicing Ruby
https://practicingruby.com/articles/building-unix-style-command-line-applications?u=dc2ab0f9bb
Issue 2.9: Building Unix-style command line applications - Practicing Ruby

==========================================================
2.[]TODO THT that readline was also in IO? this is GNU; looks nice ; X.Ruby Readline
http://bogojoker.com/readline/
Ruby Readline

==========================================================
3.[] ; X.ruby - How can I chomp every line in an array at once? - Stack Overflow
http://stackoverflow.com/questions/3750631/how-can-i-chomp-every-line-in-an-array-at-once
ruby - How can I chomp every line in an array at once? - Stack Overflow
 10 down vote accepted
	

IO.popen("Generate a list of files").readlines.map(&:chomp)



===========================================================
.[]
===========================================================
.[]
===========================================================
.[]URLS-LIST
==========================================================
1.[] ; X.Have Ruby on Rails Installed on Windows the Best Way | My Journy to Become a Ruby on Rails Developer
http://igotrailed.wordpress.com/2013/01/31/have-ruby-on-rails-installed-on-windows-the-best-way/
Have Ruby on Rails Installed on Windows the Best Way | My Journy to Become a Ruby on Rails Developer


31Jan / 2013

==========================================================
2.[] ; X.Sublime Text - Download
http://www.sublimetext.com/3
Sublime Text - Download

==========================================================
3.[] ; X.Heroku Toolbelt
https://toolbelt.heroku.com/
Heroku Toolbelt

==========================================================
4.[]WIN TERMINAL app, don't think it worked either ; X.Console | Free software downloads at SourceForge.net
http://sourceforge.net/projects/console/
Console | Free software downloads at SourceForge.net

==========================================================
6.[]Long,NR; X.ruby on rails 3 - Getting Rspec + autotest working on windows - Stack Overflow
http://stackoverflow.com/questions/3852143/getting-rspec-autotest-working-on-windows
ruby on rails 3 - Getting Rspec + autotest working on windows - Stack Overflow

Getting Rspec + autotest working on windows
up vote 5 down vote favorite
	

I have installed growl + rspec + autotest on my windows 7 machine. From the command prompt, when I type 'rspec spec/' it doesn't work. The tests will only run if I use 'rake spec/' + 'autotest'.

Also, I am running these tests: http://railstutorial.org/chapters/static-pages#code:default_pages_controller_spec (i.e. very, very trivial) and they are taking 8.11 seconds.

They also fail when I run them - even though they don't in the example. I have done everything the tutorial told me, the problem is the tutorial doesn't go too deep into installing rspec on a Windows machine. It gives a link, but even then you have to kinda piece the instructions together.

The errors I get are 'Failure/Error: Unable to find C to read failed line [31mundefined methord get' for #<RSpec::Core::ExampleGroup::Nested_1::Nested_1:0x48336c0>'

The second error is very similar to that.

I have also installed Growl correctly, because I get a notification that there were two failures.

Can anyone help me?
windows-7 ruby-on-rails-3 rspec
share|improve this question
	
asked Oct 4 '10 at 0:28
marcamillion
3,9561258131
	...
==========================================================
7.[]BOOK GREAT ; X.Learn Web Development with the Ruby on Rails Tutorial | Static Pages
http://ruby.railstutorial.org/chapters/static-pages#code:default_pages_controller_spec
Learn Web Development with the Ruby on Rails Tutorial | Static Pages

==========================================================
12.[] ; X.ruby2-rails4-bootstrap-heroku/spec at master · diowa/ruby2-rails4-bootstrap-heroku
https://github.com/diowa/ruby2-rails4-bootstrap-heroku/tree/master/spec
ruby2-rails4-bootstrap-heroku/spec at master · diowa/ruby2-rails4-bootstrap-heroku

==========================================================
13.[] ; X.Install gems on Windows 7 / Problems / Discussion Area - RubyGems.org Support
http://help.rubygems.org/discussions/problems/333-install-gems-on-windows-7
Install gems on Windows 7 / Problems / Discussion Area - RubyGems.org Support
 Posted by Luis Lavena on May 18, 2011 @ 02:08 PM
Luis Lavena's Avatar

Please, either Jim Bates or Onno, provide the complete output of your gem install command adding --debug -V options to it.

E.g. If the command was gem install rails then the full command will be gem install rails --debug -V

Use Pastie.org or gist.github.com to upload the full output and we will be able to help you better.

==========================================================
15.[] ; X.notepad++ drag and drop text windows 8 - Google Search
https://www.google.com/search?q=notepad%2B%2B&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:en-US:official&client=firefox-a#q=notepad%2B%2B+drag+and+drop+text+windows+8&rls=org.mozilla:en-US:official
notepad++ drag and drop text windows 8 - Google Search

==========================================================
16.[] ; X.Installing Ruby on Rails on windows - Stack Overflow
http://stackoverflow.com/questions/4853222/installing-ruby-on-rails-on-windows
Installing Ruby on Rails on windows - Stack Overflow
 4 down vote accepted
	

On Windows you need to set your system PATH variable (My Computer -> Properties -> Advanced -> Environment Variables -> System variables)

Append the PATH Variable value:: c:\ruby\bin;

==========================================================
17.[]This is the official documentation site for RSpec-2.  ; X.Publisher: RSpec - Relish
https://www.relishapp.com/rspec
Publisher: RSpec - Relish

==========================================================
18.[]USED ; X.RSpec's new message expectation syntax
http://teaisaweso.me/blog/2013/05/27/rspecs-new-message-expectation-syntax/
RSpec's new message expectation syntax
27 May 2013
...
==========================================================
39.[] ; X.Module: Spec::Matchers
http://rspec.rubyforge.org/rspec/1.1.11/classes/Spec/Matchers.html
Module: Spec::Matchers

==========================================================
40.[]CLI app they say use a variable special to capture, but i made a custom matcher instead ; X.ruby - Can I use RSpec to mock stdin/stdout to test console reads & writes? - Stack Overflow
http://stackoverflow.com/questions/6335282/can-i-use-rspec-to-mock-stdin-stdout-to-test-console-reads-writes
ruby - Can I use RSpec to mock stdin/stdout to test console reads & writes? - Stack Overflow
 11 down vote accepted
	

You can use mocks and have the method called more than once by listing multiple values in the and_return() method. These will be returned, one on each call, in the order given.

STDIN.should_receive(:read).and_return("Your string")

STDIN.should_receive(:read).and_return("value1", "value2", "value3")

You can do similar things with STDOUT:

STDOUT.should_receive(:puts).with("string")

See the RSpec mocking documentation for more information.

==========================================================
41.[]Rspec-tip; Do NOT over-constrain your code ; X.Everything that is wrong with mocking, bdd, and rspec
http://ngauthier.com/2010/12/everything-that-is-wrong-with-mocking.html
Everything that is wrong with mocking, bdd, and rspec

==========================================================
42.[]LIST OF WINDOWS TERMINAL items ; X.Making a better, somewhat prettier, but definitely more functional Windows Command Line - Scott Hanselman
http://www.hanselman.com/blog/MakingABetterSomewhatPrettierButDefinitelyMoreFunctionalWindowsCommandLine.aspx
==========================================================
43.[]Clink WIN SW did NOT work well, forget why, 140115 ; X.clink_0.4_setup.exe - clink - clink v0.4 installer - Bringing Bash's powerful command line editing to Microsoft Windows' cmd.exe - Google Project Hosting
https://code.google.com/p/clink/downloads/detail?name=clink_0.4_setup.exe&can=2&q=
clink_0.4_setup.exe - clink - clink v0.4 installer - Bringing Bash's powerful command line editing to Microsoft Windows' cmd.exe - Google Project Hosting
Making a better, somewhat prettier, but definitely more functional Windows Command Line - Scott Hanselman
 clink
Bringing Bash's powerful command line editing to Microsoft Windows' cmd.exe 

==========================================================
44.[]DONE, so easy :) ; X.Writing Custom RSpec Matchers - Timothy's Blog
http://blog.timothyandrew.net/blog/2013/05/01/writing-custom-rspec-matchers/

Writing Custom RSpec Matchers

==========================================================
45.[]GREAT, Custom RSpec-2 Matchers; X.solnic.eu
http://solnic.eu/2011/01/14/custom-rspec-2-matchers.html
solnic.eu

Writing Custom RSpec Matchers - Timothy's Blog
==========================================================
46.[] ; X.define matcher - RSpec Expectations - RSpec - Relish
https://www.relishapp.com/rspec/rspec-expectations/v/2-13/docs/custom-matchers/define-matcher
define matcher - RSpec Expectations - RSpec - Relish

==========================================================
47.[]class needed update for the 'expect' ; X.New way of defining custom rspec matchers / Code School / Discussion Area - Code School Support
http://help.codeschool.com/discussions/code-school/10904-new-way-of-defining-custom-rspec-matchers
New way of defining custom rspec matchers / Code School / Discussion Area - Code School Support
New way of defining custom rspec matchers
Iain Beeston's Avatar
Iain Beeston

Feb 24, 2013 @ 05:39 AM

In Testing with RSpec level 6, the way that is shown for defining custom matchers using a matcher class is (I think) the old way of doing things. RSpec now has a method named "RSpec::Matchers.define" that takes a block and provides a slightly more succinct way of defining matchers, and this is the way that the rspec documentation now recommends doing it. See here for details - https://www.relishapp.com/rspec/rspec-expectations/v/2-13/docs/cust...

Sorry if this isn't the best place for providing feedback on the courses!

    Support Staff 2 Posted by Adam Rensel on Mar 01, 2013 @ 11:46 AM
    Adam Rensel's Avatar

    Hi Iain,
    Don't worry, this is the perfect place to provide feedback. Thanks for letting us know, I'm going to add this to the rspec course repo so we can make updates to content. Thanks again.
==========================================================
58.[] ; X.How can I change the return value of a class constructor in Ruby? - Stack Overflow
http://stackoverflow.com/questions/4888786/how-can-i-change-the-return-value-of-a-class-constructor-in-ruby
How can I change the return value of a class constructor in Ruby? - Stack Overflow
 5 down vote accepted
	

def Foo.new(arg=nil)
  arg || super
end

 11 down vote
	

By definition, constructors are meant to return a newly created object of the class they are a member of, so, no you should not override this behavior.

Besides, in Ruby, new calls initialize somewhere within its method body, and its return value is ignored, so either way the value you return from initialize will not be returned from new.

With that said, I think that in your case, you might want to create a factory method that will return different Foo objects based on arguments passed to the factory method:

class Foo
  def self.factory(arg = nil)
    return arg if arg.kind_of? Foo
    Foo.new
  end
end
foo = Foo.factory
bar = Foo.factory(foo)

assert_equal foo, bar #passes

share|improve this answer
	
edited Feb 3 '11 at 17:08

	
answered Feb 3 '11 at 16:36
Jacob Relkin
81.3k14188215
	add comment
up vote 7 down vote
	

initialize is called by new which ignores its return value. Basically the default new method looks like this (except that it's implemented in C, not in ruby):

class Class
  def new(*args, &blk)
    o = allocate
    o.send(:initialize, *args, &blk)
    o
  end
end

So the newly allocated object is returned either way, no matter what you do in initialize. The only way to change that is overriding the new method, for example like this:

class Foo
  def self.new(arg=nil)
    if arg
      return arg
    else
      super
    end
  end
end

However I'd strongly advise against this since it runs counter to many expectations that people have when calling new:

    People expect new to return a new object. I mean it's even called new. If you want a method that does not always create a new object, you should probably call it something else.
    At the very least people expect Foo.new to return a Foo object. Your code will return whatever the argument is. I.e. Foo.new(42) would return 42, an Integer, not a Foo object. So if you're going to do this, you should at the very least only return the given object, if it is a Foo object.

share|improve this answer
	
edited Feb 3 '11 at 16:57
Jacob Relkin
81.3k14188215
	
answered Feb 3 '11 at 16:47
sepp2k
142k13323421
	add comment
up vote 1 down vote
	

Does not work for:


class Some
    def self.new( str )
        SomeMore.new( str )
    end
end



# the Some is parent of SomeMore class SomeMore < Some def initialize( str ) @str = str end end

share|improve this answer
	
edited Mar 30 '13 at 15:09

	
answered Nov 11 '12
==========================================================
59.[] ; X.ruby indicate a class's type - Google Search
https://www.google.com/search?q=ruby+indicate+a+class%27s+type&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:en-US:official&client=firefox-a
ruby indicate a class's type - Google Search

==========================================================
60.[]result.class.name;  When I do this I get the Module names before it, so "Module::SubModule::Class", is there a way of getting just "Class" –  Abe @Abe: result.class.name.split('::').last; X.How do I get the name of a Ruby class? - Stack Overflow
http://stackoverflow.com/questions/826210/how-do-i-get-the-name-of-a-ruby-class
How do I get the name of a Ruby class? - Stack Overflow

==========================================================
61.[] ; X.ruby on rails - Why do I get an undefined method 'have' error when running Rspec? - Stack Overflow
http://stackoverflow.com/questions/20406625/why-do-i-get-an-undefined-method-have-error-when-running-rspec
ruby on rails - Why do I get an undefined method 'have' error when running Rspec? - Stack Overflow
 2 down vote accepted
	

The have family of matchers was deprecated in RSpec 2.99 and has been moved to a separate rspec-collection_matchers gem as of RSpec 3.0. This is discussed in http://myronmars.to/n/dev-blog/2013/11/rspec-2-99-and-3-0-betas-have-been-released, which also gives the suggested approach to migrating to 3.0. Specifically, it recommends installing/using RSpec 2.99 in order to see the deprecation messages associated with items that were removed/moved in 3.0.
 0 down vote
	

OK, got it.

I had the wrong version number in my Gemfile.

Before:

gem 'rspec-rails', '~> 3.0.0.beta'

After:

gem 'rspec-rails'


==========================================================
62.[]TODO BUG; 1.PRY said to be great per Danielle; 2. require 'ruby-debug' then use;  debugger; X.Running ruby debug in rspec? - Stack Overflow
http://stackoverflow.com/questions/5446594/running-ruby-debug-in-rspec
Running ruby debug in rspec? - Stack Overflow

==========================================================
66.[]CRLF issue ; X.Cygwin - cd in bash script - Super User
http://superuser.com/questions/189259/cygwin-cd-in-bash-script
Cygwin - cd in bash script - Super User
 10 down vote accepted
	

What kind of line endings does your script have? For Cygwin bash script to work properly (without having to set special options), it must have Unix line endings (LF) rather than DOS line endings (CR-LF). If you saved the script with DOS line endings, bash will see your argument to cd as /c/Code/Project^M, where ^M is a CR, and won't find a directory by that name.

To see which kind of line endings it has, you can execute file scriptname, where scriptname is the name of your script. To convert the script so that it has Unix line endings, execute d2u scriptname.

Don't use Notepad to edit Cygwin bash scripts. It always saves files with DOS line endings.
share|improve this answer
	
answered Sep 16 '10 at 15:22
garyjohn
13.9k21733
	
	 
	
Aha! That was it. I was using Vim to edit it. Thankyou :-) –  Dan Sep 16 '10 at 15:33
	 
	
Vim will work fine. It automatically detects whether files have Unix or DOS line endings and will save them the same way. By default, Cygwin's vim will create new files with Unix line endings, but Windows' gvim will create new file with DOS line endings. You can change that. See :help ff and :help ffs. –  garyjohn Sep 16 '10 at 18:46 
==========================================================
67.[]Use "\n" instead of '\n' ; X.ruby - How to do a newline in output - Stack Overflow
http://stackoverflow.com/questions/2060253/how-to-do-a-newline-in-output
ruby - How to do a newline in output - Stack Overflow

==========================================================
68.[] ; X.raise_error matcher - Built in matchers - RSpec Expectations - RSpec - Relish
https://www.relishapp.com/rspec/rspec-expectations/v/2-6/docs/built-in-matchers/raise-error-matcher
raise_error matcher - Built in matchers - RSpec Expectations - RSpec - Relish
 expect specific error message using a regular expression

    Given
        a file named "expect_error_with_regex.rb" with:

        describe "matching error message with regex" do
          it "matches the error message" do
            expect { raise StandardError, "my message" }.
              to raise_error(StandardError, /my mess/)
          end
        end


==========================================================
69.[] ; X.How do I search within an array of hashes by hash values in ruby? - Stack Overflow
http://stackoverflow.com/questions/2244915/how-do-i-search-within-an-array-of-hashes-by-hash-values-in-ruby
How do I search within an array of hashes by hash values in ruby? - Stack Overflow


You're looking for Enumerable#select (also called find_all):

@fathers.select {|father| father["age"] > 35 }
# => [ { "age" => 40, "father" => "Bob" },
#      { "age" => 50, "father" => "Batman" } ]

Per the documentation, it "returns an array containing all elements of [the enumerable, in this case @fathers] for which block is not false."

==========================================================
70.[]LIST many cmds ; X.Module: Enumerable (Ruby 2.1.0)
http://ruby-doc.org/core-2.1.0/Enumerable.html#method-i-select
Module: Enumerable (Ruby 2.1.0)
(1..4).map { |i| i*i }      #=> [1, 4, 9, 16]
(1..4).collect { "cat"  }   #=> ["cat", "cat", "cat", "cat"]
==========================================================
71.[] ; X.Sorting Ruby Arrays - failed with TypeError: can't convert Symbol into Integer - Stack Overflow
http://stackoverflow.com/questions/5684805/sorting-ruby-arrays-failed-with-typeerror-cant-convert-symbol-into-integer
Sorting Ruby Arrays - failed with TypeError: can't convert Symbol into Integer - Stack Overflow
 accepted
	

Your input is actually a pair (name, [book]), so make sure you only sort the second element of the pair (the books array):

[source_array[0], source_array[1].sort_by { |book| book[:price].to_i }]


==========================================================
72.[] ; X.Command line - RSpec Core - RSpec - Relish
https://relishapp.com/rspec/rspec-core/docs/command-line
Command line - RSpec Core - RSpec - Relish
Command line

The rspec command comes with several options you can use to customize RSpec's
behavior, including output formats, filtering examples, etc.

For a full list of options, run the rspec command with the --help flag:

$ rspec --help

Run with ruby

Generally, life is simpler if you just use the rspec command. If you must use the ruby
command, however, you'll need to require "rspec/autorun". You can
either pass a -rrspec/autorun CLI option when invoking ruby, or add
a require 'rspec/autorun' to one or more of your spec files.

It is conventional to put configuration in and require assorted support files
from spec/spec_helper.rb. It is also conventional to require that file from
the spec files using require 'spec_helper'. This works because RSpec
implicitly adds the spec directory to the LOAD_PATH. It also adds lib, so
your implementation files will be on the LOAD_PATH as well.

If you're using the ruby command, you'll need to do this yourself
(with the -I option). Putting these together, your command might be
something like this:

$ ruby -Ilib -Ispec -rrspec/autorun path/to/spec.rb

Topics

    --example option
    --format option
    --line_number option
    --tag option
    line number appended to file path
    exit status
    rake task
    --dry-run
    --fail-fast
    --init option
    --order (new in rspec-core-2.8)
    --require option
    pattern option
    Randomization can be reproduced across test runs
    run with ruby command
    run with warnings enabled

Last published about 1 month ago by myronmarston.

===========================================================
.[]
===========================================================
.[]
===========================================================
.[]Rspec-tip; When an RB "won't compile", Rspec Refuses to Include it!!!   = BUG DOC`require': cannot load such file -- ./lib/store (LoadError);  Store runner bugged. ; upon re-deleting the default path, got; 
C:\Users\mememe\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin\ruby.exe -e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift) C:\Users\mememe\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin/rspec C:/amsrc/bc-ruby/spec/lib/store_spec.rb --require teamcity/spec/runner/formatter/teamcity/formatter --format Spec::Runner::Formatter::TeamcityFormatter
Testing started at 3:58 PM ...
C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require': cannot load such file -- ./lib/store (LoadError)
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from C:/amsrc/bc-ruby/spec/lib/store_spec.rb:2:in `<top (required)>'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `load'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `block in load_spec_files'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `each'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `load_spec_files'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/command_line.rb:22:in `run'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/runner.rb:90:in `run'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/runner.rb:17:in `block in autorun'

Process finished with exit code 1
Empty test suite.

===========================================================
.[]BUG DOC Store runner bugged.
.[]rspec-tip; do not add the filepath default, nor the documentation format so can better see in rubymine; 150115w4p. //? seemed like again had to add in rubymine runner options, default-path 'C:\Users\mememe\amPrjs\bc-ruby\'

the weird thing was that the store was not working?? 

C:\Users\mememe\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin\ruby.exe -e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift) C:\Users\mememe\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin/rspec C:/amsrc/bc-ruby/spec/lib/store_spec.rb --require teamcity/spec/runner/formatter/teamcity/formatter --format Spec::Runner::Formatter::TeamcityFormatter default-path 'C:\Users\mememe\amPrjs\bc-ruby\'
Testing started at 3:57 PM ...

C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `load': cannot load such file -- C:/Users/mememe/amPrjs/bc-ruby (LoadError)
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `block in load_spec_files'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `each'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `load_spec_files'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/command_line.rb:22:in `run'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/runner.rb:90:in `run'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/runner.rb:17:in `block in autorun'

Process finished with exit code 1
Empty test suite.

===========================================================
.[]BUG DOC; no tests found ; due to mybug, not finished coding. 

MY SRC
C:\amsrc\bc-ruby\spec\lib\terminal_spec.rb
require 'rspec' # core, expectations, mocks, support
require './lib/terminal'
require './lib/store'
require './lib/cart'
require './spec/lib/custom_stdout_matcher'

describe 'Terminal/Shopping/' do
...


SRC of api; 
C:\Users\mememe\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\lib\ruby\site_ruby\1.9.1\rubygems\custom_require.rb

ref'd by ; 
C:\Users\mememe\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin\ruby.exe -e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift) C:\Users\mememe\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin/rspec C:/amsrc/bc-ruby/spec/lib/terminal_spec.rb --require teamcity/spec/runner/formatter/teamcity/formatter --format Spec::Runner::Formatter::TeamcityFormatter
Testing started at 3:31 PM ...
C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require': C:/amsrc/bc-ruby/lib/terminal.rb:21: syntax error, unexpected $end, expecting keyword_end (SyntaxError)
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from C:/amsrc/bc-ruby/spec/lib/terminal_spec.rb:2:in `<top (required)>'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `load'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `block in load_spec_files'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `each'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `load_spec_files'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/command_line.rb:22:in `run'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/runner.rb:90:in `run'
	from C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/runner.rb:17:in `block in autorun'

Process finished with exit code 1
Empty test suite.


===========================================================
.[]GREEN, READY FOR GUI
===========================================================
.[]cs ruby call rspc cmd also ok on win; 

C:\amsrc\bc-ruby>
C:\amsrc\bc-ruby>
C:\amsrc\bc-ruby>
C:\amsrc\bc-ruby>
C:\amsrc\bc-ruby>
C:\amsrc\bc-ruby>C:\Users\mememe\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin
/rspec  --format doc

Cart
  Context: There is a Store associated with this Cart to check products.
    #add Raises error if add a new item without any arguments, ie no Id.
    #count is 1 for one element.
    #count is 2 for two elements.
    #clear Resets a populated cart back to empty.
    #report Describes contents of one item as a string.
    #report Describes its contents of two items as a string.
    #report Describes an empty cart as having no elements.

Store
  #ConvertDollarsToPennies Rounds up.
  #Find_Product Returns true upon searching a product that is in the store.
  #Find_Product Returns false upon searching a product that is not in the store.
  #Find_Product Returns false upon searching for an invalid product.
  #Add_Product Raises error if duplicate product is entered.
  #Add_Product Raises error if discount quantity but not price is entered.
  #Add_Product Raises error if add a new item without any arguments, ie no Id.
  #Add_Product Raises error if add a new item without both Id and Price.
  #count is 1 for one element.
  #count is 2 for two elements.
  #clear Resets a populated store back to empty.
  #report Describes its contents as a string.
  #report Describes an empty store as having no elements.
  #Price_in_pennies: Raises error if price-check an empty store.
  #Price_in_pennies: Raises error if price-check an item not in the store.
  #Price_in_pennies: Returns the price in pennies for quantity of one.
  #Price_in_pennies: Returns the non-discounted price in pennies when there is no discount volume quantity.
  #Price_in_pennies: Returns the discounted total price in pennies for purchase size exactly equal to the discount volume quantity.
  #Price_in_pennies: Returns the minimally discounted total price in pennies for purchase size larger than the discount volume quantity.
  FUTURE Possible Refactorings.
    Products Map Uses symbols instead of strings as hash keys. (PENDING: cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby)

Terminal/Shopping/
  Says Hello to the (Admin) user upon instantiation.
  Does Not accept a redefined $stdin nor $stdout.
  TBA
    asks for product pricelist. (PENDING: Not yet implemented)
    allows entry of product-id, price (PENDING: Not yet implemented)
    allows entry of product-id, price, qualifying quantity, and discounted price (PENDING: Not yet implemented)
    verifies item added to a cart is in the store. (PENDING: (first dependency))

Pending:
  Store FUTURE Possible Refactorings. Products Map Uses symbols instead of strings as hash keys.
    # cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby
    # ./spec/lib/store_spec.rb:110
  Terminal/Shopping/ TBA asks for product pricelist.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:20
  Terminal/Shopping/ TBA allows entry of product-id, price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:22
  Terminal/Shopping/ TBA allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:24
  Terminal/Shopping/ TBA verifies item added to a cart is in the store.
    # (first dependency)
    # ./spec/lib/terminal_spec.rb:26

Finished in 0.20314 seconds
33 examples, 0 failures, 5 pending
===========================================================
.[]plain is also ok with regular simple rspc cmd on win; 

C:\amsrc\bc-ruby>rspec
..........................*..****

Pending:
  Store FUTURE Possible Refactorings. Products Map Uses symbols instead of strings as hash keys.
    # cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby
    # ./spec/lib/store_spec.rb:110
  Terminal/Shopping/ TBA asks for product pricelist.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:20
  Terminal/Shopping/ TBA allows entry of product-id, price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:22
  Terminal/Shopping/ TBA allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:24
  Terminal/Shopping/ TBA verifies item added to a cart is in the store.
    # (first dependency)
    # ./spec/lib/terminal_spec.rb:26

Finished in 0.06251 seconds
33 examples, 0 failures, 5 pending

C:\amsrc\bc-ruby>
===========================================================
.[]fro mrubymine; BUG, can only do the std way, so this does not show doc right now.

Testing started at 12:12 PM ...

Pending: Temporarily disabled with xit

Pending: Not implementing this to make an example.

Pending: Language deficit, until: Be able to pass Block to a Regex, not just an Object, eg ; expect{"aaabbb"}.to match(/ab/)

Pending: Read up on the actual code to sort this out.

Pending: On windows, chk commandline and/or path and/or the raw code.
0{:id=>"a", :price=>100, :numberForBatchDiscount=>0, :batchPrice=>0}
Pending: refactor this prior code to make nice examples
C:/amsrc/bc-ruby/specLibD, [2014-01-15T12:12:58.319579 #4752] DEBUG -- : initialize=  //Logging Test.

Pending: Not yet implemented

Pending: Not yet implemented

27 examples, 0 failures, 19 passed, 8 pending

Finished in 0.130727 seconds

Process finished with exit code 0

===========================================================
.[]SKIPPED SOME
===========================================================
.[]
====================================================
.[]"Grn. Ready to add front end, ie admin enter products."
2014-01-09Thu.21:33:34

Mac108:bc-ruby mememe$ pwd
/Users/mememe/src/bc-ruby
Mac108:bc-ruby mememe$ rspec --format documentation

Cart
  #Using the Store, Buy items - Features:
    #add Raises error if add a new item without any arguments, ie no Id.
    #Add Raises an error if add a product that is not in the store. (PENDING: Not yet implemented)
    #count is 1 for one element.
    #count is 2 for two elements.
    #clear Resets a populated cart back to empty.
    #report Describes contents of one item as a string.
    #report Describes its contents of two items as a string.
    #report Describes an empty cart as having no elements.

Store
  #Find_Product Returns true upon searching a product that is in the store.
  #Find_Product Returns false upon searching a product that is not in the store.
  #Find_Product Returns false upon searching for an invalid product.
  #Add_Product Raises error if discount quantity but not price is entered.
  #ConvertDollarsToPennies Rounds up.
  #Non-Discounted Item - Features:
    #Add_Product Raises error if add a new item without any arguments, ie no Id.
    #Add_Product Raises error if add a new item without both Id and Price.
    #count is 1 for one element.
    #count is 2 for two elements.
    #clear Resets a populated store back to empty.
    #report Describes its contents as a string.
    #report Describes an empty store as having no elements.
  FUTURE possible work.
    Products Map Uses symbols instead of strings as hash keys. (PENDING: cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby)

Terminal/Shopping/
  Says Hello to the (Admin) user upon instantiation.
  Does Not accept a redefined $stdin nor $stdout.
  TBA
    asks for product pricelist. (PENDING: Not yet implemented)
    allows entry of product-id, price (PENDING: Not yet implemented)
    allows entry of product-id, price, qualifying quantity, and discounted price (PENDING: Not yet implemented)
    verifies item added to a cart is in the store. (PENDING: (first dependency))

Pending:
  Cart #Using the Store, Buy items - Features: #Add Raises an error if add a product that is not in the store.
    # Not yet implemented
    # ./spec/lib/cart_spec.rb:14
  Store FUTURE possible work. Products Map Uses symbols instead of strings as hash keys.
    # cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby
    # ./spec/lib/store_spec.rb:77
  Terminal/Shopping/ TBA asks for product pricelist.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:26
  Terminal/Shopping/ TBA allows entry of product-id, price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:28
  Terminal/Shopping/ TBA allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:30
  Terminal/Shopping/ TBA verifies item added to a cart is in the store.
    # (first dependency)
    # ./spec/lib/terminal_spec.rb:32

Finished in 0.01096 seconds
27 examples, 0 failures, 6 pending
Mac108:bc-ruby mememe$

====================================================
.[]Git's output telling about line end changes; 2014-01-09Thu.15:12:14

$ git commit -m "Grn. Validation mostly done.  MVC reorg and renamed many things."
/opt/boxen/homebrew/bin/hub:2060: warning: Insecure world writable dir /Users/mememe/src/bc-ruby in PATH, mode 040777
warning: CRLF will be replaced by LF in .idea/runConfigurations/Run_spec__cart_spec___bc-ruby.xml.
The file will have its original line endings in your working directory.
warning: CRLF will be replaced by LF in .idea/runConfigurations/Run_spec__terminal_spec___bc-ruby.xml.
The file will have its original line endings in your working directory.
[master f990482] Grn. Validation mostly done.  MVC reorg and renamed many things.
warning: CRLF will be replaced by LF in .idea/runConfigurations/Run_spec__cart_spec___bc-ruby.xml.
The file will have its original line endings in your working directory.
warning: CRLF will be replaced by LF in .idea/runConfigurations/Run_spec__terminal_spec___bc-ruby.xml.
The file will have its original line endings in your working directory.
 20 files changed, 707 insertions(+), 512 deletions(-)
 create mode 100644 .idea/runConfigurations/Run_spec__cart_spec___bc-ruby.xml
 create mode 100644 .idea/runConfigurations/Run_spec__terminal_spec___bc-ruby.xml
 rewrite lib/store.rb (60%)
 rewrite spec/lib/store_spec.rb (63%)
Mac108:bc-ruby mememe$

====================================================
.[]Mac line endings; I thought maybe rubymine would help? No, not so, I never committed before, so yet to see.

$ git add -A
/opt/boxen/homebrew/bin/hub:2060: warning: Insecure world writable dir /Users/mememe/src/bc-ruby in PATH, mode 040777
warning: CRLF will be replaced by LF in .idea/runConfigurations/Run_spec__cart_spec___bc-ruby.xml.
The file will have its original line endings in your working directory.
warning: CRLF will be replaced by LF in .idea/runConfigurations/Run_spec__terminal_spec___bc-ruby.xml.
The file will have its original line endings in your working directory.
Mac108:bc-ruby mememe$ pwd
/Users/mememe/src/bc-ruby

====================================================
.[]Now on the mac. 2014-01-09Thu.15:09:33@ green.

Mac108:zPrjsRubyMine mememe$ cd /Users/mememe/src/bc-ruby/
Mac108:bc-ruby mememe$ pwd
/Users/mememe/src/bc-ruby
Mac108:bc-ruby mememe$ ls
doc	lib	spec	specFut
Mac108:bc-ruby mememe$ git status/opt/boxen/homebrew/bin/hub:2060: warning: Insecure world writable dir /Users/mememe/src/bc-ruby in PATH, mode 040777
# On branch master
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   .idea/codeStyleSettings.xml
#	modified:   .idea/misc.xml
#	modified:   .idea/bc-ruby.iml
#	modified:   .idea/runConfigurations/Run_spec__zRspec_spec___bc-ruby.xml
#	modified:   .idea/runConfigurations/Run_spec__zRuby_spec___bc-ruby.xml
#	modified:   .idea/runConfigurations/allRspec1.xml
#	modified:   .idea/vcs.xml
#	modified:   .idea/workspace.xml
#	modified:   lib/cart.rb
#	modified:   lib/store.rb
#	modified:   lib/terminal.rb
#	modified:   spec/lib/cart_spec.rb
#	modified:   spec/lib/store_spec.rb
#	modified:   spec/lib/terminal_spec.rb
#	modified:   specFut/db.rb
#	modified:   specFut/db_spec.rb
#	modified:   specFut/zRuby_spec.rb
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	.idea/runConfigurations/Run_spec__cart_spec___bc-ruby.xml
#	.idea/runConfigurations/Run_spec__terminal_spec___bc-ruby.xml
no changes added to commit (use "git add" and/or "git commit -a")
Mac108:bc-ruby mememe$
Mac108:bc-ruby mememe$
Mac108:bc-ruby mememe$
Mac108:bc-ruby mememe$ rspec --format documentation

Cart
  #Using the Store, Buy items - Features:
    #add Raises error if add a new item without any arguments, ie no Id.
    #count is 1 for one element.
    #count is 2 for two elements.
    #clear Resets a populated cart back to empty.
    #report Describes contents of one item as a string.
    #report Describes its contents of two items as a string.
    #report Describes an empty cart as having no elements.

Store
  #Add_Product Raises error if discount quantity but not price is entered.
  #ConvertDollarsToPennies Rounds up.
  #Non-Discounted Item - Features:
    #Add_Product Raises error if add a new item without any arguments, ie no Id.
    #Add_to_Cart Raises error if add a product that is not in the store. (PENDING: Not yet implemented)
    #Add_Product Raises error if add a new item without both Id and Price.
    #count is 1 for one element.
    #count is 2 for two elements.
    #clear Resets a populated store back to empty.
    #report Describes its contents as a string.
    #report Describes an empty store as having no elements.

Terminal/Shopping/
  Says Hello to the (Admin) user upon instantiation.
  Does Not accept a redefined $stdin nor $stdout.
  TBA
    asks for product pricelist. (PENDING: Not yet implemented)
    allows entry of product-id, price (PENDING: Not yet implemented)
    allows entry of product-id, price, qualifying quantity, and discounted price (PENDING: Not yet implemented)
    verifies item added to a cart is in the store. (PENDING: (first dependency))

Pending:
  Store #Non-Discounted Item - Features: #Add_to_Cart Raises error if add a product that is not in the store.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:29
  Terminal/Shopping/ TBA asks for product pricelist.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:26
  Terminal/Shopping/ TBA allows entry of product-id, price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:28
  Terminal/Shopping/ TBA allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:30
  Terminal/Shopping/ TBA verifies item added to a cart is in the store.
    # (first dependency)
    # ./spec/lib/terminal_spec.rb:32

Finished in 0.00916 seconds
23 examples, 0 failures, 5 pending
Mac108:bc-ruby mememe$
Mac108:bc-ruby mememe$
==================================
1-8w 9.50p 
1.
RED. 1.BUG the if/else tests on store validation are not correct. ; 2.Now have the 3 proper MVC classes: Terminal/GUI, Store/Controller/Model1, Cart/Model2.

======================================
1-8w 7.23p; 

1.
basic CRUD minus Delete on non-special element.

win8CPU /cygdrive/c/amsrc/bc-ruby
$ rspec.bat --format documentation

Cart/
  #add Raises error if add a new item without both Id and Price.
  #count is 1 for one element.
  #count is 2 for two elements.
  #report Describes its contents as a string.
  #clear Resets a populated cart back to empty.
  #report Describes an empty cart as having no elements.

Finished in 0.03125 seconds
6 examples, 0 failures

2.
reorg so that all my self-doc tests are in specFUT, thus not making overly long listings.

3.
this fixes the hash and rspec-matches issues.
==================================
.[]RubyMine-Tip; Use osx10.5+ keymap to get ctrl-a/e line start/end.

$ git log
commit a2f6b6fac749102c1367fb8e50766625f9f7dc92
Author: Anne Moroney <annemoroney@alum.mit.edu>
Date:   Sun Jan 5 01:58:56 2014 +0000

    Grn. New zRuby_specs to hold documentation/learning. Deleted cruft from 'real' files. NEXT; Pending list of Rspecs for Api is begun, not yet simple enough.

commit d314a26db7eb3785bb11e7f6a3aa9ce2bbc5af67
Author: Anne Moroney <annemoroney@alum.mit.edu>
Date:   Thu Jan 2 15:24:59 2014 -0500

    rspec small trials, green/tba. frm earlier. bc-ruby\terminal aka gifts. w8.

win8CPU ~/amPrjs/bc-ruby
$ /cygdrive/c/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/rspec.bat
.****..D, [2014-01-05T01:59:32.334684 #2744] DEBUG -- : initialize=  //Logging Test.
.*..*.**..

Pending:
  Gifts/ Can to_s.
    # !!Add crud test
    # ./spec/lib/gifts_spec.rb:11
  Terminal/Shopping/ #Startup-initialization asks for product pricelist.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:8
  Terminal/Shopping/ #Startup-initialization allows entry of product-id, price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:10
  Terminal/Shopping/ #Startup-initialization allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:12
  zRuby/Logging-Tips/ Is testable by capturing sysout.
    # IDK how to use the let(:outs) statement.
    # ./spec/lib/zRuby_spec.rb:31
  zRuby/Error-Handling-Tips/ Throws NotImplementedError when...??
    # Not yet implemented
    # ./spec/lib/zRuby_spec.rb:48
  zRuby/Rspec-Tips Will not run any "it" test that is changed to "xit".
    # Temporarily disabled with xit
    # ./spec/lib/zRuby_spec.rb:56
  zRuby/Rspec-Tips Will not run and will explain the cause for delay with the the given pending clause's text.
    # Not implementing this to make an example.
    # ./spec/lib/zRuby_spec.rb:58

Finished in 0.01563 seconds
17 examples, 0 failures, 8 pending

win8CPU ~/amPrjs/bc-ruby
$
===============================================
.[]fyi, win rspec inside rails in cli


win8CPU ~/amPrjs/bc-ruby
$ which rspec
/cygdrive/c/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/rspec

win8CPU ~/amPrjs/bc-ruby
$ cat /cygdrive/c/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/rspec
#!C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/ruby.exe
#
# This file was generated by RubyGems.
#
# The application 'rspec-core' is installed as part of a gem, and
# this file is here to facilitate running it.
#

require 'rubygems'

version = ">= 0"

if ARGV.first
  str = ARGV.first
  str = str.dup.force_encoding("BINARY") if str.respond_to? :force_encoding
  if str =~ /\A_(.*)_\z/
    version = $1
    ARGV.shift
  end
end

gem 'rspec-core', version
load Gem.bin_path('rspec-core', 'rspec', version)

win8CPU ~/amPrjs/bc-ruby
$

win8CPU ~/amPrjs/bc-ruby
$ cat /cygdrive/c/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/rspec.bat
@ECHO OFF
IF NOT "%~f0" == "~f0" GOTO :WinNT
@"ruby.exe" "C:/Users/mememe/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/rspec" %1 %2 %3 %4 %5 %6 %7 %8 %9
GOTO :EOF
:WinNT
@"ruby.exe" "%~dpn0" %*

win8CPU ~/amPrjs/bc-ruby
$

============================================
.[]todo run rspec partially in cygwin, as opposed to; 
$ rspec.bat   --format doc
which works but of course runs all of them. 
