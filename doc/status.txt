C:\amsrc\rmtry\doc\status.txt
[]add ; 7.55p MS  Win Azure outperforms amazon ec2 on average by 3x; read cloud spectator report. 
http://www.windowsazure.com/en-us/campaigns/azure-vs-aws/
===========================================================
.[]WIP 150115w
===========================================================
.[]weird but correct.

Microsoft Windows [Version 6.3.9600]


irb(main):006:0> require './lib/terminal'
=> true
irb(main):007:0> Terminal::TerminalPos.new.start_prompt_loop
Hello from your POS Terminal Controller!
Welcome to the Admin Process of entering products and their prices.
 Please confirm to continue with 'y' for yes.
y
["Please enter the ", :id, ".\n"]a
["got value=", "a", "\n"]["Please enter the ", :price, ".\n"]1
["got value=", "1", "\n"]["Please enter the ", :batchPrice, ".\n"]2
["got value=", "2", "\n"]["Please enter the ", :numberForBatchDiscount, ".\n"]3
["got value=", "3", "\n"]["\n", "got ans=", "{:id=>\"a\", :price=>\"1\", :batchPrice=>\"2\", :numberForBatchDiscount=>\"3\"}", "\n"]Please confirm to continue with 'y' for yes.
y
["Please enter the ", :id, ".\n"]b
["got value=", "b", "\n"]["Please enter the ", :price, ".\n"]7
["got value=", "7", "\n"]["Please enter the ", :batchPrice, ".\n"]8
["got value=", "8", "\n"]["Please enter the ", :numberForBatchDiscount, ".\n"]9
["got value=", "9", "\n"]["\n", "got ans=", "{:id=>\"b\", :price=>\"7\", :batchPrice=>\"8\", :numberForBatchDiscount=>\"9\"}", "\n"]Please confirm to continue with 'y' for yes.
n
["Thank you for entering the price list. It is; \n", "[{:id=>\"a\", :price=>\"1\", :batchPrice=>\"2\", :numberForBatchDiscount=>\"3\"}, {:id=>\"b\", :price=>\"7\", :batchPrice=>\"8\", :numberForBatchDiscount=>\"9\"}]", "\n"]=> nil
irb(main):008:0>
===========================================================
.[]CLI TODO

[]using print always never puts

[]needs a require format template?? puts("Please enter the #{ithKey}.\n")

=begin

[]TODO
[]readline does not work? there is also a readline gnu package that can be require'd
[]io package for $SYSIN etc not working?
#require 'io'
#$sysout.
#$sysout.print('please enter x')
a= readline('x',1)# separator, limit
#a= $sysin.readline('x',1)# separator, limit
#$sysout.


$i = 0
$num = 5
begin
   puts("Inside the loop i = #$i" )
   $i +=1;
end until $i > $num
=end
===========================================================
.[]Ruby-tip; easy CLI to avoid  sentinel token to appear upon ready to complete

    # NOT using the seen methods on stackoverflow;
    #@outs+[
    # readline(' ',5)
	
http://www.howtogeek.com/howto/programming/ruby/ruby-if-else-if-command-syntax/	
	If Else If Syntax

Here’s the key difference between Ruby and most other languages. Note that “else if” is actually spelled “elsif” without the e.

    if var == 10
       print “Variable is 10″
    elsif var == “20″
       print “Variable is 20″
    else
       print “Variable is something else”
    end

	
	
http://stackoverflow.com/questions/7534905/how-can-i-fix-this-ruby-yes-no-style-loop
 8 down vote accepted
	

Possible problems:

    check Game.play
    Capital/no-capital in the answer? -> String#upcase or String#downcase
    hidden spaces (before/after the answer) -> String#strip instead String#chomp

You may also use regular expressions (example N) or with a list of answers (yes) to check the answer:

def play_again?
  while true
    print "Would you like to play again? [y/n]: "
    case gets.strip
      when 'Y', 'y', 'j', 'J', 'yes' #j for Germans (Ja)
        puts 'I play' # Game.play
      when /\A[nN]o?\Z/ #n or no
        break 
    end
  end
end

play_again?


==========================================================
1.[]No prompting, only using the optparse to get args, like unix; shows how to test etc ; X.Issue 2.9: Building Unix-style command line applications - Practicing Ruby
https://practicingruby.com/articles/building-unix-style-command-line-applications?u=dc2ab0f9bb
Issue 2.9: Building Unix-style command line applications - Practicing Ruby

==========================================================
2.[]TODO THT that readline was also in IO? this is GNU; looks nice ; X.Ruby Readline
http://bogojoker.com/readline/
Ruby Readline

==========================================================
3.[] ; X.ruby - How can I chomp every line in an array at once? - Stack Overflow
http://stackoverflow.com/questions/3750631/how-can-i-chomp-every-line-in-an-array-at-once
ruby - How can I chomp every line in an array at once? - Stack Overflow
 10 down vote accepted
	

IO.popen("Generate a list of files").readlines.map(&:chomp)



===========================================================
.[]
===========================================================
.[]
===========================================================
.[]URLS-LIST
==========================================================
1.[] ; X.Have Ruby on Rails Installed on Windows the Best Way | My Journy to Become a Ruby on Rails Developer
http://igotrailed.wordpress.com/2013/01/31/have-ruby-on-rails-installed-on-windows-the-best-way/
Have Ruby on Rails Installed on Windows the Best Way | My Journy to Become a Ruby on Rails Developer


31Jan / 2013
Have Ruby on Rails Installed on Windows the Best Way

This is a complete step by step instructions with minimal explanations, on how to set up your Windows machine for starting building your RoR application in the most efficient and professional way.

Most of this is inspired from the Michael Hurtl most recommended Rails book 

1. Download and install RailsInsaller

2. Download and install Console 2

3. Download and install Sublime Text 2

4. Download and install Herkou Toolbelt

5. Open Console 2

6. Navigate through cd commands to a folder where you want your app folder to be created

7. Run rails new applicationname (will create the application directory with all rails default sub-directories and files)

8. Open gemfile with Sublime Text 2 and change as per your required gems. I found the gemfile used by Rails tutorial book is perfect to use in every application, then add gems when you need later. But make sure you:
  – remove rb-fsevent, growl, rb-inotify, libontify
  – add 

gem ‘rb-fchange’, ’0.0.5′
gem ‘rb-notifu’, ’0.0.4′
gem ‘win32console’, ’1.3.0′

Google the pages of these gems to check their latest version and change the version number accordingly

9. Navigate with Console 2 to your newly created app folder and run bundle install

10. Run rails s

Congratulations you now have rails server running with some beautiful essential gems.

11. git init

12. git add .

13. git commit -m “Initial commit”

14. Create git account on github

15. git remote add origin https://github.com/%5Busernane%5D/%5Brepositaryname%5D.git

16. git push -u origin master

Congratulations you have just set up Git to work smoothly with your app.

17. Create a heroku account

18. Run heroku login on console 2

19. heroku create

20. git push heroku master

Congratulations you have hosted your app on Heroku.

The most recommended testing environment is rspec, and here is the best way to install it with the best supporting gems and options.

21. In console 2, run rails generate rspec:install

22. bundle exec guard init rspec (guard gem for autotesting)

23. change content of guardfile to the one used in the tutorial

24. bundle exec spork –bootstrap (spork gem for speeding up tests)

25. Change content of spec/spec_helper.rb to the one used in the tutorial

26. Change content of .rspec file to 

--colour
--drb

27. bundle exec guard init spork (to tell rails to use spork with guard)

28. add :cli => ‘–drb’ argument to guard ‘rspec’ line in guardfile

29. In sublime text 2 go to preference -> Package Control and select install package find  rubytest and have it installed.

30. preference -> Package Settings->RubyTest->Settings – User add bundle exec before any rspec you find

Congratulations you now have rspec testing framewrok installed with the best supporting gems to autotest, notify, and speed things up. You can also now run tests from Sublime Text 2 itself.

In thirty steps you now have everything ready for the best development environment on Windows for any serious application development.

==========================================================
2.[] ; X.Sublime Text - Download
http://www.sublimetext.com/3
Sublime Text - Download

==========================================================
3.[] ; X.Heroku Toolbelt
https://toolbelt.heroku.com/
Heroku Toolbelt

==========================================================
4.[]WIN TERMINAL app, don't think it worked either ; X.Console | Free software downloads at SourceForge.net
http://sourceforge.net/projects/console/
Console | Free software downloads at SourceForge.net

==========================================================
6.[] ; X.ruby on rails 3 - Getting Rspec + autotest working on windows - Stack Overflow
http://stackoverflow.com/questions/3852143/getting-rspec-autotest-working-on-windows
ruby on rails 3 - Getting Rspec + autotest working on windows - Stack Overflow

Getting Rspec + autotest working on windows
up vote 5 down vote favorite
	

I have installed growl + rspec + autotest on my windows 7 machine. From the command prompt, when I type 'rspec spec/' it doesn't work. The tests will only run if I use 'rake spec/' + 'autotest'.

Also, I am running these tests: http://railstutorial.org/chapters/static-pages#code:default_pages_controller_spec (i.e. very, very trivial) and they are taking 8.11 seconds.

They also fail when I run them - even though they don't in the example. I have done everything the tutorial told me, the problem is the tutorial doesn't go too deep into installing rspec on a Windows machine. It gives a link, but even then you have to kinda piece the instructions together.

The errors I get are 'Failure/Error: Unable to find C to read failed line [31mundefined methord get' for #<RSpec::Core::ExampleGroup::Nested_1::Nested_1:0x48336c0>'

The second error is very similar to that.

I have also installed Growl correctly, because I get a notification that there were two failures.

Can anyone help me?
windows-7 ruby-on-rails-3 rspec
share|improve this question
	
asked Oct 4 '10 at 0:28
marcamillion
3,9561258131
	
	 
	
marcamillion, when you get a chance, could you comment with the exact versions of ruby, rails, rspec and autotest that you see this problem with? I'm going to try to reproduce it with the latest stable of each of these, but just in case I'd like to know your versions. –  carols10cents Jan 13 '11 at 0:51
add comment
4 Answers
active oldest votes
up vote 2 down vote
	

I did a little googling, and according to this thread on the rspec ruby forum and this closed rspec-rails issue, this is an issue with rspec-rails that has been fixed.

I am running Ruby 1.9.2p136 on Windows 7 using rails 3.0.3.

This is what my Gemfile looked like, which shows the versions of rspec and rspec-rails that I was using:

source 'http://rubygems.org'

gem 'rails', '3.0.3'
gem 'sqlite3-ruby', :require => 'sqlite3'

group :development do
  gem 'rspec-rails', '2.4.1'
end

group :test do
  gem 'rspec', '2.4.0'
  gem 'webrat', '0.7.1'
end

I say "lookED like" because when I tried to run the rspec rails generator, this is what I got:

C:\Ruby\sample_app>rails generate rspec:install
  create  .rspec
  create  spec
  create  spec/spec_helper.rb
Could not find "autotest" in any of your source paths. Your current source paths
 are:
C:/Ruby/sample_app/lib/templates/rspec/install
C:/Ruby/192-stackoverflow/lib/ruby/gems/1.9.1/gems/rspec-rails-2.3.0/lib/generators/rspec/install/templates

So then I added autotest to my Gemfile (and did bundle install again), then tried rails generate rspec:install again and it worked with no errors. So this is what my Gemfile looks like now:

source 'http://rubygems.org'

gem 'rails', '3.0.3'
gem 'sqlite3-ruby', :require => 'sqlite3'

group :development do
  gem 'autotest'
  gem 'rspec-rails', '2.4.1'
end

group :test do
  gem 'rspec', '2.4.0'
  gem 'webrat', '0.7.1'
end

And the version of autotest that this installs is 4.4.6:

C:\Ruby\sample_app>bundle show autotest
C:/Ruby/192-stackoverflow/lib/ruby/gems/1.9.1/gems/autotest-4.4.6

I then created the controller as instructed in the tutorial:

$ rails generate controller Pages home contact

And I was able to run both "bundle exec autotest" and "rspec spec/" without getting the error you are seeing:

C:\Ruby\sample_app>bundle exec autotest
loading autotest/rspec2
bundle exec C:\Ruby\192-stackoverflow\bin\ruby -S C:/Ruby/192-stackoverflow/lib/ruby/gems/1.9.1/gems/rspec-core-2.4.0/bin/rspec --tty 'C:/Ruby/sample_app/spec/controllers/pages_controller_spec.rb'
..

Finished in 23.04 seconds
2 examples, 0 failures
# I killed autotest with CTRL-c at this point
Interrupt a second time to quit
Terminate batch job (Y/N)? y
Terminate batch job (Y/N)? y


C:\Ruby\sample_app>rspec spec/
..

Finished in 23.11 seconds
2 examples, 0 failures

I also continued on with the tutorial, writing specs for the About page, while autotest was running and it was running on my changes without any problems.

So please try:

    Updating your Gemspec to look similar to my 2nd one posted here
    Running 'bundle install'
    Running 'bundle exec autotest'

and let me know if that works. I will be checking back!
share|improve this answer
	
edited Jan 13 '11 at 14:10

	
answered Jan 13 '11 at 3:16
carols10cents
3,24831435
	add comment
up vote 1 down vote
	

I've not found a permanent fix that works yet, but apparently it boils down to a path issue - something is munging the windows path and it breaks. However, there's a work around:

Within your describe, before the 'get' call, put this:

include RSpec::Rails::ControllerExampleGroup

Here's sample code using a generated Rails spec for a controller. Note that it's at the beginning of the scope:

require 'spec_helper'

describe PagesController do
  include RSpec::Rails::ControllerExampleGroup

  describe "GET 'home'" do
    it "should be successful" do
      get 'home'
      response.should be_success
    end
  end

  describe "GET 'contact'" do
    it "should be successful" do
      get 'contact'
      response.should be_success
    end
  end

end

There's a fix I've seen that suggests a change to spec_helper (in the Rails case), but I couldn't get it to work.

EDIT: A bit more research reveals this is a problem with autospec - this work around will work if you're just using rspec, but will not work with autotest. I've not been able to find a solution for this, however.
share|improve this answer
	
edited Oct 4 '10 at 15:02

	
answered Oct 4 '10 at 14:25
tsalaroth
477
	
	 
	
Yeh...I am using autotest :( –  marcamillion Oct 4 '10 at 18:12
add comment
up vote 1 down vote
	

I thought that this might help those who might be having trouble now that all the gems have been updated quite a bit (especially for those using Ruby on Rails 3 tutorial):

I was able to get this working using the latest versions of all gems:

My Gemfile:

source 'https://rubygems.org'

gem 'rails', '3.2.6'
gem 'jquery-rails'

gem 'sqlite3', :group => [:development, :test]
gem 'pg', :group => :production #This is so Heroku will work

group :development do
  gem 'rspec-rails'
end

group :test do
  gem 'rspec'
  gem 'webrat'
  gem 'spork-rails'  #Use this is only if you want to use spork
end

Make sure you clean up rspec if you've already got an older version (by using the Ruby on Rails 3 tutorial, for example): http://stackoverflow.com/a/4433217/911133

To use autotest follow the directions here: https://github.com/svoop/autotest-growl

Note that installing growl-for-windows is part of that deal and snarl is not needed: http://www.growlforwindows.com/

Your .autotest file can be in one of two places

1) your HOME directory, which is (example):

C:\users\joeblow\.autotest

2) the rails application root (this will then operate for that app only)

my .autotest file looks like this:

require 'autotest/growl'
require 'autotest/restart'
require 'autotest/timestamp'

Autotest.add_hook :initialize do |autotest|
  autotest.add_mapping(%r%^spec/(requrests)/.*rb$%) do
|filename, _|
filename
end
end

Autotest::Growl::clear_terminal = false

Make sure you've done a 'bundle install'

Then run Growl for windows (start menu or start on windows boot)

run autotest in the command line and you should be good to go!

c:\users\joeblow\workspace\Rails\MyRailsProject> autotest

share|improve this answer
	
edited Jul 27 '12 at 21:31

	
answered Jul 27 '12 at 15:41
Philip J Lorenz
112
	add comment
up vote 0 down vote
	

If someone wrote a blog post with very detailed instructions on how to do this it would probably be pretty popular. Somebody write it pleeeease.
share|improve this answer
	
answered Dec 30 '10 at 13:11
Spencer Cooley
9521824
	add comment
==========================================================
7.[]BOOK GREAT ; X.Learn Web Development with the Ruby on Rails Tutorial | Static Pages
http://ruby.railstutorial.org/chapters/static-pages#code:default_pages_controller_spec
Learn Web Development with the Ruby on Rails Tutorial | Static Pages

==========================================================
8.[] ; X.importeroo/spec/importeroo/importer_spec.rb at master · AnneTheAgile/importeroo
https://github.com/AnneTheAgile/importeroo/blob/master/spec/importeroo/importer_spec.rb
importeroo/spec/importeroo/importer_spec.rb at master · AnneTheAgile/importeroo

==========================================================
12.[] ; X.ruby2-rails4-bootstrap-heroku/spec at master · diowa/ruby2-rails4-bootstrap-heroku
https://github.com/diowa/ruby2-rails4-bootstrap-heroku/tree/master/spec
ruby2-rails4-bootstrap-heroku/spec at master · diowa/ruby2-rails4-bootstrap-heroku

==========================================================
13.[] ; X.Install gems on Windows 7 / Problems / Discussion Area - RubyGems.org Support
http://help.rubygems.org/discussions/problems/333-install-gems-on-windows-7
Install gems on Windows 7 / Problems / Discussion Area - RubyGems.org Support
 Posted by Luis Lavena on May 18, 2011 @ 02:08 PM
Luis Lavena's Avatar

Please, either Jim Bates or Onno, provide the complete output of your gem install command adding --debug -V options to it.

E.g. If the command was gem install rails then the full command will be gem install rails --debug -V

Use Pastie.org or gist.github.com to upload the full output and we will be able to help you better.

==========================================================
15.[] ; X.notepad++ drag and drop text windows 8 - Google Search
https://www.google.com/search?q=notepad%2B%2B&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:en-US:official&client=firefox-a#q=notepad%2B%2B+drag+and+drop+text+windows+8&rls=org.mozilla:en-US:official
notepad++ drag and drop text windows 8 - Google Search

==========================================================
16.[] ; X.Installing Ruby on Rails on windows - Stack Overflow
http://stackoverflow.com/questions/4853222/installing-ruby-on-rails-on-windows
Installing Ruby on Rails on windows - Stack Overflow
 4 down vote accepted
	

On Windows you need to set your system PATH variable (My Computer -> Properties -> Advanced -> Environment Variables -> System variables)

Append the PATH Variable value:: c:\ruby\bin;

==========================================================
17.[]This is the official documentation site for RSpec-2.  ; X.Publisher: RSpec - Relish
https://www.relishapp.com/rspec
Publisher: RSpec - Relish

==========================================================
18.[] ; X.RSpec's new message expectation syntax
http://teaisaweso.me/blog/2013/05/27/rspecs-new-message-expectation-syntax/
RSpec's new message expectation syntax

RSpec's new message expectation syntax
27 May 2013

We've developed a new syntax for message expectations in RSpec, which brings message expectations in line with the new expect syntax for state based expectations. This change required us to make a number of internal refactorings, so we're cutting a release candidate of RSpec, 2.14rc1, so that early adopters can try this new feature out. We encourage you to try out the release candidate and report any issues to https://github.com/rspec/rspec-mocks/issues.

In 2.14rc1 both the new syntax and old syntax are enabled by default. This is in line with state based expectations, where both syntaxes are also enabled by default.

With the old syntax message expectations were set like this:

foo.should_receive(:bar)
foo.should_receive(:bar).with(:buzz)
foo.should_receive(:bar).exactly(3).times

The new syntax for message expectations looks like this:

expect(foo).to receive(:bar)
expect(foo).to receive(:bar).with(:buzz)
expect(foo).to receive(:bar).exactly(3).times

This syntax also adds new ways to stub methods. Previously you may have stubbed like this:

d = double(:message1 => true)
d.stub(:message2).and_return(:value)
real_object.stub(:message).and_return(:value)

You can now stub like this:

d = double(:message1 => true)
allow(d).to receive(:message2).and_return(:value)
allow(real_object).to receive(:message).and_return(:value)

If you want to configure which syntaxes are enabled you can do so as follows (see your spec_helper.rb file):

RSpec.configure do |configuration|
  configuration.mock_with :rspec do |configuration|
    configuration.syntax = [:expect, :should]
    #configuration.syntax = :should
    #configuration.syntax = :expect
  end
end

Myron's post explains why using the expect syntax is preferable to the should syntax in some cases. The problem here is that the :should syntax that RSpec uses can fail in the case of proxy objects, and objects that include the delegate module. Essentially it requires that we define methods on every object in the system. Not owning every object means that we cannot ensure this works in a consistent manner. The expect syntax gets around this problem by not relying on RSpec specific methods being defined on every object in the system.

We think that the new :expect syntax for message expectations is an improvement, and that you should try it in your fresh and existing spec suites. You can get the new syntax by upgrading to RSpec 2.14rc1, and we encourage you to do so.

==========================================================
39.[] ; X.Module: Spec::Matchers
http://rspec.rubyforge.org/rspec/1.1.11/classes/Spec/Matchers.html
Module: Spec::Matchers

==========================================================
40.[]CLI app they say use a variable special to capture, but i made a custom matcher instead ; X.ruby - Can I use RSpec to mock stdin/stdout to test console reads & writes? - Stack Overflow
http://stackoverflow.com/questions/6335282/can-i-use-rspec-to-mock-stdin-stdout-to-test-console-reads-writes
ruby - Can I use RSpec to mock stdin/stdout to test console reads & writes? - Stack Overflow
 11 down vote accepted
	

You can use mocks and have the method called more than once by listing multiple values in the and_return() method. These will be returned, one on each call, in the order given.

STDIN.should_receive(:read).and_return("Your string")

STDIN.should_receive(:read).and_return("value1", "value2", "value3")

You can do similar things with STDOUT:

STDOUT.should_receive(:puts).with("string")

See the RSpec mocking documentation for more information.

==========================================================
41.[]Rspec-tip; Do NOT over-constrain your code ; X.Everything that is wrong with mocking, bdd, and rspec
http://ngauthier.com/2010/12/everything-that-is-wrong-with-mocking.html
Everything that is wrong with mocking, bdd, and rspec

==========================================================
42.[]LIST OF WINDOWS TERMINAL items ; X.Making a better, somewhat prettier, but definitely more functional Windows Command Line - Scott Hanselman
http://www.hanselman.com/blog/MakingABetterSomewhatPrettierButDefinitelyMoreFunctionalWindowsCommandLine.aspx

Making a better, somewhat prettier, but definitely more functional Windows Command Line
July 16, '13 Comments [58] Posted in Tools
Running htop via ssh under ConEmu
 

I've blogged before, in fact in 2004, (!) that Windows is missing the text mode boat. There is a massive opportunity for a great, nay, awesome and pretty, command line on Windows. If someone cracks this problem, they're gonna be heroes.

I love iTerm2 and its tabs, its font handling, its simple elegance. I want this on Windows. In 2011 I found Console2, and then in 2012 I moved to ConEmu, a great tabbed terminal for Windows. Even then, it's not "pretty." I love these guys, and the ConEmu is truly an amazing and configurable piece of software, but it was written by developers for developers. I have to change the fonts to Consolas for the main font and Segoe UI for the rest to make it tolerable. Am I being petty and focusing on looks? Absolutely. Gorgeous and functional software is why Mac companies like Panic exist. They make things that are pretty AND functional. Windows folks could definitely "lovingly design" stuff more.

Here's some command line utilities that augment and help - but don't yet complete save - the Windows Command Line.
Clink

I just learned about Clink and I'm hooked. It's hooked as well, directly into your cmd.exe window! *rimshot*

We all know that there's Cygwin for a bash-like experience in Windows, but Click is a small utility that brings some of those productivity and editing features into cmd.exe directly!

    Bash-like line editing from GNU's Readline library. Read more on Readline's keyboard shortcuts.
    Better path completion (TAB).
    Paste from clipboard (Ctrl-V). Oh yes.
    Support for the completion of executables/commands, and environment variables.
    Undo/Redo (Ctrl-_ or Ctrl-X, Ctrl-U)
    Improved command line history.
        Persists across sessions.
        Searchable (Ctrl-R and Ctrl-S).
        History expansion (e.g. !!, !, and !$).

The most significant change that Clink makes is to Tab Completion, moving to a more Bash-y "show them the choices" mode rather than the DOS-like "make them cycle through everything." Here I've pressed TAB over 2013-0 and Clink is showing me what I can choose from.

using Clink to make cmd.exe better
PowerShell ISE

Surprise! You already have this on your Windows computer. Ya, it freaked me out also. You can even hide the script pane if you want (Ctrl-R) and just use PowerShell ISE as a console! You get auto completion (see the Directory intellisense below), coloring, aliases and all the power of PowerShell.

Sure, it's not bash, but that may be a good thing. You may not have been exposed to PowerShell and the prospect may frighten you, but try it for a bit. They've aliased the obvious commands "ls" does what you'd expect as does "dir." Moving around will feel like any command prompt.

Not to mention if you are using PowerShell you already get a full debugger experience.

The PowerShell ISE

It won't win any awards for good looks (again, I come back to the importance of fonts, whitespace, and good typography...get a designer) but it is extremely functional and you already have it!
ConEmu lets you put your consoles in JumpLists!ConEmu

I've talked about ConEmu before, but I'll bring some of that over here. ConEmu takes your command prompt and adds tabs, status bar details, admin tabs, freakin' taskbar progress bars on copies (which is hot), and deep support for FarManager (Norton Commander anyone?)

Tabs in ConEmu in Windows

ConEmu is definitely a huge jump for console usability on Windows. The feature that really blew me away was Progress Bar integration. If you're familiar with Windows 7 you are likely familiar with the way that progress bars are overlaid over a Windows 7 Taskbar button. ConEmu looks at the current application running and some heuristics and overlays progress. Madness. Do a chkdsk and watch the progress bar. Love this little detail.

ConEmu Progress Bar
Git for Windows or Cygwin

If you want a Linux-like experience on Windows with a nice shell, Cygwin has long been a choice. However, since the release of Git for Windows most folks I know just install it and use the Git Bash. If you get Cygwin proper you'll get a much more complete "fake Linux" through their very competent set of command line tools, but for most, Git Bash will suffice.

Git Bash gets you close

What about SSHing? That's a fundamental part of command-line life for folks connecting to remote Unix machines. For me, I have a Linux farm I run on Azure that I often need to ssh into.

    Random: I like to say I 'shoosh' into the machines, but folks keep looking at me weird. I thought this was a thing?

However, the SSH clients for Windows suck. Ok, they don't suck, but they are ugly. It's scandalous how ugly. Mad respect to PuTTY for being awesome and super functional, but it's like running Windows 95 in a window every time I launch it. Here's some better SSH clients, including a fork of PuTTY itself.
Bitvise SSH Client - more importantly, SSH from the command line

The Bitvise SSH Client is free for personal use and works great. There's a whole GUI, and, bless them, it's not pretty. However! There's also a command line version which is the REAL treasure. I just want to type ssh and be on my way.

In fact, I made a batch file called "ssh.bat" and put it in my PATH that just has this inside: "stermc %1" this means I can just type ssh user@hostname:port and be on my way. This is, for me, WAY easier than putty for most things. Bitcise is definitely worth checking out.

Find a SSH command line too like Bitvise
Kitty

Kitty is a fork of version 0.62 of the original PuTTY. There's also a portable version that I've put in my Dropbox utils folder (which is in my PATH) so it's on every machine I have automatically. Kitty has some nice features like Send to Tray, transparency, session launching (so you don't need Pageant), and lots of little poweruser features like "rolling up" the app if you Ctrl-Click on the Title Bar.

Kitty is a better PuTTY alternative

Kitty also can integrate into your browser to handle ssh:// links, which is a nice touch.

What console app improvers have I missed? What do you use on Windows? Sound off in the comments.

==========================================================
43.[]Clink WIN SW did NOT work well, forget why, 140115 ; X.clink_0.4_setup.exe - clink - clink v0.4 installer - Bringing Bash's powerful command line editing to Microsoft Windows' cmd.exe - Google Project Hosting
https://code.google.com/p/clink/downloads/detail?name=clink_0.4_setup.exe&can=2&q=
clink_0.4_setup.exe - clink - clink v0.4 installer - Bringing Bash's powerful command line editing to Microsoft Windows' cmd.exe - Google Project Hosting
Making a better, somewhat prettier, but definitely more functional Windows Command Line - Scott Hanselman
 clink
Bringing Bash's powerful command line editing to Microsoft Windows' cmd.exe 

==========================================================
44.[]DONE, so easy :) ; X.Writing Custom RSpec Matchers - Timothy's Blog
http://blog.timothyandrew.net/blog/2013/05/01/writing-custom-rspec-matchers/

Writing Custom RSpec Matchers

May 1st, 2013

RSpec matchers let you abstract away common assertions in your test code.

For example, we recently had a spec file with a bunch of lines that looked like this:

1

	

worksheet.rows[0].cells.map(&:value).should include "Foo"

Which tests if the excel file we’re generating (using axlsx) includes Foo in the header row.

That isn’t very neat. What if we replace it with this?

1

	

worksheet.should have_header_cell "Foo"

That looks a lot better. We can implement this kind of abstraction using custom RSpec matchers.

The matcher for this is as simple as:

1
2
3
4
5

	

RSpec::Matchers.define :have_header_cell do |cell_value|
  match do |worksheet|
    worksheet.rows[0].cells.map(&:value).include? cell_value
  end
end

RSpec passes in the expected and actual values to these blocks, and our code has to return a boolean representing the result of the assertion.

Now what about assertions that look like this?

1
2
3

	

worksheet.rows[1].cells.map(&:value).should include "Foo"
worksheet.rows[2].cells.map(&:value).should include "Bar"
worksheet.rows[3].cells.map(&:value).should include "Baz"

The row that we’re checking changes for each assertion. Of course, we could create a different matcher for each of these cases, but there’s a better way.

1
2
3

	

worksheet.should have_cell("Foo").in_row 1
worksheet.should have_cell("Bar").in_row 2
worksheet.should have_cell("Baz").in_row 3

RSpec lets you chain custom matchers.

1
2
3
4
5
6
7
8
9
10
11
12
13

	

RSpec::Matchers.define :have_cell do |expected|
  match do |worksheet|
    worksheet.rows[@index].cells.map(&:value).include? expected
  end

  chain :in_row do |index|
    @index = index
  end

  failure_message_for_should do |actual|
    "Expected #{actual} to include #{expected} at row #{@index}."
  end
end

We first store the argument passed in to in_row as an instance variable, and then access it in the main have_cell matcher.

The example also includes a custom error message handler, which properly formats an error message if the assertion fails.

==========================================================
45.[] ; X.solnic.eu
http://solnic.eu/2011/01/14/custom-rspec-2-matchers.html
solnic.eu

Writing Custom RSpec Matchers - Timothy's Blog
Custom RSpec-2 Matchers
Posted by solnic on Jan 14 2011

RSpec is one of my favorite tools. I have literally fallen in love with this fantastic BDD library, especially with its second version. While using RSpec I realized it teaches me how to write tests. Yes, exactly - learning RSpec DSL, its syntax and structure of spec examples you actually learn the best practices in writing tests. RSpec, despite many built-in matchers, comes with a DSL for defining your own, custom matchers. It’s so easy that you’re not gonna believe this.
Basics

In RSpec matchers are nothing but methods available in the context of an example. You use them to make sure that a given expectation is met. There are many matchers that come with RSpec for instance here is how you can use the respond_to matcher:

describe String do
  it { should respond_to(:gsub) }
end

It’s so clean and beautiful that I probably don’t have to explain what this piece of code does, right?

Tip: When you call describe with a class as an argument, RSpec will automatically create an instance of that class and make it available via subject method. Subject is also the default context of an example block. That’s why we don’t have to write “subject.should respond_to(:gsub)”, because by default “should” or “should_not” is called on the subject.

Alright, for a list of available matchers check out the official docs. Let’s focus on writing our own matchers. If you’re wondering why you would need to do that, let me show a simple example of a User model spec:

describe User do
  before { subject.email = "foobar" }

  it "should have errors on email" do
    subject.errors.should have_key(:email)
  end

  it "should have correct error message" do
    subject.errors[:email].should include("Email is invalid")
  end
end

Now, you probably can imagine that almost identical code could be used in many other cases for many other model classes. Those 6 lines of code can be written as 1. You just need a custom matcher.

Defining a custom matcher is simple. Let’s start with a basic one that checks if a given model instance has validation errors:

RSpec::Matchers.define :have_errors_on do |attribute|
  match do |model|
    model.valid? # call it here so we don’t have to write it in before blocks
    model.errors.key?(attribute)
  end
end

And we can use it like that:

describe User do
  before { subject.email = "foobar" }

  it { should have_errors_on(:email) }
end

It covers only the first expectation, but it’s a good starting point.
Chaining

The second expectation in the example is to see if the correct validation error message is set. It’s possible to run matchers in a chain so let’s see how we can implement chaining in our custom matcher:

RSpec::Matchers.define :have_errors_on do |attribute|
  chain :with_message do |message|
    @message = message
  end

  match do |model|
    model.valid?

    @has_errors = model.errors.key?(attribute)

    if @message
      @has_errors && model.errors[attribute].include?(@message)
    else
      @has_errors
    end
  end
end

It’s really that simple. Now the matcher checks two things and returns true only if the message exists and if it matches the expected one.

Let’s use it:

describe User do
  before { subject.email = "foobar" }

  it { should have_errors_on(:email).with_message("Email has an invalid format") }
end

Nice! One line instead of six. But that’s not everything, with a failing spec failure messages might look like that:

F

Failures:

  1) User when email is not valid
     Failure/Error: it { should have_errors_on(:email).with_message("Email has an invali format") }
       expected #<user @id=nil @email="foobar"> to have errors on :email

Finished in 0.00047 seconds
1 examples, 1 failure

It’s automatically generated by RSpec based on the matcher name. It’s ok, but notice that it won’t tell us if the error message was incorrect. That’s why we need to set custom failure messages.
Custom failure messages and it’s done!

It is really recommended to use meaningful failure messages. We need to set 2 types of them, first one for “should” and second one for “should_not” expectations. The idea is that if there is an error and the message is not correct, we need to show that information in the failure output.

So, our complete matcher looks like that:

RSpec::Matchers.define :have_errors_on do |attribute|
  chain :with_message do |message|
    @message = message
  end

  match do |model|
    model.valid?

    @has_errors = model.errors.key?(attribute)

    if @message
      @has_errors && model.errors[attribute].include?(@message)
    else
      @has_errors
    end
  end

  failure_message_for_should do |model|
    if @message
      "Validation errors #{model.errors[attribute].inspect} should include #{@message.inspect}"
    else
      "#{model.class} should have errors on attribute #{attribute.inspect}"
    end
  end

  failure_message_for_should_not do |model|
    "#{model.class} should not have an error on attribute #{attribute.inspect}"
  end
end

Now if we run our example and it fails because an error message doesn’t match the expectation, we will get following failure message in the output:

F

Failures:

  1) User
     Failure/Error: it { should have_errors_on(:email).with_message("Email has an invalid format") }
       Validation errors ["Email is blah"] should include "Email has an invalid format"
     # ./_examples/rspec2_matchers.rb:55:in `block (2 levels) in <top (required)>’

Finished in 0.00053 seconds
1 example, 1 failure

Summing up

As you can see implementing custom RSpec matchers is easy trivial and it’s a highly recommended practice. There are plenty of use cases where you want to write custom matchers. It makes your specs clean and even more readable and what’s most important it keeps your spec’s code DRY and extendable.

Here are some resources if you want to learn more:

    Official RSpec wiki on Github
    RSpec Docs
    David Chelimsky Blog
    RSpec matchers screencast
    A Rails Demo with posts about RSpec


==========================================================
46.[] ; X.define matcher - RSpec Expectations - RSpec - Relish
https://www.relishapp.com/rspec/rspec-expectations/v/2-13/docs/custom-matchers/define-matcher
define matcher - RSpec Expectations - RSpec - Relish

==========================================================
47.[]class needed update for the 'expect' ; X.New way of defining custom rspec matchers / Code School / Discussion Area - Code School Support
http://help.codeschool.com/discussions/code-school/10904-new-way-of-defining-custom-rspec-matchers
New way of defining custom rspec matchers / Code School / Discussion Area - Code School Support
New way of defining custom rspec matchers
Iain Beeston's Avatar
Iain Beeston

Feb 24, 2013 @ 05:39 AM

In Testing with RSpec level 6, the way that is shown for defining custom matchers using a matcher class is (I think) the old way of doing things. RSpec now has a method named "RSpec::Matchers.define" that takes a block and provides a slightly more succinct way of defining matchers, and this is the way that the rspec documentation now recommends doing it. See here for details - https://www.relishapp.com/rspec/rspec-expectations/v/2-13/docs/cust...

Sorry if this isn't the best place for providing feedback on the courses!

    Support Staff 2 Posted by Adam Rensel on Mar 01, 2013 @ 11:46 AM
    Adam Rensel's Avatar

    Hi Iain,
    Don't worry, this is the perfect place to provide feedback. Thanks for letting us know, I'm going to add this to the rspec course repo so we can make updates to content. Thanks again.
==========================================================
58.[] ; X.How can I change the return value of a class constructor in Ruby? - Stack Overflow
http://stackoverflow.com/questions/4888786/how-can-i-change-the-return-value-of-a-class-constructor-in-ruby
How can I change the return value of a class constructor in Ruby? - Stack Overflow
 5 down vote accepted
	

def Foo.new(arg=nil)
  arg || super
end

 11 down vote
	

By definition, constructors are meant to return a newly created object of the class they are a member of, so, no you should not override this behavior.

Besides, in Ruby, new calls initialize somewhere within its method body, and its return value is ignored, so either way the value you return from initialize will not be returned from new.

With that said, I think that in your case, you might want to create a factory method that will return different Foo objects based on arguments passed to the factory method:

class Foo
  def self.factory(arg = nil)
    return arg if arg.kind_of? Foo
    Foo.new
  end
end
foo = Foo.factory
bar = Foo.factory(foo)

assert_equal foo, bar #passes

share|improve this answer
	
edited Feb 3 '11 at 17:08

	
answered Feb 3 '11 at 16:36
Jacob Relkin
81.3k14188215
	add comment
up vote 7 down vote
	

initialize is called by new which ignores its return value. Basically the default new method looks like this (except that it's implemented in C, not in ruby):

class Class
  def new(*args, &blk)
    o = allocate
    o.send(:initialize, *args, &blk)
    o
  end
end

So the newly allocated object is returned either way, no matter what you do in initialize. The only way to change that is overriding the new method, for example like this:

class Foo
  def self.new(arg=nil)
    if arg
      return arg
    else
      super
    end
  end
end

However I'd strongly advise against this since it runs counter to many expectations that people have when calling new:

    People expect new to return a new object. I mean it's even called new. If you want a method that does not always create a new object, you should probably call it something else.
    At the very least people expect Foo.new to return a Foo object. Your code will return whatever the argument is. I.e. Foo.new(42) would return 42, an Integer, not a Foo object. So if you're going to do this, you should at the very least only return the given object, if it is a Foo object.

share|improve this answer
	
edited Feb 3 '11 at 16:57
Jacob Relkin
81.3k14188215
	
answered Feb 3 '11 at 16:47
sepp2k
142k13323421
	add comment
up vote 1 down vote
	

Does not work for:


class Some
    def self.new( str )
        SomeMore.new( str )
    end
end



# the Some is parent of SomeMore class SomeMore < Some def initialize( str ) @str = str end end

share|improve this answer
	
edited Mar 30 '13 at 15:09

	
answered Nov 11 '12
==========================================================
59.[] ; X.ruby indicate a class's type - Google Search
https://www.google.com/search?q=ruby+indicate+a+class%27s+type&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:en-US:official&client=firefox-a
ruby indicate a class's type - Google Search

==========================================================
60.[]result.class.name;  When I do this I get the Module names before it, so "Module::SubModule::Class", is there a way of getting just "Class" –  Abe @Abe: result.class.name.split('::').last; X.How do I get the name of a Ruby class? - Stack Overflow
http://stackoverflow.com/questions/826210/how-do-i-get-the-name-of-a-ruby-class
How do I get the name of a Ruby class? - Stack Overflow

==========================================================
61.[] ; X.ruby on rails - Why do I get an undefined method 'have' error when running Rspec? - Stack Overflow
http://stackoverflow.com/questions/20406625/why-do-i-get-an-undefined-method-have-error-when-running-rspec
ruby on rails - Why do I get an undefined method 'have' error when running Rspec? - Stack Overflow
 2 down vote accepted
	

The have family of matchers was deprecated in RSpec 2.99 and has been moved to a separate rspec-collection_matchers gem as of RSpec 3.0. This is discussed in http://myronmars.to/n/dev-blog/2013/11/rspec-2-99-and-3-0-betas-have-been-released, which also gives the suggested approach to migrating to 3.0. Specifically, it recommends installing/using RSpec 2.99 in order to see the deprecation messages associated with items that were removed/moved in 3.0.
 0 down vote
	

OK, got it.

I had the wrong version number in my Gemfile.

Before:

gem 'rspec-rails', '~> 3.0.0.beta'

After:

gem 'rspec-rails'


==========================================================
62.[]TODO BUG; 1.PRY said to be great per Danielle; 2. require 'ruby-debug' then use;  debugger; X.Running ruby debug in rspec? - Stack Overflow
http://stackoverflow.com/questions/5446594/running-ruby-debug-in-rspec
Running ruby debug in rspec? - Stack Overflow

==========================================================
66.[]CRLF issue ; X.Cygwin - cd in bash script - Super User
http://superuser.com/questions/189259/cygwin-cd-in-bash-script
Cygwin - cd in bash script - Super User
 10 down vote accepted
	

What kind of line endings does your script have? For Cygwin bash script to work properly (without having to set special options), it must have Unix line endings (LF) rather than DOS line endings (CR-LF). If you saved the script with DOS line endings, bash will see your argument to cd as /c/Code/Project^M, where ^M is a CR, and won't find a directory by that name.

To see which kind of line endings it has, you can execute file scriptname, where scriptname is the name of your script. To convert the script so that it has Unix line endings, execute d2u scriptname.

Don't use Notepad to edit Cygwin bash scripts. It always saves files with DOS line endings.
share|improve this answer
	
answered Sep 16 '10 at 15:22
garyjohn
13.9k21733
	
	 
	
Aha! That was it. I was using Vim to edit it. Thankyou :-) –  Dan Sep 16 '10 at 15:33
	 
	
Vim will work fine. It automatically detects whether files have Unix or DOS line endings and will save them the same way. By default, Cygwin's vim will create new files with Unix line endings, but Windows' gvim will create new file with DOS line endings. You can change that. See :help ff and :help ffs. –  garyjohn Sep 16 '10 at 18:46 
==========================================================
67.[]Use "\n" instead of '\n' ; X.ruby - How to do a newline in output - Stack Overflow
http://stackoverflow.com/questions/2060253/how-to-do-a-newline-in-output
ruby - How to do a newline in output - Stack Overflow

==========================================================
68.[] ; X.raise_error matcher - Built in matchers - RSpec Expectations - RSpec - Relish
https://www.relishapp.com/rspec/rspec-expectations/v/2-6/docs/built-in-matchers/raise-error-matcher
raise_error matcher - Built in matchers - RSpec Expectations - RSpec - Relish
 expect specific error message using a regular expression

    Given
        a file named "expect_error_with_regex.rb" with:

        describe "matching error message with regex" do
          it "matches the error message" do
            expect { raise StandardError, "my message" }.
              to raise_error(StandardError, /my mess/)
          end
        end


==========================================================
69.[] ; X.How do I search within an array of hashes by hash values in ruby? - Stack Overflow
http://stackoverflow.com/questions/2244915/how-do-i-search-within-an-array-of-hashes-by-hash-values-in-ruby
How do I search within an array of hashes by hash values in ruby? - Stack Overflow


You're looking for Enumerable#select (also called find_all):

@fathers.select {|father| father["age"] > 35 }
# => [ { "age" => 40, "father" => "Bob" },
#      { "age" => 50, "father" => "Batman" } ]

Per the documentation, it "returns an array containing all elements of [the enumerable, in this case @fathers] for which block is not false."

==========================================================
70.[]LIST many cmds ; X.Module: Enumerable (Ruby 2.1.0)
http://ruby-doc.org/core-2.1.0/Enumerable.html#method-i-select
Module: Enumerable (Ruby 2.1.0)
(1..4).map { |i| i*i }      #=> [1, 4, 9, 16]
(1..4).collect { "cat"  }   #=> ["cat", "cat", "cat", "cat"]
==========================================================
71.[] ; X.Sorting Ruby Arrays - failed with TypeError: can't convert Symbol into Integer - Stack Overflow
http://stackoverflow.com/questions/5684805/sorting-ruby-arrays-failed-with-typeerror-cant-convert-symbol-into-integer
Sorting Ruby Arrays - failed with TypeError: can't convert Symbol into Integer - Stack Overflow
 accepted
	

Your input is actually a pair (name, [book]), so make sure you only sort the second element of the pair (the books array):

[source_array[0], source_array[1].sort_by { |book| book[:price].to_i }]


==========================================================
72.[] ; X.Command line - RSpec Core - RSpec - Relish
https://relishapp.com/rspec/rspec-core/docs/command-line
Command line - RSpec Core - RSpec - Relish
Command line

The rspec command comes with several options you can use to customize RSpec's
behavior, including output formats, filtering examples, etc.

For a full list of options, run the rspec command with the --help flag:

$ rspec --help

Run with ruby

Generally, life is simpler if you just use the rspec command. If you must use the ruby
command, however, you'll need to require "rspec/autorun". You can
either pass a -rrspec/autorun CLI option when invoking ruby, or add
a require 'rspec/autorun' to one or more of your spec files.

It is conventional to put configuration in and require assorted support files
from spec/spec_helper.rb. It is also conventional to require that file from
the spec files using require 'spec_helper'. This works because RSpec
implicitly adds the spec directory to the LOAD_PATH. It also adds lib, so
your implementation files will be on the LOAD_PATH as well.

If you're using the ruby command, you'll need to do this yourself
(with the -I option). Putting these together, your command might be
something like this:

$ ruby -Ilib -Ispec -rrspec/autorun path/to/spec.rb

Topics

    --example option
    --format option
    --line_number option
    --tag option
    line number appended to file path
    exit status
    rake task
    --dry-run
    --fail-fast
    --init option
    --order (new in rspec-core-2.8)
    --require option
    pattern option
    Randomization can be reproduced across test runs
    run with ruby command
    run with warnings enabled

Last published about 1 month ago by myronmarston.

===========================================================
.[]
===========================================================
.[]
===========================================================
.[]Rspec-tip; When an RB "won't compile", Rspec Refuses to Include it!!!   = BUG DOC`require': cannot load such file -- ./lib/store (LoadError);  Store runner bugged. ; upon re-deleting the default path, got; 
C:\Users\amoroney\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin\ruby.exe -e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift) C:\Users\amoroney\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin/rspec C:/amsrc/rmtry/spec/lib/store_spec.rb --require teamcity/spec/runner/formatter/teamcity/formatter --format Spec::Runner::Formatter::TeamcityFormatter
Testing started at 3:58 PM ...
C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require': cannot load such file -- ./lib/store (LoadError)
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from C:/amsrc/rmtry/spec/lib/store_spec.rb:2:in `<top (required)>'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `load'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `block in load_spec_files'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `each'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `load_spec_files'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/command_line.rb:22:in `run'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/runner.rb:90:in `run'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/runner.rb:17:in `block in autorun'

Process finished with exit code 1
Empty test suite.

===========================================================
.[]BUG DOC Store runner bugged.
.[]rspec-tip; do not add the filepath default, nor the documentation format so can better see in rubymine; 150115w4p. //? seemed like again had to add in rubymine runner options, default-path 'C:\Users\amoroney\amPrjs\rmtry\'

the weird thing was that the store was not working?? 

C:\Users\amoroney\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin\ruby.exe -e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift) C:\Users\amoroney\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin/rspec C:/amsrc/rmtry/spec/lib/store_spec.rb --require teamcity/spec/runner/formatter/teamcity/formatter --format Spec::Runner::Formatter::TeamcityFormatter default-path 'C:\Users\amoroney\amPrjs\rmtry\'
Testing started at 3:57 PM ...

C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `load': cannot load such file -- C:/Users/amoroney/amPrjs/rmtry (LoadError)
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `block in load_spec_files'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `each'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `load_spec_files'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/command_line.rb:22:in `run'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/runner.rb:90:in `run'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/runner.rb:17:in `block in autorun'

Process finished with exit code 1
Empty test suite.

===========================================================
.[]BUG DOC; no tests found ; due to mybug, not finished coding. 

MY SRC
C:\amsrc\rmtry\spec\lib\terminal_spec.rb
require 'rspec' # core, expectations, mocks, support
require './lib/terminal'
require './lib/store'
require './lib/cart'
require './spec/lib/custom_stdout_matcher'

describe 'Terminal/Shopping/' do
...


SRC of api; 
C:\Users\amoroney\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\lib\ruby\site_ruby\1.9.1\rubygems\custom_require.rb

ref'd by ; 
C:\Users\amoroney\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin\ruby.exe -e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift) C:\Users\amoroney\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin/rspec C:/amsrc/rmtry/spec/lib/terminal_spec.rb --require teamcity/spec/runner/formatter/teamcity/formatter --format Spec::Runner::Formatter::TeamcityFormatter
Testing started at 3:31 PM ...
C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require': C:/amsrc/rmtry/lib/terminal.rb:21: syntax error, unexpected $end, expecting keyword_end (SyntaxError)
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from C:/amsrc/rmtry/spec/lib/terminal_spec.rb:2:in `<top (required)>'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `load'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `block in load_spec_files'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `each'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/configuration.rb:886:in `load_spec_files'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/command_line.rb:22:in `run'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/runner.rb:90:in `run'
	from C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/rspec-core-3.0.0.beta1/lib/rspec/core/runner.rb:17:in `block in autorun'

Process finished with exit code 1
Empty test suite.


===========================================================
.[]GREEN, READY FOR GUI
===========================================================
.[]cs ruby call rspc cmd also ok on win; 

C:\amsrc\rmtry>
C:\amsrc\rmtry>
C:\amsrc\rmtry>
C:\amsrc\rmtry>
C:\amsrc\rmtry>
C:\amsrc\rmtry>C:\Users\amoroney\amApps\lang\ruby\RailsInstaller\Ruby1.9.3\bin
/rspec  --format doc

Cart
  Context: There is a Store associated with this Cart to check products.
    #add Raises error if add a new item without any arguments, ie no Id.
    #count is 1 for one element.
    #count is 2 for two elements.
    #clear Resets a populated cart back to empty.
    #report Describes contents of one item as a string.
    #report Describes its contents of two items as a string.
    #report Describes an empty cart as having no elements.

Store
  #ConvertDollarsToPennies Rounds up.
  #Find_Product Returns true upon searching a product that is in the store.
  #Find_Product Returns false upon searching a product that is not in the store.
  #Find_Product Returns false upon searching for an invalid product.
  #Add_Product Raises error if duplicate product is entered.
  #Add_Product Raises error if discount quantity but not price is entered.
  #Add_Product Raises error if add a new item without any arguments, ie no Id.
  #Add_Product Raises error if add a new item without both Id and Price.
  #count is 1 for one element.
  #count is 2 for two elements.
  #clear Resets a populated store back to empty.
  #report Describes its contents as a string.
  #report Describes an empty store as having no elements.
  #Price_in_pennies: Raises error if price-check an empty store.
  #Price_in_pennies: Raises error if price-check an item not in the store.
  #Price_in_pennies: Returns the price in pennies for quantity of one.
  #Price_in_pennies: Returns the non-discounted price in pennies when there is no discount volume quantity.
  #Price_in_pennies: Returns the discounted total price in pennies for purchase size exactly equal to the discount volume quantity.
  #Price_in_pennies: Returns the minimally discounted total price in pennies for purchase size larger than the discount volume quantity.
  FUTURE Possible Refactorings.
    Products Map Uses symbols instead of strings as hash keys. (PENDING: cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby)

Terminal/Shopping/
  Says Hello to the (Admin) user upon instantiation.
  Does Not accept a redefined $stdin nor $stdout.
  TBA
    asks for product pricelist. (PENDING: Not yet implemented)
    allows entry of product-id, price (PENDING: Not yet implemented)
    allows entry of product-id, price, qualifying quantity, and discounted price (PENDING: Not yet implemented)
    verifies item added to a cart is in the store. (PENDING: (first dependency))

Pending:
  Store FUTURE Possible Refactorings. Products Map Uses symbols instead of strings as hash keys.
    # cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby
    # ./spec/lib/store_spec.rb:110
  Terminal/Shopping/ TBA asks for product pricelist.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:20
  Terminal/Shopping/ TBA allows entry of product-id, price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:22
  Terminal/Shopping/ TBA allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:24
  Terminal/Shopping/ TBA verifies item added to a cart is in the store.
    # (first dependency)
    # ./spec/lib/terminal_spec.rb:26

Finished in 0.20314 seconds
33 examples, 0 failures, 5 pending
===========================================================
.[]plain is also ok with regular simple rspc cmd on win; 

C:\amsrc\rmtry>rspec
..........................*..****

Pending:
  Store FUTURE Possible Refactorings. Products Map Uses symbols instead of strings as hash keys.
    # cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby
    # ./spec/lib/store_spec.rb:110
  Terminal/Shopping/ TBA asks for product pricelist.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:20
  Terminal/Shopping/ TBA allows entry of product-id, price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:22
  Terminal/Shopping/ TBA allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:24
  Terminal/Shopping/ TBA verifies item added to a cart is in the store.
    # (first dependency)
    # ./spec/lib/terminal_spec.rb:26

Finished in 0.06251 seconds
33 examples, 0 failures, 5 pending

C:\amsrc\rmtry>
===========================================================
.[]fro mrubymine; BUG, can only do the std way, so this does not show doc right now.

Testing started at 12:12 PM ...

Pending: Temporarily disabled with xit

Pending: Not implementing this to make an example.

Pending: Language deficit, until: Be able to pass Block to a Regex, not just an Object, eg ; expect{"aaabbb"}.to match(/ab/)

Pending: Read up on the actual code to sort this out.

Pending: On windows, chk commandline and/or path and/or the raw code.
0{:id=>"a", :price=>100, :numberForBatchDiscount=>0, :batchPrice=>0}
Pending: refactor this prior code to make nice examples
C:/amsrc/rmtry/specLibD, [2014-01-15T12:12:58.319579 #4752] DEBUG -- : initialize=  //Logging Test.

Pending: Not yet implemented

Pending: Not yet implemented

27 examples, 0 failures, 19 passed, 8 pending

Finished in 0.130727 seconds

Process finished with exit code 0

===========================================================
.[]SKIPPED SOME
===========================================================
.[]
====================================================
.[]"Grn. Ready to add front end, ie admin enter products."
2014-01-09Thu.21:33:34

Annes-MacBook-Pro:rmtry amoroney$ pwd
/Users/amoroney/src/rmtry
Annes-MacBook-Pro:rmtry amoroney$ rspec --format documentation

Cart
  #Using the Store, Buy items - Features:
    #add Raises error if add a new item without any arguments, ie no Id.
    #Add Raises an error if add a product that is not in the store. (PENDING: Not yet implemented)
    #count is 1 for one element.
    #count is 2 for two elements.
    #clear Resets a populated cart back to empty.
    #report Describes contents of one item as a string.
    #report Describes its contents of two items as a string.
    #report Describes an empty cart as having no elements.

Store
  #Find_Product Returns true upon searching a product that is in the store.
  #Find_Product Returns false upon searching a product that is not in the store.
  #Find_Product Returns false upon searching for an invalid product.
  #Add_Product Raises error if discount quantity but not price is entered.
  #ConvertDollarsToPennies Rounds up.
  #Non-Discounted Item - Features:
    #Add_Product Raises error if add a new item without any arguments, ie no Id.
    #Add_Product Raises error if add a new item without both Id and Price.
    #count is 1 for one element.
    #count is 2 for two elements.
    #clear Resets a populated store back to empty.
    #report Describes its contents as a string.
    #report Describes an empty store as having no elements.
  FUTURE possible work.
    Products Map Uses symbols instead of strings as hash keys. (PENDING: cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby)

Terminal/Shopping/
  Says Hello to the (Admin) user upon instantiation.
  Does Not accept a redefined $stdin nor $stdout.
  TBA
    asks for product pricelist. (PENDING: Not yet implemented)
    allows entry of product-id, price (PENDING: Not yet implemented)
    allows entry of product-id, price, qualifying quantity, and discounted price (PENDING: Not yet implemented)
    verifies item added to a cart is in the store. (PENDING: (first dependency))

Pending:
  Cart #Using the Store, Buy items - Features: #Add Raises an error if add a product that is not in the store.
    # Not yet implemented
    # ./spec/lib/cart_spec.rb:14
  Store FUTURE possible work. Products Map Uses symbols instead of strings as hash keys.
    # cf Ruby Design rules; https:\/\/github.com\/styleguide\/ruby
    # ./spec/lib/store_spec.rb:77
  Terminal/Shopping/ TBA asks for product pricelist.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:26
  Terminal/Shopping/ TBA allows entry of product-id, price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:28
  Terminal/Shopping/ TBA allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:30
  Terminal/Shopping/ TBA verifies item added to a cart is in the store.
    # (first dependency)
    # ./spec/lib/terminal_spec.rb:32

Finished in 0.01096 seconds
27 examples, 0 failures, 6 pending
Annes-MacBook-Pro:rmtry amoroney$

====================================================
.[]Git's output telling about line end changes; 2014-01-09Thu.15:12:14

$ git commit -m "Grn. Validation mostly done.  MVC reorg and renamed many things."
/opt/boxen/homebrew/bin/hub:2060: warning: Insecure world writable dir /Users/amoroney/src/rmtry in PATH, mode 040777
warning: CRLF will be replaced by LF in .idea/runConfigurations/Run_spec__cart_spec___rmtry.xml.
The file will have its original line endings in your working directory.
warning: CRLF will be replaced by LF in .idea/runConfigurations/Run_spec__terminal_spec___rmtry.xml.
The file will have its original line endings in your working directory.
[master f990482] Grn. Validation mostly done.  MVC reorg and renamed many things.
warning: CRLF will be replaced by LF in .idea/runConfigurations/Run_spec__cart_spec___rmtry.xml.
The file will have its original line endings in your working directory.
warning: CRLF will be replaced by LF in .idea/runConfigurations/Run_spec__terminal_spec___rmtry.xml.
The file will have its original line endings in your working directory.
 20 files changed, 707 insertions(+), 512 deletions(-)
 create mode 100644 .idea/runConfigurations/Run_spec__cart_spec___rmtry.xml
 create mode 100644 .idea/runConfigurations/Run_spec__terminal_spec___rmtry.xml
 rewrite lib/store.rb (60%)
 rewrite spec/lib/store_spec.rb (63%)
Annes-MacBook-Pro:rmtry amoroney$

====================================================
.[]Mac line endings; I thought maybe rubymine would help? No, not so, I never committed before, so yet to see.

$ git add -A
/opt/boxen/homebrew/bin/hub:2060: warning: Insecure world writable dir /Users/amoroney/src/rmtry in PATH, mode 040777
warning: CRLF will be replaced by LF in .idea/runConfigurations/Run_spec__cart_spec___rmtry.xml.
The file will have its original line endings in your working directory.
warning: CRLF will be replaced by LF in .idea/runConfigurations/Run_spec__terminal_spec___rmtry.xml.
The file will have its original line endings in your working directory.
Annes-MacBook-Pro:rmtry amoroney$ pwd
/Users/amoroney/src/rmtry

====================================================
.[]Now on the mac. 2014-01-09Thu.15:09:33@ green.

Annes-MacBook-Pro:zPrjsRubyMine amoroney$ cd /Users/amoroney/src/rmtry/
Annes-MacBook-Pro:rmtry amoroney$ pwd
/Users/amoroney/src/rmtry
Annes-MacBook-Pro:rmtry amoroney$ ls
doc	lib	spec	specFut
Annes-MacBook-Pro:rmtry amoroney$ git status/opt/boxen/homebrew/bin/hub:2060: warning: Insecure world writable dir /Users/amoroney/src/rmtry in PATH, mode 040777
# On branch master
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   .idea/codeStyleSettings.xml
#	modified:   .idea/misc.xml
#	modified:   .idea/rmtry.iml
#	modified:   .idea/runConfigurations/Run_spec__zRspec_spec___rmtry.xml
#	modified:   .idea/runConfigurations/Run_spec__zRuby_spec___rmtry.xml
#	modified:   .idea/runConfigurations/allRspec1.xml
#	modified:   .idea/vcs.xml
#	modified:   .idea/workspace.xml
#	modified:   lib/cart.rb
#	modified:   lib/store.rb
#	modified:   lib/terminal.rb
#	modified:   spec/lib/cart_spec.rb
#	modified:   spec/lib/store_spec.rb
#	modified:   spec/lib/terminal_spec.rb
#	modified:   specFut/db.rb
#	modified:   specFut/db_spec.rb
#	modified:   specFut/zRuby_spec.rb
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	.idea/runConfigurations/Run_spec__cart_spec___rmtry.xml
#	.idea/runConfigurations/Run_spec__terminal_spec___rmtry.xml
no changes added to commit (use "git add" and/or "git commit -a")
Annes-MacBook-Pro:rmtry amoroney$
Annes-MacBook-Pro:rmtry amoroney$
Annes-MacBook-Pro:rmtry amoroney$
Annes-MacBook-Pro:rmtry amoroney$ rspec --format documentation

Cart
  #Using the Store, Buy items - Features:
    #add Raises error if add a new item without any arguments, ie no Id.
    #count is 1 for one element.
    #count is 2 for two elements.
    #clear Resets a populated cart back to empty.
    #report Describes contents of one item as a string.
    #report Describes its contents of two items as a string.
    #report Describes an empty cart as having no elements.

Store
  #Add_Product Raises error if discount quantity but not price is entered.
  #ConvertDollarsToPennies Rounds up.
  #Non-Discounted Item - Features:
    #Add_Product Raises error if add a new item without any arguments, ie no Id.
    #Add_to_Cart Raises error if add a product that is not in the store. (PENDING: Not yet implemented)
    #Add_Product Raises error if add a new item without both Id and Price.
    #count is 1 for one element.
    #count is 2 for two elements.
    #clear Resets a populated store back to empty.
    #report Describes its contents as a string.
    #report Describes an empty store as having no elements.

Terminal/Shopping/
  Says Hello to the (Admin) user upon instantiation.
  Does Not accept a redefined $stdin nor $stdout.
  TBA
    asks for product pricelist. (PENDING: Not yet implemented)
    allows entry of product-id, price (PENDING: Not yet implemented)
    allows entry of product-id, price, qualifying quantity, and discounted price (PENDING: Not yet implemented)
    verifies item added to a cart is in the store. (PENDING: (first dependency))

Pending:
  Store #Non-Discounted Item - Features: #Add_to_Cart Raises error if add a product that is not in the store.
    # Not yet implemented
    # ./spec/lib/store_spec.rb:29
  Terminal/Shopping/ TBA asks for product pricelist.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:26
  Terminal/Shopping/ TBA allows entry of product-id, price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:28
  Terminal/Shopping/ TBA allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:30
  Terminal/Shopping/ TBA verifies item added to a cart is in the store.
    # (first dependency)
    # ./spec/lib/terminal_spec.rb:32

Finished in 0.00916 seconds
23 examples, 0 failures, 5 pending
Annes-MacBook-Pro:rmtry amoroney$
Annes-MacBook-Pro:rmtry amoroney$
==================================
1-8w 9.50p 
1.
RED. 1.BUG the if/else tests on store validation are not correct. ; 2.Now have the 3 proper MVC classes: Terminal/GUI, Store/Controller/Model1, Cart/Model2.

======================================
1-8w 7.23p; 

1.
basic CRUD minus Delete on non-special element.

amoroney@surf256pro /cygdrive/c/amsrc/rmtry
$ rspec.bat --format documentation

Cart/
  #add Raises error if add a new item without both Id and Price.
  #count is 1 for one element.
  #count is 2 for two elements.
  #report Describes its contents as a string.
  #clear Resets a populated cart back to empty.
  #report Describes an empty cart as having no elements.

Finished in 0.03125 seconds
6 examples, 0 failures

2.
reorg so that all my self-doc tests are in specFUT, thus not making overly long listings.

3.
this fixes the hash and rspec-matches issues.
==================================
.[]RubyMine-Tip; Use osx10.5+ keymap to get ctrl-a/e line start/end.

$ git log
commit a2f6b6fac749102c1367fb8e50766625f9f7dc92
Author: Anne Moroney <annemoroney@alum.mit.edu>
Date:   Sun Jan 5 01:58:56 2014 +0000

    Grn. New zRuby_specs to hold documentation/learning. Deleted cruft from 'real' files. NEXT; Pending list of Rspecs for Api is begun, not yet simple enough.

commit d314a26db7eb3785bb11e7f6a3aa9ce2bbc5af67
Author: Anne Moroney <annemoroney@alum.mit.edu>
Date:   Thu Jan 2 15:24:59 2014 -0500

    rspec small trials, green/tba. frm earlier. rmtry\terminal aka gifts. w8.

amoroney@surf256pro ~/amPrjs/rmtry
$ /cygdrive/c/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/rspec.bat
.****..D, [2014-01-05T01:59:32.334684 #2744] DEBUG -- : initialize=  //Logging Test.
.*..*.**..

Pending:
  Gifts/ Can to_s.
    # !!Add crud test
    # ./spec/lib/gifts_spec.rb:11
  Terminal/Shopping/ #Startup-initialization asks for product pricelist.
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:8
  Terminal/Shopping/ #Startup-initialization allows entry of product-id, price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:10
  Terminal/Shopping/ #Startup-initialization allows entry of product-id, price, qualifying quantity, and discounted price
    # Not yet implemented
    # ./spec/lib/terminal_spec.rb:12
  zRuby/Logging-Tips/ Is testable by capturing sysout.
    # IDK how to use the let(:outs) statement.
    # ./spec/lib/zRuby_spec.rb:31
  zRuby/Error-Handling-Tips/ Throws NotImplementedError when...??
    # Not yet implemented
    # ./spec/lib/zRuby_spec.rb:48
  zRuby/Rspec-Tips Will not run any "it" test that is changed to "xit".
    # Temporarily disabled with xit
    # ./spec/lib/zRuby_spec.rb:56
  zRuby/Rspec-Tips Will not run and will explain the cause for delay with the the given pending clause's text.
    # Not implementing this to make an example.
    # ./spec/lib/zRuby_spec.rb:58

Finished in 0.01563 seconds
17 examples, 0 failures, 8 pending

amoroney@surf256pro ~/amPrjs/rmtry
$
===============================================
.[]fyi, win rspec inside rails in cli


amoroney@surf256pro ~/amPrjs/rmtry
$ which rspec
/cygdrive/c/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/rspec

amoroney@surf256pro ~/amPrjs/rmtry
$ cat /cygdrive/c/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/rspec
#!C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/ruby.exe
#
# This file was generated by RubyGems.
#
# The application 'rspec-core' is installed as part of a gem, and
# this file is here to facilitate running it.
#

require 'rubygems'

version = ">= 0"

if ARGV.first
  str = ARGV.first
  str = str.dup.force_encoding("BINARY") if str.respond_to? :force_encoding
  if str =~ /\A_(.*)_\z/
    version = $1
    ARGV.shift
  end
end

gem 'rspec-core', version
load Gem.bin_path('rspec-core', 'rspec', version)

amoroney@surf256pro ~/amPrjs/rmtry
$

amoroney@surf256pro ~/amPrjs/rmtry
$ cat /cygdrive/c/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/rspec.bat
@ECHO OFF
IF NOT "%~f0" == "~f0" GOTO :WinNT
@"ruby.exe" "C:/Users/amoroney/amApps/lang/ruby/RailsInstaller/Ruby1.9.3/bin/rspec" %1 %2 %3 %4 %5 %6 %7 %8 %9
GOTO :EOF
:WinNT
@"ruby.exe" "%~dpn0" %*

amoroney@surf256pro ~/amPrjs/rmtry
$

============================================
.[]todo run rspec partially in cygwin, as opposed to; 
$ rspec.bat   --format doc
which works but of course runs all of them. 
